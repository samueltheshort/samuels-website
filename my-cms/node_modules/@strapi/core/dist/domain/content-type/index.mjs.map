{"version":3,"file":"index.mjs","sources":["../../../src/domain/content-type/index.ts"],"sourcesContent":["import { cloneDeep } from 'lodash/fp';\nimport _ from 'lodash';\nimport { yup, contentTypes as contentTypesUtils } from '@strapi/utils';\nimport type { Schema } from '@strapi/types';\nimport { validateContentTypeDefinition } from './validator';\n\nexport type ContentTypeDefinition = {\n  schema: Schema.ContentType;\n  actions: Record<string, unknown>;\n  lifecycles: Record<string, unknown>;\n};\n\nconst {\n  CREATED_AT_ATTRIBUTE,\n  UPDATED_AT_ATTRIBUTE,\n  PUBLISHED_AT_ATTRIBUTE,\n  CREATED_BY_ATTRIBUTE,\n  UPDATED_BY_ATTRIBUTE,\n} = contentTypesUtils.constants;\n\nconst createContentType = (uid: string, definition: ContentTypeDefinition) => {\n  try {\n    validateContentTypeDefinition(definition);\n  } catch (e) {\n    if (e instanceof yup.ValidationError) {\n      throw new Error(`Content Type Definition is invalid for ${uid}'.\\n${e.errors}`);\n    }\n\n    throw e;\n  }\n\n  const { schema, actions, lifecycles } = cloneDeep(definition);\n\n  // general info\n  Object.assign(schema, {\n    uid,\n    modelType: 'contentType',\n    kind: schema.kind || 'collectionType',\n    __schema__: pickSchema(definition.schema),\n    modelName: definition.schema.info.singularName,\n    actions,\n    lifecycles,\n  });\n\n  addTimestamps(schema);\n\n  // Published at is added regardless of draft and publish being enabled\n  // In case it is not enabled, value will be always published, and it will not contain a draft\n  addDraftAndPublish(schema);\n\n  addCreatorFields(schema);\n\n  return schema;\n};\n\nconst addTimestamps = (schema: Schema.ContentType) => {\n  // attributes\n  Object.assign(schema.attributes, {\n    [CREATED_AT_ATTRIBUTE]: {\n      type: 'datetime',\n    },\n    // TODO: handle on edit set to new date\n    [UPDATED_AT_ATTRIBUTE]: {\n      type: 'datetime',\n    },\n  });\n};\n\nconst addDraftAndPublish = (schema: Schema.ContentType) => {\n  if (!_.has(schema, 'options.draftAndPublish')) {\n    _.set(schema, 'options.draftAndPublish', false); // Disabled by default\n  }\n\n  schema.attributes[PUBLISHED_AT_ATTRIBUTE] = {\n    type: 'datetime',\n    configurable: false,\n    writable: true,\n    visible: false,\n    default() {\n      return new Date();\n    },\n  };\n};\n\nconst addCreatorFields = (schema: Schema.ContentType) => {\n  const isPrivate = !_.get(schema, 'options.populateCreatorFields', false);\n\n  schema.attributes[CREATED_BY_ATTRIBUTE] = {\n    type: 'relation',\n    relation: 'oneToOne',\n    target: 'admin::user',\n    configurable: false,\n    writable: false,\n    visible: false,\n    useJoinTable: false,\n    private: isPrivate,\n  };\n\n  schema.attributes[UPDATED_BY_ATTRIBUTE] = {\n    type: 'relation',\n    relation: 'oneToOne',\n    target: 'admin::user',\n    configurable: false,\n    writable: false,\n    visible: false,\n    useJoinTable: false,\n    private: isPrivate,\n  };\n};\n\nconst getGlobalId = (schema: Schema.ContentType, prefix?: string) => {\n  const modelName = schema.info.singularName;\n  const globalId = prefix ? `${prefix}-${modelName}` : modelName;\n\n  return schema.globalId || _.upperFirst(_.camelCase(globalId));\n};\n\nconst pickSchema = (model: Schema.ContentType) => {\n  const schema = _.cloneDeep(\n    _.pick(model, [\n      'connection',\n      'collectionName',\n      'info',\n      'options',\n      'pluginOptions',\n      'attributes',\n      'kind',\n    ])\n  );\n\n  schema.kind = model.kind || 'collectionType';\n  return schema;\n};\n\nexport { createContentType, getGlobalId };\n"],"names":["contentTypesUtils"],"mappings":";;;;AAYA,MAAM;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAIA,aAAkB;AAEhB,MAAA,oBAAoB,CAAC,KAAa,eAAsC;AACxE,MAAA;AACF,kCAA8B,UAAU;AAAA,WACjC,GAAG;AACN,QAAA,aAAa,IAAI,iBAAiB;AAC9B,YAAA,IAAI,MAAM,0CAA0C,GAAG;AAAA,EAAO,EAAE,MAAM,EAAE;AAAA,IAAA;AAG1E,UAAA;AAAA,EAAA;AAGR,QAAM,EAAE,QAAQ,SAAS,WAAW,IAAI,UAAU,UAAU;AAG5D,SAAO,OAAO,QAAQ;AAAA,IACpB;AAAA,IACA,WAAW;AAAA,IACX,MAAM,OAAO,QAAQ;AAAA,IACrB,YAAY,WAAW,WAAW,MAAM;AAAA,IACxC,WAAW,WAAW,OAAO,KAAK;AAAA,IAClC;AAAA,IACA;AAAA,EAAA,CACD;AAED,gBAAc,MAAM;AAIpB,qBAAmB,MAAM;AAEzB,mBAAiB,MAAM;AAEhB,SAAA;AACT;AAEA,MAAM,gBAAgB,CAAC,WAA+B;AAE7C,SAAA,OAAO,OAAO,YAAY;AAAA,IAC/B,CAAC,oBAAoB,GAAG;AAAA,MACtB,MAAM;AAAA,IACR;AAAA;AAAA,IAEA,CAAC,oBAAoB,GAAG;AAAA,MACtB,MAAM;AAAA,IAAA;AAAA,EACR,CACD;AACH;AAEA,MAAM,qBAAqB,CAAC,WAA+B;AACzD,MAAI,CAAC,EAAE,IAAI,QAAQ,yBAAyB,GAAG;AAC3C,MAAA,IAAI,QAAQ,2BAA2B,KAAK;AAAA,EAAA;AAGzC,SAAA,WAAW,sBAAsB,IAAI;AAAA,IAC1C,MAAM;AAAA,IACN,cAAc;AAAA,IACd,UAAU;AAAA,IACV,SAAS;AAAA,IACT,UAAU;AACR,iCAAW,KAAK;AAAA,IAAA;AAAA,EAEpB;AACF;AAEA,MAAM,mBAAmB,CAAC,WAA+B;AACvD,QAAM,YAAY,CAAC,EAAE,IAAI,QAAQ,iCAAiC,KAAK;AAEhE,SAAA,WAAW,oBAAoB,IAAI;AAAA,IACxC,MAAM;AAAA,IACN,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,UAAU;AAAA,IACV,SAAS;AAAA,IACT,cAAc;AAAA,IACd,SAAS;AAAA,EACX;AAEO,SAAA,WAAW,oBAAoB,IAAI;AAAA,IACxC,MAAM;AAAA,IACN,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,UAAU;AAAA,IACV,SAAS;AAAA,IACT,cAAc;AAAA,IACd,SAAS;AAAA,EACX;AACF;AAEM,MAAA,cAAc,CAAC,QAA4B,WAAoB;AAC7D,QAAA,YAAY,OAAO,KAAK;AAC9B,QAAM,WAAW,SAAS,GAAG,MAAM,IAAI,SAAS,KAAK;AAErD,SAAO,OAAO,YAAY,EAAE,WAAW,EAAE,UAAU,QAAQ,CAAC;AAC9D;AAEA,MAAM,aAAa,CAAC,UAA8B;AAChD,QAAM,SAAS,EAAE;AAAA,IACf,EAAE,KAAK,OAAO;AAAA,MACZ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACD,CAAA;AAAA,EACH;AAEO,SAAA,OAAO,MAAM,QAAQ;AACrB,SAAA;AACT;"}