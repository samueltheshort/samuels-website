{"version":3,"file":"config-loader.js","sources":["../../src/configuration/config-loader.ts"],"sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport { loadConfigFile } from '../utils/load-config-file';\n\nconst VALID_EXTENSIONS = ['.js', '.json'];\n\n// These filenames are restricted, but will also emit a warning that the filename is probably a mistake\nconst MISTAKEN_FILENAMES = {\n  middleware: 'middlewares',\n  plugin: 'plugins',\n};\n\n// the following are restricted to prevent conflicts with existing STRAPI_* env vars or root level config options\n// must all be lowercase to match validator\nconst RESTRICTED_FILENAMES = [\n  // existing env vars\n  'uuid',\n  'hosting',\n  'license',\n  'enforce',\n  'disable',\n  'enable',\n  'telemetry',\n\n  // reserved for future internal use\n  'strapi',\n  'internal',\n\n  // root level config options\n  // TODO: it would be better to move these out of the root config and allow them to be loaded\n  'launchedAt',\n  'serveAdminPanel',\n  'autoReload',\n  'environment',\n  'packageJsonStrapi',\n  'info',\n  'autoReload',\n  'dirs',\n\n  // probably mistaken/typo filenames\n  ...Object.keys(MISTAKEN_FILENAMES),\n];\n\n// Existing Strapi configuration files\nconst STRAPI_CONFIG_FILENAMES = [\n  'admin',\n  'server',\n  'api',\n  'database',\n  'middlewares',\n  'plugins',\n  'features',\n];\n\n// Note: we don't have access to strapi logger at this point so we can't use it\nconst logWarning = (message: string) => {\n  console.warn(message);\n};\n\nexport default (dir: string) => {\n  if (!fs.existsSync(dir)) return {};\n\n  const allFiles = fs.readdirSync(dir, { withFileTypes: true });\n  const seenFilenames = new Set<string>();\n  const configFiles = allFiles.reduce((acc, file) => {\n    const baseName = path.basename(file.name, path.extname(file.name));\n    const baseNameLower = baseName.toLowerCase();\n    const extension = path.extname(file.name);\n    const extensionLower = extension.toLowerCase();\n\n    if (!file.isFile()) {\n      return acc;\n    }\n\n    if (!VALID_EXTENSIONS.includes(extensionLower)) {\n      logWarning(\n        `Config file not loaded, extension must be one of ${VALID_EXTENSIONS.join(',')}): ${\n          file.name\n        }`\n      );\n      return acc;\n    }\n\n    if (RESTRICTED_FILENAMES.includes(baseNameLower)) {\n      logWarning(`Config file not loaded, restricted filename: ${file.name}`);\n\n      // suggest the filename they probably meant\n      if (baseNameLower in MISTAKEN_FILENAMES) {\n        console.log(\n          `Did you mean ${MISTAKEN_FILENAMES[baseNameLower as keyof typeof MISTAKEN_FILENAMES]}]} ?`\n        );\n      }\n\n      return acc;\n    }\n\n    // restricted names and Strapi configs are also restricted from being prefixes\n    const restrictedPrefix = [...RESTRICTED_FILENAMES, ...STRAPI_CONFIG_FILENAMES].find(\n      (restrictedName) =>\n        restrictedName.startsWith(baseNameLower) && restrictedName !== baseNameLower\n    );\n    if (restrictedPrefix) {\n      logWarning(\n        `Config file not loaded, filename cannot start with ${restrictedPrefix}: ${file.name}`\n      );\n    }\n\n    /**\n     *  Note: If user config files contain non-alpha-numeric characters, we won't be able to auto-load env\n     * into them.\n     *\n     * For the initial feature, we will only load our internal configs, but later when we provide a method\n     * to define the shape of custom configs, we will need to warn that those filenames can't be loaded\n     * for technical limitations on env variable names\n     *  */\n    // if (!/^[A-Za-z0-9]+$/.test(baseName)) {\n    //   logWarning(\"Using a non-alphanumeric config file name prevents Strapi from auto-loading it from environment variables.\")\n    // }\n\n    // filter filenames without case-insensitive uniqueness\n    if (seenFilenames.has(baseNameLower)) {\n      logWarning(\n        `Config file not loaded, case-insensitive name matches other config file: ${file.name}`\n      );\n      return acc;\n    }\n    seenFilenames.add(baseNameLower);\n\n    // If file passes all filters, add it to the accumulator\n    acc.push(file);\n    return acc;\n  }, [] as fs.Dirent[]);\n\n  return configFiles.reduce(\n    (acc, file) => {\n      const key = path.basename(file.name, path.extname(file.name));\n\n      acc[key] = loadConfigFile(path.resolve(dir, file.name));\n\n      return acc;\n    },\n    {} as Record<string, unknown>\n  );\n};\n"],"names":["fs","path","loadConfigFile"],"mappings":";;;;;;;AAIA,MAAM,mBAAmB,CAAC,OAAO,OAAO;AAGxC,MAAM,qBAAqB;AAAA,EACzB,YAAY;AAAA,EACZ,QAAQ;AACV;AAIA,MAAM,uBAAuB;AAAA;AAAA,EAE3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA,GAAG,OAAO,KAAK,kBAAkB;AACnC;AAGA,MAAM,0BAA0B;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAGA,MAAM,aAAa,CAAC,YAAoB;AACtC,UAAQ,KAAK,OAAO;AACtB;AAEA,MAAe,gBAAA,CAAC,QAAgB;AAC9B,MAAI,CAACA,YAAAA,QAAG,WAAW,GAAG,UAAU,CAAC;AAEjC,QAAM,WAAWA,YAAAA,QAAG,YAAY,KAAK,EAAE,eAAe,MAAM;AACtD,QAAA,oCAAoB,IAAY;AACtC,QAAM,cAAc,SAAS,OAAO,CAAC,KAAK,SAAS;AAC3C,UAAA,WAAWC,sBAAK,SAAS,KAAK,MAAMA,cAAAA,QAAK,QAAQ,KAAK,IAAI,CAAC;AAC3D,UAAA,gBAAgB,SAAS,YAAY;AAC3C,UAAM,YAAYA,cAAA,QAAK,QAAQ,KAAK,IAAI;AAClC,UAAA,iBAAiB,UAAU,YAAY;AAEzC,QAAA,CAAC,KAAK,UAAU;AACX,aAAA;AAAA,IAAA;AAGT,QAAI,CAAC,iBAAiB,SAAS,cAAc,GAAG;AAC9C;AAAA,QACE,oDAAoD,iBAAiB,KAAK,GAAG,CAAC,MAC5E,KAAK,IACP;AAAA,MACF;AACO,aAAA;AAAA,IAAA;AAGL,QAAA,qBAAqB,SAAS,aAAa,GAAG;AACrC,iBAAA,gDAAgD,KAAK,IAAI,EAAE;AAGtE,UAAI,iBAAiB,oBAAoB;AAC/B,gBAAA;AAAA,UACN,gBAAgB,mBAAmB,aAAgD,CAAC;AAAA,QACtF;AAAA,MAAA;AAGK,aAAA;AAAA,IAAA;AAIT,UAAM,mBAAmB,CAAC,GAAG,sBAAsB,GAAG,uBAAuB,EAAE;AAAA,MAC7E,CAAC,mBACC,eAAe,WAAW,aAAa,KAAK,mBAAmB;AAAA,IACnE;AACA,QAAI,kBAAkB;AACpB;AAAA,QACE,sDAAsD,gBAAgB,KAAK,KAAK,IAAI;AAAA,MACtF;AAAA,IAAA;AAgBE,QAAA,cAAc,IAAI,aAAa,GAAG;AACpC;AAAA,QACE,4EAA4E,KAAK,IAAI;AAAA,MACvF;AACO,aAAA;AAAA,IAAA;AAET,kBAAc,IAAI,aAAa;AAG/B,QAAI,KAAK,IAAI;AACN,WAAA;AAAA,EACT,GAAG,EAAiB;AAEpB,SAAO,YAAY;AAAA,IACjB,CAAC,KAAK,SAAS;AACP,YAAA,MAAMA,sBAAK,SAAS,KAAK,MAAMA,cAAAA,QAAK,QAAQ,KAAK,IAAI,CAAC;AAExD,UAAA,GAAG,IAAIC,8BAAeD,cAAAA,QAAK,QAAQ,KAAK,KAAK,IAAI,CAAC;AAE/C,aAAA;AAAA,IACT;AAAA,IACA,CAAA;AAAA,EACF;AACF;;"}