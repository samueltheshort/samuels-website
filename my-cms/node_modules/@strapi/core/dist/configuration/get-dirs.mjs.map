{"version":3,"file":"get-dirs.mjs","sources":["../../src/configuration/get-dirs.ts"],"sourcesContent":["import { join, resolve } from 'path';\nimport { get } from 'lodash/fp';\n\nimport type { Core } from '@strapi/types';\nimport type { StrapiOptions } from '../Strapi';\n\nexport type Options = {\n  app: string;\n  dist: string;\n};\n\nexport const getDirs = (\n  { appDir, distDir }: StrapiOptions,\n  config: { server: Partial<Core.Config.Server> }\n): Core.StrapiDirectories => ({\n  dist: {\n    root: distDir,\n    src: join(distDir, 'src'),\n    api: join(distDir, 'src', 'api'),\n    components: join(distDir, 'src', 'components'),\n    extensions: join(distDir, 'src', 'extensions'),\n    policies: join(distDir, 'src', 'policies'),\n    middlewares: join(distDir, 'src', 'middlewares'),\n    config: join(distDir, 'config'),\n  },\n  app: {\n    root: appDir,\n    src: join(appDir, 'src'),\n    api: join(appDir, 'src', 'api'),\n    components: join(appDir, 'src', 'components'),\n    extensions: join(appDir, 'src', 'extensions'),\n    policies: join(appDir, 'src', 'policies'),\n    middlewares: join(appDir, 'src', 'middlewares'),\n    config: join(appDir, 'config'),\n  },\n  static: {\n    public: resolve(appDir, get('server.dirs.public', config)),\n  },\n});\n"],"names":[],"mappings":";;AAWO,MAAM,UAAU,CACrB,EAAE,QAAQ,QAAA,GACV,YAC4B;AAAA,EAC5B,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,KAAK,KAAK,SAAS,KAAK;AAAA,IACxB,KAAK,KAAK,SAAS,OAAO,KAAK;AAAA,IAC/B,YAAY,KAAK,SAAS,OAAO,YAAY;AAAA,IAC7C,YAAY,KAAK,SAAS,OAAO,YAAY;AAAA,IAC7C,UAAU,KAAK,SAAS,OAAO,UAAU;AAAA,IACzC,aAAa,KAAK,SAAS,OAAO,aAAa;AAAA,IAC/C,QAAQ,KAAK,SAAS,QAAQ;AAAA,EAChC;AAAA,EACA,KAAK;AAAA,IACH,MAAM;AAAA,IACN,KAAK,KAAK,QAAQ,KAAK;AAAA,IACvB,KAAK,KAAK,QAAQ,OAAO,KAAK;AAAA,IAC9B,YAAY,KAAK,QAAQ,OAAO,YAAY;AAAA,IAC5C,YAAY,KAAK,QAAQ,OAAO,YAAY;AAAA,IAC5C,UAAU,KAAK,QAAQ,OAAO,UAAU;AAAA,IACxC,aAAa,KAAK,QAAQ,OAAO,aAAa;AAAA,IAC9C,QAAQ,KAAK,QAAQ,QAAQ;AAAA,EAC/B;AAAA,EACA,QAAQ;AAAA,IACN,QAAQ,QAAQ,QAAQ,IAAI,sBAAsB,MAAM,CAAC;AAAA,EAAA;AAE7D;"}