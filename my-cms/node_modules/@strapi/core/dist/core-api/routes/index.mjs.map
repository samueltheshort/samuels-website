{"version":3,"file":"index.mjs","sources":["../../../src/core-api/routes/index.ts"],"sourcesContent":["import { contentTypes as contentTypeUtils } from '@strapi/utils';\nimport type { Schema } from '@strapi/types';\n\nexport const createRoutes = ({ contentType }: { contentType: Schema.ContentType }) => {\n  if (contentTypeUtils.isSingleType(contentType)) {\n    return getSingleTypeRoutes(contentType);\n  }\n\n  return getCollectionTypeRoutes(contentType);\n};\n\nconst getSingleTypeRoutes = ({ uid, info }: Schema.ContentType) => {\n  return {\n    find: {\n      method: 'GET',\n      path: `/${info.singularName}`,\n      handler: `${uid}.find`,\n      config: {},\n    },\n    update: {\n      method: 'PUT',\n      path: `/${info.singularName}`,\n      handler: `${uid}.update`,\n      config: {},\n    },\n    delete: {\n      method: 'DELETE',\n      path: `/${info.singularName}`,\n      handler: `${uid}.delete`,\n      config: {},\n    },\n  };\n};\n\nconst getCollectionTypeRoutes = ({ uid, info }: Schema.ContentType) => {\n  return {\n    find: {\n      method: 'GET',\n      path: `/${info.pluralName}`,\n      handler: `${uid}.find`,\n      config: {},\n    },\n    findOne: {\n      method: 'GET',\n      path: `/${info.pluralName}/:id`,\n      handler: `${uid}.findOne`,\n      config: {},\n    },\n    create: {\n      method: 'POST',\n      path: `/${info.pluralName}`,\n      handler: `${uid}.create`,\n      config: {},\n    },\n    update: {\n      method: 'PUT',\n      path: `/${info.pluralName}/:id`,\n      handler: `${uid}.update`,\n      config: {},\n    },\n    delete: {\n      method: 'DELETE',\n      path: `/${info.pluralName}/:id`,\n      handler: `${uid}.delete`,\n      config: {},\n    },\n  };\n};\n"],"names":["contentTypeUtils"],"mappings":";AAGO,MAAM,eAAe,CAAC,EAAE,kBAAuD;AAChF,MAAAA,aAAiB,aAAa,WAAW,GAAG;AAC9C,WAAO,oBAAoB,WAAW;AAAA,EAAA;AAGxC,SAAO,wBAAwB,WAAW;AAC5C;AAEA,MAAM,sBAAsB,CAAC,EAAE,KAAK,WAA+B;AAC1D,SAAA;AAAA,IACL,MAAM;AAAA,MACJ,QAAQ;AAAA,MACR,MAAM,IAAI,KAAK,YAAY;AAAA,MAC3B,SAAS,GAAG,GAAG;AAAA,MACf,QAAQ,CAAA;AAAA,IACV;AAAA,IACA,QAAQ;AAAA,MACN,QAAQ;AAAA,MACR,MAAM,IAAI,KAAK,YAAY;AAAA,MAC3B,SAAS,GAAG,GAAG;AAAA,MACf,QAAQ,CAAA;AAAA,IACV;AAAA,IACA,QAAQ;AAAA,MACN,QAAQ;AAAA,MACR,MAAM,IAAI,KAAK,YAAY;AAAA,MAC3B,SAAS,GAAG,GAAG;AAAA,MACf,QAAQ,CAAA;AAAA,IAAC;AAAA,EAEb;AACF;AAEA,MAAM,0BAA0B,CAAC,EAAE,KAAK,WAA+B;AAC9D,SAAA;AAAA,IACL,MAAM;AAAA,MACJ,QAAQ;AAAA,MACR,MAAM,IAAI,KAAK,UAAU;AAAA,MACzB,SAAS,GAAG,GAAG;AAAA,MACf,QAAQ,CAAA;AAAA,IACV;AAAA,IACA,SAAS;AAAA,MACP,QAAQ;AAAA,MACR,MAAM,IAAI,KAAK,UAAU;AAAA,MACzB,SAAS,GAAG,GAAG;AAAA,MACf,QAAQ,CAAA;AAAA,IACV;AAAA,IACA,QAAQ;AAAA,MACN,QAAQ;AAAA,MACR,MAAM,IAAI,KAAK,UAAU;AAAA,MACzB,SAAS,GAAG,GAAG;AAAA,MACf,QAAQ,CAAA;AAAA,IACV;AAAA,IACA,QAAQ;AAAA,MACN,QAAQ;AAAA,MACR,MAAM,IAAI,KAAK,UAAU;AAAA,MACzB,SAAS,GAAG,GAAG;AAAA,MACf,QAAQ,CAAA;AAAA,IACV;AAAA,IACA,QAAQ;AAAA,MACN,QAAQ;AAAA,MACR,MAAM,IAAI,KAAK,UAAU;AAAA,MACzB,SAAS,GAAG,GAAG;AAAA,MACf,QAAQ,CAAA;AAAA,IAAC;AAAA,EAEb;AACF;"}