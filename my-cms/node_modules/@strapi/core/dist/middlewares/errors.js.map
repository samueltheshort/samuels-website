{"version":3,"file":"errors.js","sources":["../../src/middlewares/errors.ts"],"sourcesContent":["import { errors } from '@strapi/utils';\nimport type { Core } from '@strapi/types';\n\nimport { formatApplicationError, formatHttpError, formatInternalError } from '../services/errors';\n\nconst errorMiddleware: Core.MiddlewareFactory = (/* _, { strapi } */) => {\n  return async (ctx, next) => {\n    try {\n      await next();\n\n      if (!ctx.response._explicitStatus) {\n        return ctx.notFound();\n      }\n    } catch (error) {\n      if (error instanceof errors.ApplicationError) {\n        const { status, body } = formatApplicationError(error);\n        ctx.status = status;\n        ctx.body = body;\n        return;\n      }\n\n      if (error instanceof errors.HttpError) {\n        const { status, body } = formatHttpError(error);\n        ctx.status = status;\n        ctx.body = body;\n        return;\n      }\n\n      strapi.log.error(error);\n\n      const { status, body } = formatInternalError(error);\n      ctx.status = status;\n      ctx.body = body;\n    }\n  };\n};\n\nexport { errorMiddleware as errors };\n"],"names":["errors","status","body","formatApplicationError","formatHttpError","formatInternalError"],"mappings":";;;;AAKA,MAAM,kBAA0C,MAAyB;AAChE,SAAA,OAAO,KAAK,SAAS;AACtB,QAAA;AACF,YAAM,KAAK;AAEP,UAAA,CAAC,IAAI,SAAS,iBAAiB;AACjC,eAAO,IAAI,SAAS;AAAA,MAAA;AAAA,aAEf,OAAO;AACV,UAAA,iBAAiBA,mBAAO,kBAAkB;AAC5C,cAAM,EAAE,QAAAC,SAAQ,MAAAC,MAAK,IAAIC,8BAAuB,KAAK;AACrD,YAAI,SAASF;AACb,YAAI,OAAOC;AACX;AAAA,MAAA;AAGE,UAAA,iBAAiBF,mBAAO,WAAW;AACrC,cAAM,EAAE,QAAAC,SAAQ,MAAAC,MAAK,IAAIE,uBAAgB,KAAK;AAC9C,YAAI,SAASH;AACb,YAAI,OAAOC;AACX;AAAA,MAAA;AAGK,aAAA,IAAI,MAAM,KAAK;AAEtB,YAAM,EAAE,QAAQ,SAASG,OAAAA,oBAAoB,KAAK;AAClD,UAAI,SAAS;AACb,UAAI,OAAO;AAAA,IAAA;AAAA,EAEf;AACF;;"}