{"version":3,"file":"webhook-store.mjs","sources":["../../src/services/webhook-store.ts"],"sourcesContent":["/**\n * Webhook store is the implementation of webhook storage over the core_store\n */\n\nimport { errors } from '@strapi/utils';\nimport type { Model, Database } from '@strapi/database';\nimport type { Modules } from '@strapi/types';\n\nconst { ValidationError } = errors;\n\nconst webhookModel: Model = {\n  uid: 'strapi::webhook',\n  singularName: 'strapi_webhooks',\n  tableName: 'strapi_webhooks',\n  attributes: {\n    id: {\n      type: 'increments',\n    },\n    name: {\n      type: 'string',\n    },\n    url: {\n      type: 'text',\n    },\n    headers: {\n      type: 'json',\n    },\n    events: {\n      type: 'json',\n    },\n    enabled: {\n      type: 'boolean',\n    },\n  },\n};\n\ntype Webhook = Modules.WebhookStore.Webhook;\ntype DBOutput = Omit<Webhook, 'id' | 'isEnabled'> & { id: string | number; enabled: boolean };\ntype DBInput = Omit<DBOutput, 'id'>;\n\nconst toDBObject = (data: Webhook): DBInput => {\n  return {\n    name: data.name,\n    url: data.url,\n    headers: data.headers,\n    events: data.events,\n    enabled: data.isEnabled,\n  };\n};\n\nconst fromDBObject = (row: DBOutput): Webhook => {\n  return {\n    id: typeof row.id === 'number' ? row.id.toString() : row.id,\n    name: row.name,\n    url: row.url,\n    headers: row.headers,\n    events: row.events,\n    isEnabled: row.enabled,\n  };\n};\n\nconst webhookEventValidator = async (allowedEvents: Map<string, string>, events: string[]) => {\n  const allowedValues = Array.from(allowedEvents.values());\n\n  events.forEach((event) => {\n    if (allowedValues.includes(event)) {\n      return;\n    }\n\n    throw new ValidationError(`Webhook event ${event} is not supported`);\n  });\n};\n\nexport interface WebhookStore {\n  allowedEvents: Map<string, string>;\n  addAllowedEvent(key: string, value: string): void;\n  removeAllowedEvent(key: string): void;\n  listAllowedEvents(): string[];\n  getAllowedEvent(key: string): string | undefined;\n  findWebhooks(): Promise<Webhook[]>;\n  findWebhook(id: string): Promise<Webhook | null>;\n  createWebhook(data: Webhook): Promise<Webhook>;\n  updateWebhook(id: string, data: Webhook): Promise<Webhook | null>;\n  deleteWebhook(id: string): Promise<Webhook | null>;\n}\n\nconst createWebhookStore = ({ db }: { db: Database }): WebhookStore => {\n  return {\n    allowedEvents: new Map([\n      ['ENTRY_CREATE', 'entry.create'],\n      ['ENTRY_UPDATE', 'entry.update'],\n      ['ENTRY_DELETE', 'entry.delete'],\n      ['ENTRY_PUBLISH', 'entry.publish'],\n      ['ENTRY_UNPUBLISH', 'entry.unpublish'],\n      ['ENTRY_DRAFT_DISCARD', 'entry.draft-discard'],\n    ]),\n    addAllowedEvent(key, value) {\n      this.allowedEvents.set(key, value);\n    },\n    removeAllowedEvent(key) {\n      this.allowedEvents.delete(key);\n    },\n    listAllowedEvents() {\n      return Array.from(this.allowedEvents.keys());\n    },\n    getAllowedEvent(key) {\n      return this.allowedEvents.get(key);\n    },\n    async findWebhooks() {\n      const results = await db.query('strapi::webhook').findMany();\n\n      return results.map(fromDBObject);\n    },\n    async findWebhook(id) {\n      const result = await db.query('strapi::webhook').findOne({ where: { id } });\n      return result ? fromDBObject(result) : null;\n    },\n    async createWebhook(data) {\n      await webhookEventValidator(this.allowedEvents, data.events);\n\n      return db\n        .query('strapi::webhook')\n        .create({\n          data: toDBObject({ ...data, isEnabled: true }),\n        })\n        .then(fromDBObject);\n    },\n    async updateWebhook(id, data) {\n      await webhookEventValidator(this.allowedEvents, data.events);\n\n      const webhook = await db.query('strapi::webhook').update({\n        where: { id },\n        data: toDBObject(data),\n      });\n\n      return webhook ? fromDBObject(webhook) : null;\n    },\n    async deleteWebhook(id) {\n      const webhook = await db.query('strapi::webhook').delete({ where: { id } });\n      return webhook ? fromDBObject(webhook) : null;\n    },\n  };\n};\n\nexport { webhookModel, createWebhookStore };\n"],"names":[],"mappings":"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"}