{"version":3,"file":"routing.mjs","sources":["../../../src/services/server/routing.ts"],"sourcesContent":["import Router from '@koa/router';\nimport { has } from 'lodash/fp';\nimport { yup } from '@strapi/utils';\nimport type { Core } from '@strapi/types';\n\nimport createEndpointComposer from './compose-endpoint';\n\nconst policyOrMiddlewareSchema = yup.lazy((value) => {\n  if (typeof value === 'string') {\n    return yup.string().required();\n  }\n\n  if (typeof value === 'function') {\n    return yup.mixed().isFunction();\n  }\n\n  return yup.object({\n    name: yup.string().required(),\n    options: yup.object().notRequired(), // any options\n  });\n});\n\nconst routeSchema = yup.object({\n  method: yup.string().oneOf(['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'ALL']).required(),\n  path: yup.string().required(),\n  handler: yup.lazy((value) => {\n    if (typeof value === 'string') {\n      return yup.string().required();\n    }\n\n    if (Array.isArray(value)) {\n      return yup.array().required();\n    }\n\n    return yup.mixed().isFunction().required();\n  }),\n  config: yup\n    .object({\n      auth: yup.lazy((value) => {\n        if (value === false) {\n          return yup.boolean().required();\n        }\n\n        return yup.object({\n          scope: yup.array().of(yup.string()).required(),\n        });\n      }),\n      policies: yup\n        .array()\n        // FIXME: fixed in yup v1\n        .of(policyOrMiddlewareSchema as any)\n        .notRequired(),\n      middlewares: yup\n        .array()\n        // FIXME: fixed in yup v1\n        .of(policyOrMiddlewareSchema as any)\n        .notRequired(),\n    })\n    .notRequired(),\n});\n\nconst validateRouteConfig = (routeConfig: Core.RouteInput) => {\n  try {\n    return routeSchema.validateSync(routeConfig, {\n      strict: true,\n      abortEarly: false,\n      stripUnknown: true,\n    });\n  } catch (error) {\n    if (error instanceof yup.ValidationError) {\n      throw new Error(`Invalid route config ${error.message}`);\n    }\n  }\n};\n\nconst createRouteManager = (strapi: Core.Strapi, opts: { type?: string } = {}) => {\n  const { type } = opts;\n\n  const composeEndpoint = createEndpointComposer(strapi);\n\n  const createRoute = (route: Core.RouteInput, router: Router) => {\n    validateRouteConfig(route);\n\n    // NOTE: the router type is used to tag controller actions and for authentication / authorization so we need to pass this info down to the route level\n    const routeWithInfo = Object.assign(route, {\n      info: {\n        ...(route.info ?? {}),\n        type: type || 'api',\n      },\n    });\n\n    composeEndpoint(routeWithInfo, { router });\n  };\n\n  const addRoutes = (routes: Core.Router | Core.RouteInput[], router: Router) => {\n    if (Array.isArray(routes)) {\n      routes.forEach((route) => createRoute(route, router));\n    } else if (routes.routes) {\n      const subRouter = new Router({ prefix: routes.prefix });\n\n      routes.routes.forEach((route) => {\n        const hasPrefix = has('prefix', route.config);\n        createRoute(route, hasPrefix ? router : subRouter);\n      });\n\n      return router.use(subRouter.routes(), subRouter.allowedMethods());\n    }\n  };\n\n  return {\n    addRoutes,\n  };\n};\n\nexport { validateRouteConfig, createRouteManager };\n"],"names":[],"mappings":";;;;AAOA,MAAM,2BAA2B,IAAI,KAAK,CAAC,UAAU;AAC/C,MAAA,OAAO,UAAU,UAAU;AACtB,WAAA,IAAI,OAAO,EAAE,SAAS;AAAA,EAAA;AAG3B,MAAA,OAAO,UAAU,YAAY;AACxB,WAAA,IAAI,MAAM,EAAE,WAAW;AAAA,EAAA;AAGhC,SAAO,IAAI,OAAO;AAAA,IAChB,MAAM,IAAI,OAAO,EAAE,SAAS;AAAA,IAC5B,SAAS,IAAI,OAAO,EAAE,YAAY;AAAA;AAAA,EAAA,CACnC;AACH,CAAC;AAED,MAAM,cAAc,IAAI,OAAO;AAAA,EAC7B,QAAQ,IAAI,SAAS,MAAM,CAAC,OAAO,QAAQ,OAAO,SAAS,UAAU,KAAK,CAAC,EAAE,SAAS;AAAA,EACtF,MAAM,IAAI,OAAO,EAAE,SAAS;AAAA,EAC5B,SAAS,IAAI,KAAK,CAAC,UAAU;AACvB,QAAA,OAAO,UAAU,UAAU;AACtB,aAAA,IAAI,OAAO,EAAE,SAAS;AAAA,IAAA;AAG3B,QAAA,MAAM,QAAQ,KAAK,GAAG;AACjB,aAAA,IAAI,MAAM,EAAE,SAAS;AAAA,IAAA;AAG9B,WAAO,IAAI,MAAA,EAAQ,WAAA,EAAa,SAAS;AAAA,EAAA,CAC1C;AAAA,EACD,QAAQ,IACL,OAAO;AAAA,IACN,MAAM,IAAI,KAAK,CAAC,UAAU;AACxB,UAAI,UAAU,OAAO;AACZ,eAAA,IAAI,QAAQ,EAAE,SAAS;AAAA,MAAA;AAGhC,aAAO,IAAI,OAAO;AAAA,QAChB,OAAO,IAAI,MAAM,EAAE,GAAG,IAAI,OAAQ,CAAA,EAAE,SAAS;AAAA,MAAA,CAC9C;AAAA,IAAA,CACF;AAAA,IACD,UAAU,IACP,MAAA,EAEA,GAAG,wBAA+B,EAClC,YAAY;AAAA,IACf,aAAa,IACV,MAAA,EAEA,GAAG,wBAA+B,EAClC,YAAY;AAAA,EAChB,CAAA,EACA,YAAY;AACjB,CAAC;AAEK,MAAA,sBAAsB,CAAC,gBAAiC;AACxD,MAAA;AACK,WAAA,YAAY,aAAa,aAAa;AAAA,MAC3C,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,cAAc;AAAA,IAAA,CACf;AAAA,WACM,OAAO;AACV,QAAA,iBAAiB,IAAI,iBAAiB;AACxC,YAAM,IAAI,MAAM,wBAAwB,MAAM,OAAO,EAAE;AAAA,IAAA;AAAA,EACzD;AAEJ;AAEA,MAAM,qBAAqB,CAAC,QAAqB,OAA0B,OAAO;AAC1E,QAAA,EAAE,SAAS;AAEX,QAAA,kBAAkB,uBAAuB,MAAM;AAE/C,QAAA,cAAc,CAAC,OAAwB,WAAmB;AAC9D,wBAAoB,KAAK;AAGnB,UAAA,gBAAgB,OAAO,OAAO,OAAO;AAAA,MACzC,MAAM;AAAA,QACJ,GAAI,MAAM,QAAQ,CAAC;AAAA,QACnB,MAAM,QAAQ;AAAA,MAAA;AAAA,IAChB,CACD;AAEe,oBAAA,eAAe,EAAE,QAAQ;AAAA,EAC3C;AAEM,QAAA,YAAY,CAAC,QAAyC,WAAmB;AACzE,QAAA,MAAM,QAAQ,MAAM,GAAG;AACzB,aAAO,QAAQ,CAAC,UAAU,YAAY,OAAO,MAAM,CAAC;AAAA,IAAA,WAC3C,OAAO,QAAQ;AACxB,YAAM,YAAY,IAAI,OAAO,EAAE,QAAQ,OAAO,QAAQ;AAE/C,aAAA,OAAO,QAAQ,CAAC,UAAU;AAC/B,cAAM,YAAY,IAAI,UAAU,MAAM,MAAM;AAChC,oBAAA,OAAO,YAAY,SAAS,SAAS;AAAA,MAAA,CAClD;AAED,aAAO,OAAO,IAAI,UAAU,UAAU,UAAU,gBAAgB;AAAA,IAAA;AAAA,EAEpE;AAEO,SAAA;AAAA,IACL;AAAA,EACF;AACF;"}