{"version":3,"file":"policy.mjs","sources":["../../../src/services/server/policy.ts"],"sourcesContent":["import { policy as policyUtils, errors } from '@strapi/utils';\nimport type { Core } from '@strapi/types';\n\nconst createPolicicesMiddleware = (route: Core.Route, strapi: Core.Strapi) => {\n  const policiesConfig = route?.config?.policies ?? [];\n  const resolvedPolicies = strapi.get('policies').resolve(policiesConfig, route.info);\n\n  const policiesMiddleware: Core.MiddlewareHandler = async (ctx, next) => {\n    const context = policyUtils.createPolicyContext('koa', ctx);\n\n    for (const { handler, config } of resolvedPolicies) {\n      const result = await handler(context, config, { strapi });\n\n      if (![true, undefined].includes(result)) {\n        throw new errors.PolicyError();\n      }\n    }\n\n    await next();\n  };\n\n  return policiesMiddleware;\n};\n\nexport { createPolicicesMiddleware };\n"],"names":["policyUtils"],"mappings":";AAGM,MAAA,4BAA4B,CAAC,OAAmB,WAAwB;AAC5E,QAAM,iBAAiB,OAAO,QAAQ,YAAY,CAAC;AAC7C,QAAA,mBAAmB,OAAO,IAAI,UAAU,EAAE,QAAQ,gBAAgB,MAAM,IAAI;AAE5E,QAAA,qBAA6C,OAAO,KAAK,SAAS;AACtE,UAAM,UAAUA,OAAY,oBAAoB,OAAO,GAAG;AAE1D,eAAW,EAAE,SAAS,OAAO,KAAK,kBAAkB;AAClD,YAAM,SAAS,MAAM,QAAQ,SAAS,QAAQ,EAAE,QAAQ;AAExD,UAAI,CAAC,CAAC,MAAM,MAAS,EAAE,SAAS,MAAM,GAAG;AACjC,cAAA,IAAI,OAAO,YAAY;AAAA,MAAA;AAAA,IAC/B;AAGF,UAAM,KAAK;AAAA,EACb;AAEO,SAAA;AACT;"}