{"version":3,"file":"fields.js","sources":["../../../../src/services/document-service/transform/fields.ts"],"sourcesContent":["import type { Modules, UID } from '@strapi/types';\n\ntype Fields = Modules.Documents.Params.Pick<UID.Schema, 'fields'>['fields'];\n\nexport const transformFields = (fields: Fields): Fields => {\n  // If  it's a string, and it doesn't contain documentId, should be an array\n  if (typeof fields === 'string') {\n    // '*' => '*'\n    if (fields === '*') {\n      return fields;\n    }\n\n    // '' => 'documentId'\n    if (fields === '') {\n      return 'documentId';\n    }\n\n    // 'name,description' => 'name,description,documentId'\n    if (!fields.split(',').includes('documentId')) {\n      return `${fields},documentId`;\n    }\n  }\n\n  // It's not an array, ignore it\n  if (!fields || !Array.isArray(fields)) {\n    // If fields is empty, return it as is\n    return fields;\n  }\n\n  // Ensure we are always selecting the documentId\n  // ['name', 'description'] => ['name', 'description', 'documentId']\n  if (!fields.includes('documentId')) {\n    fields.push('documentId');\n  }\n\n  return fields;\n};\n"],"names":[],"mappings":";;AAIa,MAAA,kBAAkB,CAAC,WAA2B;AAErD,MAAA,OAAO,WAAW,UAAU;AAE9B,QAAI,WAAW,KAAK;AACX,aAAA;AAAA,IAAA;AAIT,QAAI,WAAW,IAAI;AACV,aAAA;AAAA,IAAA;AAIT,QAAI,CAAC,OAAO,MAAM,GAAG,EAAE,SAAS,YAAY,GAAG;AAC7C,aAAO,GAAG,MAAM;AAAA,IAAA;AAAA,EAClB;AAIF,MAAI,CAAC,UAAU,CAAC,MAAM,QAAQ,MAAM,GAAG;AAE9B,WAAA;AAAA,EAAA;AAKT,MAAI,CAAC,OAAO,SAAS,YAAY,GAAG;AAClC,WAAO,KAAK,YAAY;AAAA,EAAA;AAGnB,SAAA;AACT;;"}