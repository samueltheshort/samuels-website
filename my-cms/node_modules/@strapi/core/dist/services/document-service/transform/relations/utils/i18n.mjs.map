{"version":3,"file":"i18n.mjs","sources":["../../../../../../src/services/document-service/transform/relations/utils/i18n.ts"],"sourcesContent":["import { UID } from '@strapi/types';\nimport { LongHandDocument } from './types';\n\nexport const isLocalizedContentType = (uid: UID.Schema) => {\n  const model = strapi.getModel(uid);\n  return strapi.plugin('i18n').service('content-types').isLocalizedContentType(model);\n};\n\nexport const getDefaultLocale = () => {\n  return strapi.plugin('i18n').service('locales').getDefaultLocale();\n};\n\nexport const getRelationTargetLocale = (\n  relation: LongHandDocument,\n  opts: {\n    targetUid: UID.Schema;\n    sourceUid: UID.Schema;\n    sourceLocale?: string | null;\n  }\n) => {\n  const targetLocale = relation.locale || opts.sourceLocale;\n\n  const isTargetLocalized = isLocalizedContentType(opts.targetUid);\n  const isSourceLocalized = isLocalizedContentType(opts.sourceUid);\n\n  // Both source and target locales should match\n  if (isSourceLocalized && isTargetLocalized) {\n    return opts.sourceLocale;\n  }\n\n  if (isTargetLocalized) {\n    return targetLocale;\n  }\n\n  return null;\n};\n"],"names":[],"mappings":"AAGa,MAAA,yBAAyB,CAAC,QAAoB;AACnD,QAAA,QAAQ,OAAO,SAAS,GAAG;AAC1B,SAAA,OAAO,OAAO,MAAM,EAAE,QAAQ,eAAe,EAAE,uBAAuB,KAAK;AACpF;AAEO,MAAM,mBAAmB,MAAM;AACpC,SAAO,OAAO,OAAO,MAAM,EAAE,QAAQ,SAAS,EAAE,iBAAiB;AACnE;AAEa,MAAA,0BAA0B,CACrC,UACA,SAKG;AACG,QAAA,eAAe,SAAS,UAAU,KAAK;AAEvC,QAAA,oBAAoB,uBAAuB,KAAK,SAAS;AACzD,QAAA,oBAAoB,uBAAuB,KAAK,SAAS;AAG/D,MAAI,qBAAqB,mBAAmB;AAC1C,WAAO,KAAK;AAAA,EAAA;AAGd,MAAI,mBAAmB;AACd,WAAA;AAAA,EAAA;AAGF,SAAA;AACT;"}