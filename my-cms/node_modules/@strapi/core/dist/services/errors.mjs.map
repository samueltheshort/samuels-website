{"version":3,"file":"errors.mjs","sources":["../../src/services/errors.ts"],"sourcesContent":["import createError from 'http-errors';\nimport { errors } from '@strapi/utils';\n\nconst mapErrorsAndStatus = [\n  {\n    classError: errors.UnauthorizedError,\n    status: 401,\n  },\n  {\n    classError: errors.ForbiddenError,\n    status: 403,\n  },\n  {\n    classError: errors.NotFoundError,\n    status: 404,\n  },\n  {\n    classError: errors.PayloadTooLargeError,\n    status: 413,\n  },\n  {\n    classError: errors.RateLimitError,\n    status: 429,\n  },\n  {\n    classError: errors.NotImplementedError,\n    status: 501,\n  },\n];\n\nconst formatApplicationError = (error: InstanceType<typeof errors.ApplicationError>) => {\n  const errorAndStatus = mapErrorsAndStatus.find((pair) => error instanceof pair.classError);\n  const status = errorAndStatus ? errorAndStatus.status : 400;\n\n  return {\n    status,\n    body: {\n      data: null,\n      error: {\n        status,\n        name: error.name,\n        message: error.message,\n        details: error.details,\n      },\n    },\n  };\n};\n\nconst formatHttpError = (error: createError.HttpError) => {\n  return {\n    status: error.status,\n    body: {\n      data: null,\n      error: {\n        status: error.status,\n        name: error.name,\n        message: error.message,\n        details: error.details,\n      },\n    },\n  };\n};\n\nconst formatInternalError = (error: unknown) => {\n  if (!(error instanceof Error)) {\n    return formatHttpError(createError(500));\n  }\n\n  const httpError = createError(error);\n\n  if (httpError.expose) {\n    return formatHttpError(httpError);\n  }\n\n  return formatHttpError(createError(httpError.status || 500));\n};\n\nexport { formatApplicationError, formatHttpError, formatInternalError };\n"],"names":[],"mappings":";;AAGA,MAAM,qBAAqB;AAAA,EACzB;AAAA,IACE,YAAY,OAAO;AAAA,IACnB,QAAQ;AAAA,EACV;AAAA,EACA;AAAA,IACE,YAAY,OAAO;AAAA,IACnB,QAAQ;AAAA,EACV;AAAA,EACA;AAAA,IACE,YAAY,OAAO;AAAA,IACnB,QAAQ;AAAA,EACV;AAAA,EACA;AAAA,IACE,YAAY,OAAO;AAAA,IACnB,QAAQ;AAAA,EACV;AAAA,EACA;AAAA,IACE,YAAY,OAAO;AAAA,IACnB,QAAQ;AAAA,EACV;AAAA,EACA;AAAA,IACE,YAAY,OAAO;AAAA,IACnB,QAAQ;AAAA,EAAA;AAEZ;AAEM,MAAA,yBAAyB,CAAC,UAAwD;AACtF,QAAM,iBAAiB,mBAAmB,KAAK,CAAC,SAAS,iBAAiB,KAAK,UAAU;AACnF,QAAA,SAAS,iBAAiB,eAAe,SAAS;AAEjD,SAAA;AAAA,IACL;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,OAAO;AAAA,QACL;AAAA,QACA,MAAM,MAAM;AAAA,QACZ,SAAS,MAAM;AAAA,QACf,SAAS,MAAM;AAAA,MAAA;AAAA,IACjB;AAAA,EAEJ;AACF;AAEM,MAAA,kBAAkB,CAAC,UAAiC;AACjD,SAAA;AAAA,IACL,QAAQ,MAAM;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,OAAO;AAAA,QACL,QAAQ,MAAM;AAAA,QACd,MAAM,MAAM;AAAA,QACZ,SAAS,MAAM;AAAA,QACf,SAAS,MAAM;AAAA,MAAA;AAAA,IACjB;AAAA,EAEJ;AACF;AAEM,MAAA,sBAAsB,CAAC,UAAmB;AAC1C,MAAA,EAAE,iBAAiB,QAAQ;AACtB,WAAA,gBAAgB,YAAY,GAAG,CAAC;AAAA,EAAA;AAGnC,QAAA,YAAY,YAAY,KAAK;AAEnC,MAAI,UAAU,QAAQ;AACpB,WAAO,gBAAgB,SAAS;AAAA,EAAA;AAGlC,SAAO,gBAAgB,YAAY,UAAU,UAAU,GAAG,CAAC;AAC7D;"}