{"version":3,"file":"middleware.js","sources":["../../../src/services/metrics/middleware.ts"],"sourcesContent":["import type { Core } from '@strapi/types';\nimport type { Sender } from './sender';\n\ninterface State {\n  currentDay: number | null;\n  counter: number;\n}\n\nconst createMiddleware = ({ sendEvent }: { sendEvent: Sender }) => {\n  const state: State = {\n    currentDay: null,\n    counter: 0,\n  };\n\n  const middleware: Core.MiddlewareHandler = async (ctx, next) => {\n    const { url, method } = ctx.request;\n\n    if (!url.includes('.') && ['GET', 'PUT', 'POST', 'DELETE'].includes(method)) {\n      const dayOfMonth = new Date().getDate();\n\n      if (dayOfMonth !== state.currentDay) {\n        state.currentDay = dayOfMonth;\n        state.counter = 0;\n      }\n\n      // Send max. 1000 events per day.\n      if (state.counter < 1000) {\n        sendEvent('didReceiveRequest', { eventProperties: { url: ctx.request.url } });\n\n        // Increase counter.\n        state.counter += 1;\n      }\n    }\n\n    await next();\n  };\n\n  return middleware;\n};\n\nexport default createMiddleware;\n"],"names":[],"mappings":";AAQA,MAAM,mBAAmB,CAAC,EAAE,gBAAuC;AACjE,QAAM,QAAe;AAAA,IACnB,YAAY;AAAA,IACZ,SAAS;AAAA,EACX;AAEM,QAAA,aAAqC,OAAO,KAAK,SAAS;AAC9D,UAAM,EAAE,KAAK,OAAO,IAAI,IAAI;AAE5B,QAAI,CAAC,IAAI,SAAS,GAAG,KAAK,CAAC,OAAO,OAAO,QAAQ,QAAQ,EAAE,SAAS,MAAM,GAAG;AAC3E,YAAM,cAAa,oBAAI,KAAK,GAAE,QAAQ;AAElC,UAAA,eAAe,MAAM,YAAY;AACnC,cAAM,aAAa;AACnB,cAAM,UAAU;AAAA,MAAA;AAId,UAAA,MAAM,UAAU,KAAM;AACd,kBAAA,qBAAqB,EAAE,iBAAiB,EAAE,KAAK,IAAI,QAAQ,IAAI,GAAG;AAG5E,cAAM,WAAW;AAAA,MAAA;AAAA,IACnB;AAGF,UAAM,KAAK;AAAA,EACb;AAEO,SAAA;AACT;;"}