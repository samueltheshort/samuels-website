{"version":3,"file":"policies.js","sources":["../../src/loaders/policies.ts"],"sourcesContent":["import { join, extname, basename } from 'path';\nimport fse from 'fs-extra';\nimport { importDefault } from '@strapi/utils';\n\nimport type { Core } from '@strapi/types';\n\n// TODO:: allow folders with index.js inside for bigger policies\nexport default async function loadPolicies(strapi: Core.Strapi) {\n  const dir = strapi.dirs.dist.policies;\n\n  if (!(await fse.pathExists(dir))) {\n    return;\n  }\n\n  const policies: Record<string, Core.Policy> = {};\n  const paths = await fse.readdir(dir, { withFileTypes: true });\n\n  for (const fd of paths) {\n    const { name } = fd;\n    const fullPath = join(dir, name);\n\n    if (fd.isFile() && extname(name) === '.js') {\n      const key = basename(name, '.js');\n      policies[key] = importDefault(fullPath);\n    }\n  }\n\n  strapi.get('policies').add(`global::`, policies);\n}\n"],"names":["fse","join","extname","basename","importDefault"],"mappings":";;;;;;AAOA,eAA8B,aAAa,QAAqB;AACxD,QAAA,MAAM,OAAO,KAAK,KAAK;AAE7B,MAAI,CAAE,MAAMA,aAAAA,QAAI,WAAW,GAAG,GAAI;AAChC;AAAA,EAAA;AAGF,QAAM,WAAwC,CAAC;AACzC,QAAA,QAAQ,MAAMA,qBAAI,QAAQ,KAAK,EAAE,eAAe,MAAM;AAE5D,aAAW,MAAM,OAAO;AAChB,UAAA,EAAE,SAAS;AACX,UAAA,WAAWC,KAAAA,KAAK,KAAK,IAAI;AAE/B,QAAI,GAAG,OAAO,KAAKC,KAAQ,QAAA,IAAI,MAAM,OAAO;AACpC,YAAA,MAAMC,KAAAA,SAAS,MAAM,KAAK;AACvB,eAAA,GAAG,IAAIC,YAAA,cAAc,QAAQ;AAAA,IAAA;AAAA,EACxC;AAGF,SAAO,IAAI,UAAU,EAAE,IAAI,YAAY,QAAQ;AACjD;;"}