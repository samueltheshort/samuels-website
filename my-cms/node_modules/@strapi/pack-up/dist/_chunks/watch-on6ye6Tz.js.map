{"version":3,"file":"watch-on6ye6Tz.js","sources":["../../src/node/watch.ts","../../src/cli/commands/watch.ts"],"sourcesContent":["import chokidar from 'chokidar';\nimport path from 'path';\nimport { Observable, distinctUntilChanged, scan, startWith, switchMap } from 'rxjs';\n\nimport { CONFIG_FILE_NAMES, loadConfig } from './core/config';\nimport { getExportExtensionMap, validateExportsOrdering } from './core/exports';\nimport { createLogger } from './core/logger';\nimport { loadPkg, validatePkg } from './core/pkg';\nimport { createBuildContext } from './createBuildContext';\nimport { createWatchTasks } from './createTasks';\nimport { taskHandlers } from './tasks';\n\nimport type { Config } from './core/config';\nimport type { WatchTask } from './createTasks';\nimport type { TaskHandler } from './tasks';\nimport type { CommonCLIOptions } from '../types';\n\ntype WatchCLIOptions = CommonCLIOptions;\n\ninterface WatchOptionsWithoutConfig extends WatchCLIOptions {\n  configFile?: true;\n  config?: never;\n  cwd?: string;\n}\n\ninterface WatchOptionsWithConfig extends WatchCLIOptions {\n  configFile: false;\n  config?: Config;\n  cwd?: string;\n}\n\ntype WatchOptions = WatchOptionsWithConfig | WatchOptionsWithoutConfig;\n\nconst watch = async (opts: WatchOptions) => {\n  const { silent, debug, cwd = process.cwd(), configFile = true, config: providedConfig } = opts;\n\n  const logger = createLogger({ silent, debug });\n\n  logger.debug('watching config files');\n\n  const configFilePaths = ['package.json', ...CONFIG_FILE_NAMES].map((fileName) =>\n    path.resolve(cwd, fileName).split(path.sep).join(path.posix.sep)\n  );\n\n  interface FileEvent {\n    event: 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir';\n    path: string;\n  }\n\n  const watcher$ = new Observable<FileEvent>((subscriber) => {\n    const watcher = chokidar.watch(configFilePaths, {\n      ignoreInitial: true,\n    });\n\n    const handleEvent = (event: FileEvent['event'], filePath: FileEvent['path']) => {\n      subscriber.next({\n        event,\n        path: filePath,\n      });\n    };\n\n    watcher.on('all', handleEvent);\n\n    return () => {\n      watcher.off('all', handleEvent);\n      watcher.close();\n    };\n  });\n\n  const configFiles$ = watcher$.pipe(\n    scan((files, { event, path: filePath }) => {\n      if (event === 'add') {\n        logger.debug('config file added', filePath);\n\n        return [...files, filePath];\n      }\n\n      if (event === 'unlink') {\n        logger.debug('config file removed', filePath);\n\n        return files.filter((fPath) => fPath !== filePath);\n      }\n\n      if (event === 'change') {\n        logger.log(\n          '--------------------------------------------------------------------------------'\n        );\n        logger.info(path.relative(cwd, filePath), 'changed');\n\n        return files.slice(0);\n      }\n\n      return files;\n    }, configFilePaths),\n    startWith(configFilePaths),\n    distinctUntilChanged()\n  );\n\n  const ctx$ = configFiles$.pipe(\n    switchMap(async (configFiles) => {\n      const files = configFiles.map((f) => path.relative(cwd, f));\n\n      const packageJsonPath = files.find((f) => f === 'package.json');\n\n      if (!packageJsonPath) {\n        throw new Error('missing package.json');\n      }\n\n      const rawPkg = await loadPkg({ cwd, logger });\n\n      const validatedPkg = await validatePkg({\n        pkg: rawPkg,\n      }).catch((err) => {\n        logger.error(err.message);\n        process.exit(1);\n      });\n\n      /**\n       * Validate the exports of the package incl. the order of the\n       * exports within the exports map if applicable\n       */\n      const packageJson = await validateExportsOrdering({ pkg: validatedPkg, logger }).catch(\n        (err) => {\n          logger.error(err.message);\n          process.exit(1);\n        }\n      );\n\n      /**\n       * If configFile is true â€“ which is the default, atempt to load the config\n       * otherwise if it's explicitly false then we suspect there might be a config passed\n       * in the options, so we'll use that instead.\n       */\n      const config = configFile ? await loadConfig({ cwd, logger }) : providedConfig;\n      /**\n       * We create tasks based on the exports of the package.json\n       * their handlers are then ran in the order of the exports map\n       * and results are logged to see gradual progress.\n       */\n\n      const extMap = getExportExtensionMap();\n\n      return createBuildContext({\n        config: { ...config },\n        cwd,\n        extMap,\n        logger,\n        pkg: packageJson,\n      }).catch((err) => {\n        logger.error(err.message);\n        process.exit(1);\n      });\n    })\n  );\n\n  ctx$.subscribe(async (ctx) => {\n    const watchTasks = await createWatchTasks(ctx);\n\n    for (const task of watchTasks) {\n      const handler = taskHandlers[task.type] as TaskHandler<WatchTask, unknown>;\n\n      const result$ = handler.run$(ctx, task);\n\n      result$.subscribe({\n        error(err) {\n          handler.fail(ctx, task, err);\n\n          process.exit(1);\n        },\n        next(result) {\n          handler.success(ctx, task, result);\n        },\n      });\n    }\n  });\n};\n\nexport { watch };\nexport type { WatchOptions, WatchOptionsWithConfig, WatchOptionsWithoutConfig, WatchCLIOptions };\n","import { watch as nodeWatch } from '../../node/watch';\nimport { handleError } from '../errors';\n\nimport type { WatchCLIOptions } from '../../node/watch';\n\nexport const watch = async (options: WatchCLIOptions) => {\n  try {\n    await nodeWatch(options);\n  } catch (err) {\n    handleError(err);\n  }\n};\n"],"names":["watch","createLogger","CONFIG_FILE_NAMES","path","Observable","chokidar","scan","startWith","distinctUntilChanged","switchMap","loadPkg","validatePkg","validateExportsOrdering","loadConfig","getExportExtensionMap","createBuildContext","createWatchTasks","taskHandlers","nodeWatch","handleError"],"mappings":"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"}