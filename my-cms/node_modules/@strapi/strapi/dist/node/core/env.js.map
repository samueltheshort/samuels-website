{"version":3,"file":"env.js","sources":["../../../src/node/core/env.ts"],"sourcesContent":["import path from 'node:path';\nimport dotenv from 'dotenv';\nimport { pathExists } from './files';\n\n/**\n * This is the base of _any_ env set for a strapi project,\n * to build a strapi admin panel we require these env variables.\n */\ninterface DefaultEnv {\n  ADMIN_PATH: string;\n  STRAPI_ADMIN_BACKEND_URL: string;\n  STRAPI_TELEMETRY_DISABLED: string;\n}\n\n/**\n * @internal\n *\n * @description Load the .env file if it exists\n */\nconst loadEnv = async (cwd: string) => {\n  const pathToEnv = path.resolve(cwd, '.env');\n\n  if (await pathExists(pathToEnv)) {\n    dotenv.config({ path: pathToEnv });\n  }\n};\n\n/**\n * @internal\n *\n * @description Get all the environment variables that start with `STRAPI_ADMIN_`\n */\nconst getStrapiAdminEnvVars = (defaultEnv: DefaultEnv): Record<string, string> => {\n  return Object.keys(process.env)\n    .filter((key) => key.toUpperCase().startsWith('STRAPI_ADMIN_'))\n    .reduce(\n      (acc, key) => {\n        acc[key] = process.env[key] as string;\n\n        return acc;\n      },\n      defaultEnv as unknown as Record<string, string>\n    );\n};\n\nexport { getStrapiAdminEnvVars, loadEnv };\n"],"names":["path","pathExists","dotenv"],"mappings":";;;;;;;;AAmBM,MAAA,UAAU,OAAO,QAAgB;AACrC,QAAM,YAAYA,cAAA,QAAK,QAAQ,KAAK,MAAM;AAEtC,MAAA,MAAMC,MAAAA,WAAW,SAAS,GAAG;AAC/BC,oBAAAA,QAAO,OAAO,EAAE,MAAM,UAAA,CAAW;AAAA,EAAA;AAErC;AAOM,MAAA,wBAAwB,CAAC,eAAmD;AAChF,SAAO,OAAO,KAAK,QAAQ,GAAG,EAC3B,OAAO,CAAC,QAAQ,IAAI,YAAY,EAAE,WAAW,eAAe,CAAC,EAC7D;AAAA,IACC,CAAC,KAAK,QAAQ;AACZ,UAAI,GAAG,IAAI,QAAQ,IAAI,GAAG;AAEnB,aAAA;AAAA,IACT;AAAA,IACA;AAAA,EACF;AACJ;;;"}