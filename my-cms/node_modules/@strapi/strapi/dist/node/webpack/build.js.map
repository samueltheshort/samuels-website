{"version":3,"file":"build.js","sources":["../../../src/node/webpack/build.ts"],"sourcesContent":["import webpack from 'webpack';\n\nimport { mergeConfigWithUserConfig, resolveProductionConfig } from './config';\nimport { isError } from '../core/errors';\n\nimport type { BuildContext } from '../create-build-context';\n\nconst build = async (ctx: BuildContext) => {\n  const config = await resolveProductionConfig(ctx);\n  const finalConfig = await mergeConfigWithUserConfig(config, ctx);\n\n  ctx.logger.debug('Webpack config', finalConfig);\n\n  return new Promise((resolve, reject) => {\n    webpack(finalConfig, (err, stats) => {\n      if (stats) {\n        if (stats.hasErrors()) {\n          ctx.logger.error(\n            stats.toString({\n              chunks: false,\n              colors: true,\n            })\n          );\n\n          reject();\n        } else if (ctx.options.stats) {\n          ctx.logger.info(\n            stats.toString({\n              chunks: false,\n              colors: true,\n            })\n          );\n        }\n\n        resolve(true);\n      }\n\n      if (err && isError(err)) {\n        ctx.logger.error(err.message);\n        reject();\n      }\n    });\n  });\n};\n\nexport { build };\n"],"names":["config","resolveProductionConfig","mergeConfigWithUserConfig","webpack","isError"],"mappings":";;;;;;;AAOM,MAAA,QAAQ,OAAO,QAAsB;AACnC,QAAAA,WAAS,MAAMC,OAAA,wBAAwB,GAAG;AAChD,QAAM,cAAc,MAAMC,iCAA0BF,UAAQ,GAAG;AAE3D,MAAA,OAAO,MAAM,kBAAkB,WAAW;AAE9C,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC9BG,qBAAAA,QAAA,aAAa,CAAC,KAAK,UAAU;AACnC,UAAI,OAAO;AACL,YAAA,MAAM,aAAa;AACrB,cAAI,OAAO;AAAA,YACT,MAAM,SAAS;AAAA,cACb,QAAQ;AAAA,cACR,QAAQ;AAAA,YACT,CAAA;AAAA,UACH;AAEO,iBAAA;AAAA,QAAA,WACE,IAAI,QAAQ,OAAO;AAC5B,cAAI,OAAO;AAAA,YACT,MAAM,SAAS;AAAA,cACb,QAAQ;AAAA,cACR,QAAQ;AAAA,YACT,CAAA;AAAA,UACH;AAAA,QAAA;AAGF,gBAAQ,IAAI;AAAA,MAAA;AAGV,UAAA,OAAOC,eAAQ,GAAG,GAAG;AACnB,YAAA,OAAO,MAAM,IAAI,OAAO;AACrB,eAAA;AAAA,MAAA;AAAA,IACT,CACD;AAAA,EAAA,CACF;AACH;;"}