{"version":3,"file":"staticFiles.js","sources":["../../src/node/staticFiles.ts"],"sourcesContent":["import fs from 'node:fs/promises';\nimport path from 'node:path';\nimport outdent from 'outdent';\nimport { createElement } from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { DefaultDocument } from '@strapi/admin/_internal';\n\nimport type { BuildContext } from './create-build-context';\n\nconst getEntryModule = (ctx: BuildContext): string => {\n  const pluginsObject = ctx.plugins\n    .map(({ name, importName }) => `'${name}': ${importName}`)\n    .join(',\\n');\n\n  const pluginsImport = ctx.plugins\n    .map(({ importName, modulePath }) => `import ${importName} from '${modulePath}';`)\n    .join('\\n');\n\n  return outdent`\n        /**\n         * This file was automatically generated by Strapi.\n         * Any modifications made will be discarded.\n         */\n        ${pluginsImport}\n        import { renderAdmin } from \"@strapi/strapi/admin\"\n\n        ${\n          ctx.customisations?.modulePath\n            ? `import customisations from '${ctx.customisations.modulePath}'`\n            : ''\n        }\n\n        renderAdmin(\n          document.getElementById(\"strapi\"),\n          {\n            ${ctx.customisations?.modulePath ? 'customisations,' : ''}\n            ${ctx.features ? `features: ${JSON.stringify(ctx.features)},` : ''}\n            plugins: {\n        ${pluginsObject}\n            }\n        })\n      `;\n};\n\ninterface GetDocumentHTMLArgs extends Pick<BuildContext, 'logger'> {\n  props?: {\n    entryPath?: string;\n  };\n}\n\n/**\n * TODO: Here in the future we could add the ability\n * to load a user's Document component?\n */\nconst getDocumentHTML = ({ logger, props = {} }: GetDocumentHTMLArgs) => {\n  const result = renderToStaticMarkup(createElement(DefaultDocument, props));\n  logger.debug('Rendered the HTML');\n\n  return outdent`<!DOCTYPE html>${result}`;\n};\n\nconst AUTO_GENERATED_WARNING = `\nThis file was automatically generated by Strapi.\nAny modifications made will be discarded.\n`.trim();\n\n/**\n * Because we now auto-generate the index.html file,\n * we should be clear that people _should not_ modify it.\n *\n * @internal\n */\nconst decorateHTMLWithAutoGeneratedWarning = (htmlTemplate: string): string =>\n  htmlTemplate.replace(/<head/, `\\n<!--\\n${AUTO_GENERATED_WARNING}\\n-->\\n<head`);\n\nconst writeStaticClientFiles = async (ctx: BuildContext) => {\n  const prettier = await import('prettier'); // ESM-only\n\n  /**\n   * For everything to work effectively we create a client folder in `.strapi` at the cwd level.\n   * We then use the function we need to \"createAdmin\" as well as generate the Document index.html as well.\n   *\n   * All this links together an imaginary \"src/index\" that then allows vite to correctly build the admin panel.\n   */\n\n  await fs.mkdir(ctx.runtimeDir, { recursive: true });\n  ctx.logger.debug('Created the runtime directory');\n\n  const indexHtml = decorateHTMLWithAutoGeneratedWarning(\n    await getDocumentHTML({\n      logger: ctx.logger,\n      props:\n        ctx.bundler === 'vite'\n          ? {\n              entryPath: `/${ctx.entry}`,\n            }\n          : undefined,\n    })\n  );\n\n  await fs.writeFile(\n    path.join(ctx.runtimeDir, 'index.html'),\n    await prettier.format(indexHtml, {\n      parser: 'html',\n    })\n  );\n  ctx.logger.debug('Wrote the index.html file');\n  await fs.writeFile(\n    path.join(ctx.runtimeDir, 'app.js'),\n    await prettier.format(getEntryModule(ctx), {\n      parser: 'babel',\n    })\n  );\n  ctx.logger.debug('Wrote the app.js file');\n};\n\nexport { writeStaticClientFiles, getDocumentHTML };\n"],"names":["outdent","renderToStaticMarkup","createElement","DefaultDocument","fs","path"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,MAAM,iBAAiB,CAAC,QAA8B;AACpD,QAAM,gBAAgB,IAAI,QACvB,IAAI,CAAC,EAAE,MAAM,WAAA,MAAiB,IAAI,IAAI,MAAM,UAAU,EAAE,EACxD,KAAK,KAAK;AAEb,QAAM,gBAAgB,IAAI,QACvB,IAAI,CAAC,EAAE,YAAY,WAAiB,MAAA,UAAU,UAAU,UAAU,UAAU,IAAI,EAChF,KAAK,IAAI;AAEL,SAAAA,iBAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKC,aAAa;AAAA;AAAA;AAAA,UAIb,IAAI,gBAAgB,aAChB,+BAA+B,IAAI,eAAe,UAAU,MAC5D,EACN;AAAA;AAAA;AAAA;AAAA;AAAA,cAKM,IAAI,gBAAgB,aAAa,oBAAoB,EAAE;AAAA,cACvD,IAAI,WAAW,aAAa,KAAK,UAAU,IAAI,QAAQ,CAAC,MAAM,EAAE;AAAA;AAAA,UAEpE,aAAa;AAAA;AAAA;AAAA;AAIvB;AAYA,MAAM,kBAAkB,CAAC,EAAE,QAAQ,QAAQ,SAA8B;AACvE,QAAM,SAASC,OAAA,qBAAqBC,MAAc,cAAAC,UAAA,iBAAiB,KAAK,CAAC;AACzE,SAAO,MAAM,mBAAmB;AAEhC,SAAOH,0CAAyB,MAAM;AACxC;AAEA,MAAM,yBAAyB;AAAA;AAAA;AAAA,EAG7B,KAAK;AAQP,MAAM,uCAAuC,CAAC,iBAC5C,aAAa,QAAQ,SAAS;AAAA;AAAA,EAAW,sBAAsB;AAAA;AAAA,MAAc;AAEzE,MAAA,yBAAyB,OAAO,QAAsB;AACpD,QAAA,WAAW,MAAM,OAAO,UAAU;AASxC,QAAMI,YAAAA,QAAG,MAAM,IAAI,YAAY,EAAE,WAAW,MAAM;AAC9C,MAAA,OAAO,MAAM,+BAA+B;AAEhD,QAAM,YAAY;AAAA,IAChB,MAAM,gBAAgB;AAAA,MACpB,QAAQ,IAAI;AAAA,MACZ,OACE,IAAI,YAAY,SACZ;AAAA,QACE,WAAW,IAAI,IAAI,KAAK;AAAA,MAAA,IAE1B;AAAA,IACP,CAAA;AAAA,EACH;AAEA,QAAMA,YAAG,QAAA;AAAA,IACPC,cAAAA,QAAK,KAAK,IAAI,YAAY,YAAY;AAAA,IACtC,MAAM,SAAS,OAAO,WAAW;AAAA,MAC/B,QAAQ;AAAA,IACT,CAAA;AAAA,EACH;AACI,MAAA,OAAO,MAAM,2BAA2B;AAC5C,QAAMD,YAAG,QAAA;AAAA,IACPC,cAAAA,QAAK,KAAK,IAAI,YAAY,QAAQ;AAAA,IAClC,MAAM,SAAS,OAAO,eAAe,GAAG,GAAG;AAAA,MACzC,QAAQ;AAAA,IACT,CAAA;AAAA,EACH;AACI,MAAA,OAAO,MAAM,uBAAuB;AAC1C;;;"}