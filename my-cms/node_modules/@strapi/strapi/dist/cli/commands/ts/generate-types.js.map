{"version":3,"file":"generate-types.js","sources":["../../../../src/cli/commands/ts/generate-types.ts"],"sourcesContent":["import { createCommand } from 'commander';\nimport tsUtils from '@strapi/typescript-utils';\nimport { createStrapi, compileStrapi } from '@strapi/core';\n\nimport type { StrapiCommand } from '../../types';\nimport { runAction } from '../../utils/helpers';\n\ninterface CmdOptions {\n  debug?: boolean;\n  silent?: boolean;\n  verbose?: boolean;\n  outDir?: string;\n}\n\nconst action = async ({ debug, silent, verbose, outDir }: CmdOptions) => {\n  if ((debug || verbose) && silent) {\n    console.error('Flags conflict: both silent and debug mode are enabled, exiting...');\n    process.exit(1);\n  }\n\n  const appContext = await compileStrapi({ ignoreDiagnostics: true });\n  const app = await createStrapi(appContext).register();\n\n  await tsUtils.generators.generate({\n    strapi: app,\n    pwd: appContext.appDir,\n    rootDir: outDir ?? undefined,\n    logger: {\n      silent,\n      debug,\n    },\n    artifacts: { contentTypes: true, components: true },\n  });\n\n  await app.destroy();\n};\n\n/**\n * `$ strapi ts:generate-types`\n */\nconst command: StrapiCommand = () => {\n  return createCommand('ts:generate-types')\n    .description(`Generate TypeScript typings for your schemas`)\n    .option('-d, --debug', `Run the generation with debug messages`, false)\n    .option('-s, --silent', `Run the generation silently, without any output`, false)\n    .option(\n      '-o, --out-dir <outDir>',\n      'Specify a relative root directory in which the definitions will be generated. Changing this value might break types exposed by Strapi that relies on generated types.'\n    )\n    .action(runAction('ts:generate-types', action));\n};\n\nexport { action, command };\n"],"names":["compileStrapi","createStrapi","tsUtils","createCommand","runAction"],"mappings":";;;;;;;;AAcA,MAAM,SAAS,OAAO,EAAE,OAAO,QAAQ,SAAS,aAAyB;AAClE,OAAA,SAAS,YAAY,QAAQ;AAChC,YAAQ,MAAM,oEAAoE;AAClF,YAAQ,KAAK,CAAC;AAAA,EAAA;AAGhB,QAAM,aAAa,MAAMA,KAAAA,cAAc,EAAE,mBAAmB,MAAM;AAClE,QAAM,MAAM,MAAMC,KAAAA,aAAa,UAAU,EAAE,SAAS;AAE9C,QAAAC,iBAAA,QAAQ,WAAW,SAAS;AAAA,IAChC,QAAQ;AAAA,IACR,KAAK,WAAW;AAAA,IAChB,SAAS,UAAU;AAAA,IACnB,QAAQ;AAAA,MACN;AAAA,MACA;AAAA,IACF;AAAA,IACA,WAAW,EAAE,cAAc,MAAM,YAAY,KAAK;AAAA,EAAA,CACnD;AAED,QAAM,IAAI,QAAQ;AACpB;AAKA,MAAM,UAAyB,MAAM;AACnC,SAAOC,UAAAA,cAAc,mBAAmB,EACrC,YAAY,8CAA8C,EAC1D,OAAO,eAAe,0CAA0C,KAAK,EACrE,OAAO,gBAAgB,mDAAmD,KAAK,EAC/E;AAAA,IACC;AAAA,IACA;AAAA,EAED,EAAA,OAAOC,QAAAA,UAAU,qBAAqB,MAAM,CAAC;AAClD;;;"}