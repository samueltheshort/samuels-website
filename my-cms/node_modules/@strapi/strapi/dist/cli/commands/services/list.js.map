{"version":3,"file":"list.js","sources":["../../../../src/cli/commands/services/list.ts"],"sourcesContent":["import { createCommand } from 'commander';\nimport CLITable from 'cli-table3';\nimport chalk from 'chalk';\nimport { createStrapi, compileStrapi } from '@strapi/core';\n\nimport type { StrapiCommand } from '../../types';\nimport { runAction } from '../../utils/helpers';\n\nconst action = async () => {\n  const appContext = await compileStrapi();\n  const app = await createStrapi(appContext).register();\n\n  const list = app.get('services').keys();\n\n  const infoTable = new CLITable({\n    head: [chalk.blue('Name')],\n  });\n\n  list.forEach((name: string) => infoTable.push([name]));\n\n  console.log(infoTable.toString());\n\n  await app.destroy();\n};\n\n/**\n * `$ strapi services:list`\n */\nconst command: StrapiCommand = () => {\n  return createCommand('services:list')\n    .description('List all the application services')\n    .action(runAction('services:list', action));\n};\n\nexport { action, command };\n"],"names":["compileStrapi","createStrapi","CLITable","chalk","createCommand","runAction"],"mappings":";;;;;;;;;;AAQA,MAAM,SAAS,YAAY;AACnB,QAAA,aAAa,MAAMA,mBAAc;AACvC,QAAM,MAAM,MAAMC,KAAAA,aAAa,UAAU,EAAE,SAAS;AAEpD,QAAM,OAAO,IAAI,IAAI,UAAU,EAAE,KAAK;AAEhC,QAAA,YAAY,IAAIC,0BAAS;AAAA,IAC7B,MAAM,CAACC,eAAAA,QAAM,KAAK,MAAM,CAAC;AAAA,EAAA,CAC1B;AAEI,OAAA,QAAQ,CAAC,SAAiB,UAAU,KAAK,CAAC,IAAI,CAAC,CAAC;AAE7C,UAAA,IAAI,UAAU,UAAU;AAEhC,QAAM,IAAI,QAAQ;AACpB;AAKA,MAAM,UAAyB,MAAM;AAC5B,SAAAC,UAAA,cAAc,eAAe,EACjC,YAAY,mCAAmC,EAC/C,OAAOC,QAAA,UAAU,iBAAiB,MAAM,CAAC;AAC9C;;;"}