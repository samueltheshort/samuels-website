{"version":3,"file":"command.mjs","sources":["../../../../src/cli/commands/export/command.ts"],"sourcesContent":["import { createCommand, Option } from 'commander';\n\nimport {\n  excludeOption,\n  onlyOption,\n  throttleOption,\n  validateExcludeOnly,\n} from '../../utils/data-transfer';\nimport { promptEncryptionKey } from '../../utils/commander';\nimport action from './action';\n\n/**\n * `$ strapi export`\n */\nconst command = () => {\n  return createCommand('export')\n    .description('Export data from Strapi to file')\n    .allowExcessArguments(false)\n    .addOption(\n      new Option('--no-encrypt', `Disables 'aes-128-ecb' encryption of the output file`).default(\n        true\n      )\n    )\n    .addOption(\n      new Option('--no-compress', 'Disables gzip compression of output file').default(true)\n    )\n    .addOption(new Option('--verbose', 'Enable verbose logs'))\n    .addOption(\n      new Option(\n        '-k, --key <string>',\n        'Provide encryption key in command instead of using the prompt'\n      )\n    )\n    .addOption(\n      new Option('-f, --file <file>', 'name to use for exported file (without extensions)')\n    )\n    .addOption(excludeOption)\n    .addOption(onlyOption)\n    .addOption(throttleOption)\n    .hook('preAction', validateExcludeOnly)\n    .hook('preAction', promptEncryptionKey)\n    .action(action);\n};\n\nexport default command;\n"],"names":[],"mappings":";;;;AAcA,MAAM,UAAU,MAAM;AACb,SAAA,cAAc,QAAQ,EAC1B,YAAY,iCAAiC,EAC7C,qBAAqB,KAAK,EAC1B;AAAA,IACC,IAAI,OAAO,gBAAgB,sDAAsD,EAAE;AAAA,MACjF;AAAA,IAAA;AAAA,EACF,EAED;AAAA,IACC,IAAI,OAAO,iBAAiB,0CAA0C,EAAE,QAAQ,IAAI;AAAA,EAAA,EAErF,UAAU,IAAI,OAAO,aAAa,qBAAqB,CAAC,EACxD;AAAA,IACC,IAAI;AAAA,MACF;AAAA,MACA;AAAA,IAAA;AAAA,EACF,EAED;AAAA,IACC,IAAI,OAAO,qBAAqB,oDAAoD;AAAA,EAAA,EAErF,UAAU,aAAa,EACvB,UAAU,UAAU,EACpB,UAAU,cAAc,EACxB,KAAK,aAAa,mBAAmB,EACrC,KAAK,aAAa,mBAAmB,EACrC,OAAO,MAAM;AAClB;"}