{"version":3,"file":"index-Ds4W1yYl.mjs","sources":["../../admin/src/constants.js","../../admin/src/pluginId.js","../../admin/src/utils/getTrad.js","../../admin/src/utils/prefixPluginTranslations.js","../../admin/src/index.js"],"sourcesContent":["export const PERMISSIONS = {\n  // Roles\n  accessRoles: [\n    { action: 'plugin::users-permissions.roles.create', subject: null },\n    { action: 'plugin::users-permissions.roles.read', subject: null },\n  ],\n  createRole: [{ action: 'plugin::users-permissions.roles.create', subject: null }],\n  deleteRole: [{ action: 'plugin::users-permissions.roles.delete', subject: null }],\n  readRoles: [{ action: 'plugin::users-permissions.roles.read', subject: null }],\n  updateRole: [{ action: 'plugin::users-permissions.roles.update', subject: null }],\n\n  // AdvancedSettings\n  readAdvancedSettings: [\n    { action: 'plugin::users-permissions.advanced-settings.read', subject: null },\n  ],\n  updateAdvancedSettings: [\n    { action: 'plugin::users-permissions.advanced-settings.update', subject: null },\n  ],\n\n  // Emails\n  readEmailTemplates: [{ action: 'plugin::users-permissions.email-templates.read', subject: null }],\n  updateEmailTemplates: [\n    { action: 'plugin::users-permissions.email-templates.update', subject: null },\n  ],\n\n  // Providers\n  readProviders: [{ action: 'plugin::users-permissions.providers.read', subject: null }],\n  updateProviders: [{ action: 'plugin::users-permissions.providers.update', subject: null }],\n};\n","import pluginPkg from '../../package.json';\n\nconst pluginId = pluginPkg.name.replace(/^@strapi\\/plugin-/i, '');\n\nexport default pluginId;\n","import pluginId from '../pluginId';\n\nconst getTrad = (id) => `${pluginId}.${id}`;\n\nexport default getTrad;\n","const prefixPluginTranslations = (trad, pluginId) => {\n  if (!pluginId) {\n    throw new TypeError(\"pluginId can't be empty\");\n  }\n\n  return Object.keys(trad).reduce((acc, current) => {\n    acc[`${pluginId}.${current}`] = trad[current];\n\n    return acc;\n  }, {});\n};\n\nexport { prefixPluginTranslations };\n","import pluginPkg from '../../package.json';\n\nimport { PERMISSIONS } from './constants';\nimport getTrad from './utils/getTrad';\nimport { prefixPluginTranslations } from './utils/prefixPluginTranslations';\n\nconst name = pluginPkg.strapi.name;\n\nexport default {\n  register(app) {\n    // Create the plugin's settings section\n    app.createSettingSection(\n      {\n        id: 'users-permissions',\n        intlLabel: {\n          id: getTrad('Settings.section-label'),\n          defaultMessage: 'Users & Permissions plugin',\n        },\n      },\n      [\n        {\n          intlLabel: {\n            id: 'global.roles',\n            defaultMessage: 'Roles',\n          },\n          id: 'roles',\n          to: `users-permissions/roles`,\n          Component: () => import('./pages/Roles'),\n          permissions: PERMISSIONS.accessRoles,\n        },\n        {\n          intlLabel: {\n            id: getTrad('HeaderNav.link.providers'),\n            defaultMessage: 'Providers',\n          },\n          id: 'providers',\n          to: `users-permissions/providers`,\n          Component: () => import('./pages/Providers'),\n          permissions: PERMISSIONS.readProviders,\n        },\n        {\n          intlLabel: {\n            id: getTrad('HeaderNav.link.emailTemplates'),\n            defaultMessage: 'Email templates',\n          },\n          id: 'email-templates',\n          to: `users-permissions/email-templates`,\n          Component: () =>\n            import('./pages/EmailTemplates').then((mod) => ({\n              default: mod.ProtectedEmailTemplatesPage,\n            })),\n          permissions: PERMISSIONS.readEmailTemplates,\n        },\n        {\n          intlLabel: {\n            id: getTrad('HeaderNav.link.advancedSettings'),\n            defaultMessage: 'Advanced Settings',\n          },\n          id: 'advanced-settings',\n          to: `users-permissions/advanced-settings`,\n          Component: () =>\n            import('./pages/AdvancedSettings').then((mod) => ({\n              default: mod.ProtectedAdvancedSettingsPage,\n            })),\n          permissions: PERMISSIONS.readAdvancedSettings,\n        },\n      ]\n    );\n\n    app.registerPlugin({\n      id: 'users-permissions',\n      name,\n    });\n  },\n  bootstrap() {},\n  async registerTrads({ locales }) {\n    const importedTrads = await Promise.all(\n      locales.map((locale) => {\n        return import(`./translations/${locale}.json`)\n          .then(({ default: data }) => {\n            return {\n              data: prefixPluginTranslations(data, 'users-permissions'),\n              locale,\n            };\n          })\n          .catch(() => {\n            return {\n              data: {},\n              locale,\n            };\n          });\n      })\n    );\n\n    return Promise.resolve(importedTrads);\n  },\n};\n"],"names":["pluginId"],"mappings":"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"}