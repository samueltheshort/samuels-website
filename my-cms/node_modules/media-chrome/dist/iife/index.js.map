{
  "version": 3,
  "sources": ["../../src/js/index.ts", "../../src/js/constants.ts", "../../src/js/labels/labels.ts", "../../src/js/utils/time.ts", "../../src/js/utils/utils.ts", "../../src/js/utils/server-safe-globals.ts", "../../src/js/utils/resize-observer.ts", "../../src/js/utils/element-utils.ts", "../../src/js/media-gesture-receiver.ts", "../../src/js/media-container.ts", "../../src/js/utils/attribute-token-list.ts", "../../src/js/utils/captions.ts", "../../src/js/utils/fullscreen-api.ts", "../../src/js/utils/platform-tests.ts", "../../src/js/media-store/util.ts", "../../src/js/media-store/state-mediator.ts", "../../src/js/media-store/request-map.ts", "../../src/js/media-store/media-store.ts", "../../src/js/media-controller.ts", "../../src/js/media-chrome-button.ts", "../../src/js/media-airplay-button.ts", "../../src/js/media-captions-button.ts", "../../src/js/media-cast-button.ts", "../../src/js/media-chrome-dialog.ts", "../../src/js/media-chrome-range.ts", "../../src/js/media-control-bar.ts", "../../src/js/media-text-display.ts", "../../src/js/media-duration-display.ts", "../../src/js/media-fullscreen-button.ts", "../../src/js/media-live-button.ts", "../../src/js/media-loading-indicator.ts", "../../src/js/media-mute-button.ts", "../../src/js/media-pip-button.ts", "../../src/js/media-playback-rate-button.ts", "../../src/js/media-play-button.ts", "../../src/js/media-poster-image.ts", "../../src/js/media-preview-chapter-display.ts", "../../src/js/media-preview-thumbnail.ts", "../../src/js/media-preview-time-display.ts", "../../src/js/media-seek-backward-button.ts", "../../src/js/media-seek-forward-button.ts", "../../src/js/media-time-display.ts", "../../src/js/utils/range-animation.ts", "../../src/js/media-time-range.ts", "../../src/js/media-tooltip.ts", "../../src/js/media-volume-range.ts"],
  "sourcesContent": ["export * as constants from './constants.js';\nexport { default as labels } from './labels/labels.js';\nexport * as timeUtils from './utils/time.js';\n\n// Import media-controller first to ensure it's available for other components\n// when calling `associateElement(this)` in connectedCallback.\nimport MediaController from './media-controller.js';\nimport MediaAirplayButton from './media-airplay-button.js';\nimport MediaCaptionsButton from './media-captions-button.js';\nimport MediaCastButton from './media-cast-button.js';\nimport MediaChromeButton from './media-chrome-button.js';\nimport MediaChromeDialog from './media-chrome-dialog.js';\nimport MediaChromeRange from './media-chrome-range.js';\nimport MediaControlBar from './media-control-bar.js';\nimport MediaDurationDisplay from './media-duration-display.js';\nimport MediaFullscreenButton from './media-fullscreen-button.js';\nimport MediaGestureReceiver from './media-gesture-receiver.js';\nimport MediaLiveButton from './media-live-button.js';\nimport MediaLoadingIndicator from './media-loading-indicator.js';\nimport MediaMuteButton from './media-mute-button.js';\nimport MediaPipButton from './media-pip-button.js';\nimport MediaPlaybackRateButton from './media-playback-rate-button.js';\nimport MediaPlayButton from './media-play-button.js';\nimport MediaPosterImage from './media-poster-image.js';\nimport MediaPreviewChapterDisplay from './media-preview-chapter-display.js';\nimport MediaPreviewThumbnail from './media-preview-thumbnail.js';\nimport MediaPreviewTimeDisplay from './media-preview-time-display.js';\nimport MediaSeekBackwardButton from './media-seek-backward-button.js';\nimport MediaSeekForwardButton from './media-seek-forward-button.js';\nimport MediaTimeDisplay from './media-time-display.js';\nimport MediaTimeRange from './media-time-range.js';\nimport MediaTooltip from './media-tooltip.js';\nimport MediaVolumeRange from './media-volume-range.js';\n\nexport {\n  MediaAirplayButton,\n  MediaCaptionsButton,\n  MediaCastButton,\n  MediaChromeButton,\n  MediaChromeDialog,\n  MediaChromeRange,\n  MediaControlBar,\n  MediaController,\n  MediaDurationDisplay,\n  MediaFullscreenButton,\n  MediaGestureReceiver,\n  MediaLiveButton,\n  MediaLoadingIndicator,\n  MediaMuteButton,\n  MediaPipButton,\n  MediaPlaybackRateButton,\n  MediaPlayButton,\n  MediaPosterImage,\n  MediaPreviewChapterDisplay,\n  MediaPreviewThumbnail,\n  MediaPreviewTimeDisplay,\n  MediaSeekBackwardButton,\n  MediaSeekForwardButton,\n  MediaTimeDisplay,\n  MediaTimeRange,\n  MediaTooltip,\n  MediaVolumeRange,\n};\n", "export const MediaUIEvents = {\n  MEDIA_PLAY_REQUEST: 'mediaplayrequest',\n  MEDIA_PAUSE_REQUEST: 'mediapauserequest',\n  MEDIA_MUTE_REQUEST: 'mediamuterequest',\n  MEDIA_UNMUTE_REQUEST: 'mediaunmuterequest',\n  MEDIA_VOLUME_REQUEST: 'mediavolumerequest',\n  MEDIA_SEEK_REQUEST: 'mediaseekrequest',\n  MEDIA_AIRPLAY_REQUEST: 'mediaairplayrequest',\n  MEDIA_ENTER_FULLSCREEN_REQUEST: 'mediaenterfullscreenrequest',\n  MEDIA_EXIT_FULLSCREEN_REQUEST: 'mediaexitfullscreenrequest',\n  MEDIA_PREVIEW_REQUEST: 'mediapreviewrequest',\n  MEDIA_ENTER_PIP_REQUEST: 'mediaenterpiprequest',\n  MEDIA_EXIT_PIP_REQUEST: 'mediaexitpiprequest',\n  MEDIA_ENTER_CAST_REQUEST: 'mediaentercastrequest',\n  MEDIA_EXIT_CAST_REQUEST: 'mediaexitcastrequest',\n  MEDIA_SHOW_TEXT_TRACKS_REQUEST: 'mediashowtexttracksrequest',\n  MEDIA_HIDE_TEXT_TRACKS_REQUEST: 'mediahidetexttracksrequest',\n  MEDIA_SHOW_SUBTITLES_REQUEST: 'mediashowsubtitlesrequest',\n  MEDIA_DISABLE_SUBTITLES_REQUEST: 'mediadisablesubtitlesrequest',\n  MEDIA_TOGGLE_SUBTITLES_REQUEST: 'mediatogglesubtitlesrequest',\n  MEDIA_PLAYBACK_RATE_REQUEST: 'mediaplaybackraterequest',\n  MEDIA_RENDITION_REQUEST: 'mediarenditionrequest',\n  MEDIA_AUDIO_TRACK_REQUEST: 'mediaaudiotrackrequest',\n  MEDIA_SEEK_TO_LIVE_REQUEST: 'mediaseektoliverequest',\n  REGISTER_MEDIA_STATE_RECEIVER: 'registermediastatereceiver',\n  UNREGISTER_MEDIA_STATE_RECEIVER: 'unregistermediastatereceiver',\n} as const;\n\nexport type MediaUIEvents = typeof MediaUIEvents;\n\nexport const MediaStateReceiverAttributes = {\n  MEDIA_CHROME_ATTRIBUTES: 'mediachromeattributes',\n  MEDIA_CONTROLLER: 'mediacontroller',\n} as const;\n\nexport type MediaStateReceiverAttributes = typeof MediaStateReceiverAttributes;\n\nexport const MediaUIProps = {\n  MEDIA_AIRPLAY_UNAVAILABLE: 'mediaAirplayUnavailable',\n  MEDIA_FULLSCREEN_UNAVAILABLE: 'mediaFullscreenUnavailable',\n  MEDIA_PIP_UNAVAILABLE: 'mediaPipUnavailable',\n  MEDIA_CAST_UNAVAILABLE: 'mediaCastUnavailable',\n  MEDIA_RENDITION_UNAVAILABLE: 'mediaRenditionUnavailable',\n  MEDIA_AUDIO_TRACK_UNAVAILABLE: 'mediaAudioTrackUnavailable',\n  MEDIA_WIDTH: 'mediaWidth',\n  MEDIA_HEIGHT: 'mediaHeight',\n  MEDIA_PAUSED: 'mediaPaused',\n  MEDIA_HAS_PLAYED: 'mediaHasPlayed',\n  MEDIA_ENDED: 'mediaEnded',\n  MEDIA_MUTED: 'mediaMuted',\n  MEDIA_VOLUME_LEVEL: 'mediaVolumeLevel',\n  MEDIA_VOLUME: 'mediaVolume',\n  MEDIA_VOLUME_UNAVAILABLE: 'mediaVolumeUnavailable',\n  MEDIA_IS_PIP: 'mediaIsPip',\n  MEDIA_IS_CASTING: 'mediaIsCasting',\n  MEDIA_IS_AIRPLAYING: 'mediaIsAirplaying',\n  MEDIA_SUBTITLES_LIST: 'mediaSubtitlesList',\n  MEDIA_SUBTITLES_SHOWING: 'mediaSubtitlesShowing',\n  MEDIA_IS_FULLSCREEN: 'mediaIsFullscreen',\n  MEDIA_PLAYBACK_RATE: 'mediaPlaybackRate',\n  MEDIA_CURRENT_TIME: 'mediaCurrentTime',\n  MEDIA_DURATION: 'mediaDuration',\n  MEDIA_SEEKABLE: 'mediaSeekable',\n  MEDIA_PREVIEW_TIME: 'mediaPreviewTime',\n  MEDIA_PREVIEW_IMAGE: 'mediaPreviewImage',\n  MEDIA_PREVIEW_COORDS: 'mediaPreviewCoords',\n  MEDIA_PREVIEW_CHAPTER: 'mediaPreviewChapter',\n  MEDIA_LOADING: 'mediaLoading',\n  MEDIA_BUFFERED: 'mediaBuffered',\n  MEDIA_STREAM_TYPE: 'mediaStreamType',\n  MEDIA_TARGET_LIVE_WINDOW: 'mediaTargetLiveWindow',\n  MEDIA_TIME_IS_LIVE: 'mediaTimeIsLive',\n  MEDIA_RENDITION_LIST: 'mediaRenditionList',\n  MEDIA_RENDITION_SELECTED: 'mediaRenditionSelected',\n  MEDIA_AUDIO_TRACK_LIST: 'mediaAudioTrackList',\n  MEDIA_AUDIO_TRACK_ENABLED: 'mediaAudioTrackEnabled',\n  MEDIA_CHAPTERS_CUES: 'mediaChaptersCues',\n} as const;\n\nexport type MediaUIProps = typeof MediaUIProps;\n\ntype Entries<T> = { [k in keyof T]: [k, T[k]] }[keyof T][];\n\ntype LowercaseValues<T extends Record<any, string>> = {\n  [k in keyof T]: Lowercase<T[k]>;\n};\n\ntype Writeable<T> = {\n  -readonly [k in keyof T]: T[k];\n};\n\ntype MediaUIPropsEntries = Entries<MediaUIProps>;\nconst MediaUIPropsEntries: MediaUIPropsEntries = Object.entries(\n  MediaUIProps\n) as MediaUIPropsEntries;\n\nexport type MediaUIAttributes = LowercaseValues<MediaUIProps>;\nexport const MediaUIAttributes = MediaUIPropsEntries.reduce(\n  (dictObj, [key, propName]) => {\n    // @ts-ignore\n    dictObj[key] = propName.toLowerCase();\n    return dictObj;\n  },\n  {} as Partial<Writeable<MediaUIAttributes>>\n) as MediaUIAttributes;\n\nconst AdditionalStateChangeEvents = {\n  USER_INACTIVE: 'userinactivechange',\n  BREAKPOINTS_CHANGE: 'breakpointchange',\n  BREAKPOINTS_COMPUTED: 'breakpointscomputed',\n} as const;\n\nexport type MediaStateChangeEvents = {\n  [k in keyof MediaUIProps]: Lowercase<MediaUIProps[k]>;\n} & typeof AdditionalStateChangeEvents;\n\n/** @TODO In a prior migration, we dropped the 'change' from our state change event types. Although a breaking change, we should consider re-adding (CJP) */\n// export type MediaStateChangeEvents = {\n//   [k in keyof MediaUIProps]: `${Lowercase<MediaUIProps[k]>}change`;\n// } & typeof AdditionalStateChangeEvents;\n\nexport const MediaStateChangeEvents = MediaUIPropsEntries.reduce(\n  (dictObj, [key, propName]) => {\n    // @ts-ignore\n    dictObj[key] = propName.toLowerCase();\n    // dictObj[key] = `${propName.toLowerCase()}change`;\n    return dictObj;\n  },\n  { ...AdditionalStateChangeEvents } as Partial<\n    Writeable<MediaStateChangeEvents>\n  >\n) as MediaStateChangeEvents;\n\n/** @TODO Make types more precise derivations, at least after updates to event type names mentioned above (CJP) */\nexport type StateChangeEventToAttributeMap = {\n  [k in MediaStateChangeEvents[keyof MediaStateChangeEvents &\n    keyof MediaUIAttributes]]: MediaUIAttributes[keyof MediaUIAttributes];\n} & { userinactivechange: 'userinactive' };\n\n// Maps from state change event type -> attribute name\nexport const StateChangeEventToAttributeMap = Object.entries(\n  MediaStateChangeEvents\n).reduce(\n  (mapObj, [key, eventType]) => {\n    const attrName = MediaUIAttributes[key];\n    if (attrName) {\n      mapObj[eventType] = attrName;\n    }\n    return mapObj;\n  },\n  { userinactivechange: 'userinactive' } as Partial<\n    Writeable<StateChangeEventToAttributeMap>\n  >\n) as StateChangeEventToAttributeMap;\n\n/** @TODO Make types more precise derivations, at least after updates to event type names mentioned above (CJP) */\nexport type AttributeToStateChangeEventMap = {\n  [k in MediaUIAttributes[keyof MediaUIAttributes &\n    keyof MediaStateChangeEvents]]: MediaStateChangeEvents[keyof MediaStateChangeEvents];\n} & { userinactive: 'userinactivechange' };\n\n// Maps from attribute name -> state change event type\nexport const AttributeToStateChangeEventMap = Object.entries(\n  MediaUIAttributes\n).reduce(\n  (mapObj, [key, attrName]) => {\n    const evtType = MediaStateChangeEvents[key];\n    if (evtType) {\n      mapObj[attrName] = evtType;\n    }\n    return mapObj;\n  },\n  { userinactive: 'userinactivechange' } as Partial<\n    Writeable<AttributeToStateChangeEventMap>\n  >\n) as AttributeToStateChangeEventMap;\n\nexport const TextTrackKinds = {\n  SUBTITLES: 'subtitles',\n  CAPTIONS: 'captions',\n  DESCRIPTIONS: 'descriptions',\n  CHAPTERS: 'chapters',\n  METADATA: 'metadata',\n} as const;\n\nexport type TextTrackKinds = typeof TextTrackKinds[keyof typeof TextTrackKinds];\n\nexport const TextTrackModes = {\n  DISABLED: 'disabled',\n  HIDDEN: 'hidden',\n  SHOWING: 'showing',\n} as const;\n\nexport type TextTrackModes = typeof TextTrackModes;\n\nexport const ReadyStates = {\n  HAVE_NOTHING: 0,\n  HAVE_METADATA: 1,\n  HAVE_CURRENT_DATA: 2,\n  HAVE_FUTURE_DATA: 3,\n  HAVE_ENOUGH_DATA: 4,\n} as const;\n\nexport type ReadyStates = typeof ReadyStates;\n\nexport const PointerTypes = {\n  MOUSE: 'mouse',\n  PEN: 'pen',\n  TOUCH: 'touch',\n} as const;\n\nexport type PointerTypes = typeof PointerTypes;\n\nexport const AvailabilityStates = {\n  UNAVAILABLE: 'unavailable',\n  UNSUPPORTED: 'unsupported',\n} as const;\n\nexport type AvailabilityStates =\n  typeof AvailabilityStates[keyof typeof AvailabilityStates];\n\nexport const StreamTypes = {\n  LIVE: 'live',\n  ON_DEMAND: 'on-demand',\n  UNKNOWN: 'unknown',\n} as const;\n\nexport type StreamTypes = typeof StreamTypes[keyof typeof StreamTypes];\n\nexport const VolumeLevels = {\n  HIGH: 'high',\n  MEDIUM: 'medium',\n  LOW: 'low',\n  OFF: 'off',\n} as const;\n\nexport type VolumeLevels = typeof VolumeLevels;\n\nexport const WebkitPresentationModes = {\n  INLINE: 'inline',\n  FULLSCREEN: 'fullscreen',\n  PICTURE_IN_PICTURE: 'picture-in-picture',\n} as const;\n\nexport type WebkitPresentationModes = typeof WebkitPresentationModes;\n", "export type LabelOptions = { seekOffset?: number; playbackRate?: number };\n\nexport const tooltipLabels = {\n  ENTER_AIRPLAY: 'Start airplay',\n  EXIT_AIRPLAY: 'Stop airplay',\n  AUDIO_TRACK_MENU: 'Audio',\n  CAPTIONS: 'Captions',\n  ENABLE_CAPTIONS: 'Enable captions',\n  DISABLE_CAPTIONS: 'Disable captions',\n  START_CAST: 'Start casting',\n  STOP_CAST: 'Stop casting',\n  ENTER_FULLSCREEN: 'Enter fullscreen mode',\n  EXIT_FULLSCREEN: 'Exit fullscreen mode',\n  MUTE: 'Mute',\n  UNMUTE: 'Unmute',\n  ENTER_PIP: 'Enter picture in picture mode',\n  EXIT_PIP: 'Enter picture in picture mode',\n  PLAY: 'Play',\n  PAUSE: 'Pause',\n  PLAYBACK_RATE: 'Playback rate',\n  RENDITIONS: 'Quality',\n  SEEK_BACKWARD: 'Seek backward',\n  SEEK_FORWARD: 'Seek forward',\n  SETTINGS: 'Settings',\n};\n\nexport const nouns: Record<string, (options?: LabelOptions) => string> = {\n  AUDIO_PLAYER: () => 'audio player',\n  VIDEO_PLAYER: () => 'video player',\n  VOLUME: () => 'volume',\n  SEEK: () => 'seek',\n  CLOSED_CAPTIONS: () => 'closed captions',\n  PLAYBACK_RATE: ({ playbackRate = 1 } = {}) =>\n    `current playback rate ${playbackRate}`,\n  PLAYBACK_TIME: () => `playback time`,\n  MEDIA_LOADING: () => `media loading`,\n  SETTINGS: () => `settings`,\n  AUDIO_TRACKS: () => `audio tracks`,\n  QUALITY: () => `quality`,\n};\n\nexport const verbs: Record<string, (options?: LabelOptions) => string> = {\n  PLAY: () => 'play',\n  PAUSE: () => 'pause',\n  MUTE: () => 'mute',\n  UNMUTE: () => 'unmute',\n  ENTER_AIRPLAY: () => 'start airplay',\n  EXIT_AIRPLAY: () => 'stop airplay',\n  ENTER_CAST: () => 'start casting',\n  EXIT_CAST: () => 'stop casting',\n  ENTER_FULLSCREEN: () => 'enter fullscreen mode',\n  EXIT_FULLSCREEN: () => 'exit fullscreen mode',\n  ENTER_PIP: () => 'enter picture in picture mode',\n  EXIT_PIP: () => 'exit picture in picture mode',\n  SEEK_FORWARD_N_SECS: ({ seekOffset = 30 } = {}) =>\n    `seek forward ${seekOffset} seconds`,\n  SEEK_BACK_N_SECS: ({ seekOffset = 30 } = {}) =>\n    `seek back ${seekOffset} seconds`,\n  SEEK_LIVE: () => 'seek to live',\n  PLAYING_LIVE: () => 'playing live',\n};\n\nexport default {\n  ...nouns,\n  ...verbs,\n};\n", "import { isValidNumber } from './utils.js';\n\nconst UnitLabels = [\n  {\n    singular: 'hour',\n    plural: 'hours',\n  },\n  {\n    singular: 'minute',\n    plural: 'minutes',\n  },\n  {\n    singular: 'second',\n    plural: 'seconds',\n  },\n];\nconst toTimeUnitPhrase = (timeUnitValue, unitIndex) => {\n  const unitLabel =\n    timeUnitValue === 1\n      ? UnitLabels[unitIndex].singular\n      : UnitLabels[unitIndex].plural;\n\n  return `${timeUnitValue} ${unitLabel}`;\n};\n\n/**\n * This function converts numeric seconds into a phrase\n * @param {number} seconds - a (positive or negative) time, represented as seconds\n * @returns {string} The time, represented as a phrase of hours, minutes, and seconds\n */\nexport const formatAsTimePhrase = (seconds) => {\n  if (!isValidNumber(seconds)) return '';\n  const positiveSeconds = Math.abs(seconds);\n  const negative = positiveSeconds !== seconds;\n  const secondsDateTime = new Date(0, 0, 0, 0, 0, positiveSeconds, 0);\n  const timeParts = [\n    secondsDateTime.getHours(),\n    secondsDateTime.getMinutes(),\n    secondsDateTime.getSeconds(),\n  ];\n  // NOTE: Everything above should be useable for the `formatTime` function.\n\n  const timeString = timeParts\n    // Convert non-0 values to a string of the value plus its unit\n    .map(\n      (timeUnitValue, index) =>\n        timeUnitValue && toTimeUnitPhrase(timeUnitValue, index)\n    )\n    // Ignore/exclude any 0 values\n    .filter((x) => x)\n    // join into a single comma-separated string phrase\n    .join(', ');\n\n  // If the time was negative, assume it represents some remaining amount of time/\"count down\".\n  const negativeSuffix = negative ? ' remaining' : '';\n\n  return `${timeString}${negativeSuffix}`;\n};\n\n/**\n * Converts a time, in numeric seconds, to a formatted string representation of the form [HH:[MM:]]SS, where hours and minutes\n * are optional, either based on the value of `seconds` or (optionally) based on the value of `guide`.\n *\n * @param seconds - The total time you'd like formatted, in seconds\n * @param guide - A number in seconds that represents how many units you'd want to show. This ensures consistent formatting between e.g. 35s and 4834s.\n * @returns A string representation of the time, with expected units\n */\nexport function formatTime(seconds: number, guide?: number): string {\n  // Handle negative values at the end\n  let negative = false;\n\n  if (seconds < 0) {\n    negative = true;\n    seconds = 0 - seconds;\n  }\n\n  seconds = seconds < 0 ? 0 : seconds;\n\n  let s: number | string = Math.floor(seconds % 60);\n  let m: number | string = Math.floor((seconds / 60) % 60);\n  let h: number | string = Math.floor(seconds / 3600);\n  const gm = Math.floor((guide / 60) % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '0';\n  }\n\n  // Check if we need to show hours\n  // @ts-ignore\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  // @ts-ignore\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  // @ts-ignore\n  s = s < 10 ? '0' + s : s;\n\n  return (negative ? '-' : '') + h + m + s;\n}\n\nexport const emptyTimeRanges: TimeRanges = Object.freeze({\n  length: 0,\n  start(index) {\n    const unsignedIdx = index >>> 0;\n    if (unsignedIdx >= this.length) {\n      throw new DOMException(\n        `Failed to execute 'start' on 'TimeRanges': The index provided (${unsignedIdx}) is greater than or equal to the maximum bound (${this.length}).`\n      );\n    }\n    return 0;\n  },\n  end(index) {\n    const unsignedIdx = index >>> 0;\n    if (unsignedIdx >= this.length) {\n      throw new DOMException(\n        `Failed to execute 'end' on 'TimeRanges': The index provided (${unsignedIdx}) is greater than or equal to the maximum bound (${this.length}).`\n      );\n    }\n    return 0;\n  },\n});\n\n/**\n */\nexport function serializeTimeRanges(\n  timeRanges: TimeRanges = emptyTimeRanges\n): string {\n  return Array.from(timeRanges as any)\n    .map((_, i) =>\n      [\n        Number(timeRanges.start(i).toFixed(3)),\n        Number(timeRanges.end(i).toFixed(3)),\n      ].join(':')\n    )\n    .join(' ');\n}\n", "import { TextTrackKinds } from '../constants.js';\nimport type { Rendition } from '../media-store/state-mediator';\nimport type { TextTrackLike } from './TextTrackLike.js';\n\nexport function stringifyRenditionList(renditions: Rendition[]): string {\n  return renditions?.map(stringifyRendition).join(' ');\n}\n\nexport function parseRenditionList(renditions: string): Rendition[] {\n  return renditions?.split(/\\s+/).map(parseRendition);\n}\n\nexport function stringifyRendition(rendition: Rendition): string {\n  if (rendition) {\n    const { id, width, height } = rendition;\n    return [id, width, height].filter((a) => a != null).join(':');\n  }\n}\n\nexport function parseRendition(rendition: string): Rendition {\n  if (rendition) {\n    const [id, width, height] = rendition.split(':');\n    return { id, width: +width, height: +height };\n  }\n}\n\nexport function stringifyAudioTrackList(audioTracks: any[]) {\n  return audioTracks?.map(stringifyAudioTrack).join(' ');\n}\n\nexport function parseAudioTrackList(audioTracks: string): TextTrackLike[] {\n  return audioTracks?.split(/\\s+/).map(parseAudioTrack);\n}\n\nexport function stringifyAudioTrack(audioTrack: any): string {\n  if (audioTrack) {\n    const { id, kind, language, label } = audioTrack;\n    return [id, kind, language, label].filter((a) => a != null).join(':');\n  }\n}\n\nexport function parseAudioTrack(audioTrack: string): TextTrackLike {\n  if (audioTrack) {\n    const [id, kind, language, label] = audioTrack.split(':');\n    return {\n      id,\n      kind: kind as TextTrackKinds,\n      language,\n      label,\n    };\n  }\n}\n\nexport function dashedToCamel(word: string): string {\n  return word\n    .split('-')\n    .map(function (x, i) {\n      return (\n        (i ? x[0].toUpperCase() : x[0].toLowerCase()) + x.slice(1).toLowerCase()\n      );\n    })\n    .join('');\n}\n\nexport function constToCamel(\n  word: string,\n  upperFirst: boolean = false\n): string {\n  return word\n    .split('_')\n    .map(function (x, i) {\n      return (\n        (i || upperFirst ? x[0].toUpperCase() : x[0].toLowerCase()) +\n        x.slice(1).toLowerCase()\n      );\n    })\n    .join('');\n}\n\nexport function camelCase(name: string): string {\n  return name.replace(/[-_]([a-z])/g, ($0, $1) => $1.toUpperCase());\n}\n\nexport function isValidNumber(x: any): boolean {\n  return typeof x === 'number' && !Number.isNaN(x) && Number.isFinite(x);\n}\n\nexport function isNumericString(str: any): boolean {\n  if (typeof str != 'string') return false;\n  return !isNaN(str as any) && !isNaN(parseFloat(str));\n}\n\n/**\n * Returns a promise that will resolve after passed ms.\n * @param  {number} ms\n * @return {Promise}\n */\nexport const delay = (ms: number): Promise<void> =>\n  new Promise((resolve) => setTimeout(resolve, ms));\n\nexport const capitalize = (str: string) =>\n  str && str[0].toUpperCase() + str.slice(1);\n", "class EventTarget {\n  addEventListener() { }\n  removeEventListener() { }\n  dispatchEvent() {\n    return true;\n  }\n}\n\nclass Node extends EventTarget { }\n\nclass Element extends Node {\n  attributes: NamedNodeMap;\n  childNodes: NodeListOf<ChildNode>;\n  role: string | null = null;\n}\n\nclass ResizeObserver {\n  observe() { }\n  unobserve() { }\n  disconnect() { }\n}\n\nconst documentShim = {\n  createElement: function () {\n    return new globalThisShim.HTMLElement();\n  },\n  createElementNS: function () {\n    return new globalThisShim.HTMLElement();\n  },\n  addEventListener() { },\n  removeEventListener() { },\n  /**\n   *\n   * @param {Event} event\n   * @returns {boolean}\n   */\n  dispatchEvent(event /* eslint-disable-line @typescript-eslint/no-unused-vars */) {\n    return false;\n  },\n} as unknown as typeof globalThis['document'];\n\nconst globalThisShim = {\n  ResizeObserver,\n  document: documentShim,\n  Node,\n  Element,\n  HTMLElement: class HTMLElement extends Element {\n    innerHTML: string = '';\n    get content() {\n      return new globalThisShim.DocumentFragment();\n    }\n  },\n  DocumentFragment: class DocumentFragment extends EventTarget { },\n  customElements: {\n    get: function () { },\n    define: function () { },\n    whenDefined: function () { },\n  },\n  localStorage: {\n    /**\n     * @param {string} key\n     * @returns {string|null}\n     */\n    getItem(key /* eslint-disable-line @typescript-eslint/no-unused-vars */) {\n      return null;\n    },\n    /**\n     * @param {string} key\n     * @param {string} value\n     */\n    setItem(key, value) { }, // eslint-disable-line @typescript-eslint/no-unused-vars\n    /**\n     * @param {string} key\n     */\n    removeItem(key) { }, // eslint-disable-line @typescript-eslint/no-unused-vars\n  },\n  CustomEvent: function CustomEvent() { },\n  getComputedStyle: function () { },\n  navigator: {\n    languages: [],\n    get userAgent() {\n      return '';\n    },\n  },\n  /**\n   * @param {string} media\n   */\n  matchMedia(media) {\n    return {\n      matches: false,\n      media,\n    };\n  },\n} as unknown as typeof globalThis;\n\nexport const isServer =\n  typeof window === 'undefined' || typeof window.customElements === 'undefined';\n\nconst isShimmed = Object.keys(globalThisShim).every((key) => key in globalThis);\n\nexport const GlobalThis: typeof globalThis =\n  isServer && !isShimmed ? globalThisShim : globalThis;\nexport const Document: typeof globalThis['document'] &\n  Partial<{\n    webkitExitFullscreen: typeof globalThis['document']['exitFullscreen'];\n  }> = isServer && !isShimmed ? documentShim : globalThis.document;\n\nexport { GlobalThis as globalThis, Document as document };\n", "import { globalThis } from './server-safe-globals.js';\n\n// Use 1 resize observer instance for many elements for best performance.\n// https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n\nconst callbacksMap = new WeakMap<Element, Set<ResizeCallback>>();\n\ntype ResizeCallback = (entry: ResizeObserverEntry) => void;\n\nconst getCallbacks = (element: Element): Set<ResizeCallback> => {\n  let callbacks = callbacksMap.get(element);\n  if (!callbacks)\n    callbacksMap.set(element, (callbacks = new Set<ResizeCallback>()));\n  return callbacks;\n};\n\nconst observer = new globalThis.ResizeObserver(\n  (entries: ResizeObserverEntry[]) => {\n    for (const entry of entries) {\n      for (const callback of getCallbacks(entry.target)) {\n        callback(entry);\n      }\n    }\n  }\n);\n\nexport function observeResize(\n  element: Element,\n  callback: ResizeCallback\n): void {\n  getCallbacks(element).add(callback);\n  observer.observe(element);\n}\n\nexport function unobserveResize(\n  element: Element,\n  callback: ResizeCallback\n): void {\n  const callbacks = getCallbacks(element);\n  callbacks.delete(callback);\n\n  if (!callbacks.size) {\n    observer.unobserve(element);\n  }\n}\n", "import { MediaStateReceiverAttributes } from '../constants.js';\nimport type MediaController from '../media-controller.js';\n\n/**\n * Get the media controller element from the `mediacontroller` attribute or closest ancestor.\n * @param host - The element to search for the media controller.\n */\nexport function getMediaController(\n  host: HTMLElement\n): MediaController | undefined {\n  return (\n    getAttributeMediaController(host) ??\n    closestComposedNode(host, 'media-controller')\n  );\n}\n\n/**\n * Get the media controller element from the `mediacontroller` attribute.\n * @param host - The element to search for the media controller.\n * @return\n */\nexport function getAttributeMediaController(\n  host: HTMLElement\n): MediaController | undefined {\n  const { MEDIA_CONTROLLER } = MediaStateReceiverAttributes;\n  const mediaControllerId = host.getAttribute(MEDIA_CONTROLLER);\n\n  if (mediaControllerId) {\n    return getDocumentOrShadowRoot(host)?.getElementById(\n      mediaControllerId\n    ) as MediaController;\n  }\n}\n\nexport const updateIconText = (\n  svg: HTMLElement,\n  value: string,\n  selector: string = '.value'\n): void => {\n  const node = svg.querySelector(selector);\n\n  if (!node) return;\n\n  node.textContent = value;\n};\n\nexport const getAllSlotted = (\n  el: HTMLElement,\n  name: string\n): HTMLCollection | HTMLElement[] => {\n  const slotSelector = `slot[name=\"${name}\"]`;\n  const slot: HTMLSlotElement = el.shadowRoot.querySelector(slotSelector);\n  if (!slot) return [];\n  return slot.children;\n};\n\nexport const getSlotted = (el: HTMLElement, name: string): HTMLElement =>\n  getAllSlotted(el, name)[0] as HTMLElement;\n\n/**\n *\n * @param {{ contains?: Node['contains'] }} [rootNode]\n * @param {Node} [childNode]\n * @returns boolean\n */\nexport const containsComposedNode = (\n  rootNode: Node,\n  childNode: Node\n): boolean => {\n  if (!rootNode || !childNode) return false;\n  if (rootNode?.contains(childNode)) return true;\n  return containsComposedNode(\n    rootNode,\n    (childNode.getRootNode() as ShadowRoot).host\n  );\n};\n\nexport const closestComposedNode = <T extends Element = Element>(\n  childNode: Element,\n  selector: string\n): T => {\n  if (!childNode) return null;\n  const closest = childNode.closest(selector);\n  if (closest) return closest as T;\n  return closestComposedNode(\n    (childNode.getRootNode() as ShadowRoot).host,\n    selector\n  );\n};\n\n/**\n * Get the active element, accounting for Shadow DOM subtrees.\n * @param root - The root node to search for the active element.\n */\nexport function getActiveElement(\n  root: Document | ShadowRoot = document\n): HTMLElement {\n  const activeEl = root?.activeElement;\n  if (!activeEl) return null;\n  return getActiveElement(activeEl.shadowRoot) ?? (activeEl as HTMLElement);\n}\n\n/**\n * Gets the document or shadow root of a node, not the node itself which can lead to bugs.\n * https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode#return_value\n * @param node - The node to get the root node from.\n */\nexport function getDocumentOrShadowRoot(\n  node: Node\n): Document | ShadowRoot | null {\n  const rootNode = node?.getRootNode?.();\n  if (rootNode instanceof ShadowRoot || rootNode instanceof Document) {\n    return rootNode;\n  }\n  return null;\n}\n\n/**\n * Checks if the element is visible includes opacity: 0 and visibility: hidden.\n * @param element - The element to check for visibility.\n */\nexport function isElementVisible(\n  element: HTMLElement,\n  { depth = 3, checkOpacity = true, checkVisibilityCSS = true } = {}\n): boolean {\n  // Supported by Chrome and Firefox https://caniuse.com/mdn-api_element_checkvisibility\n  // https://drafts.csswg.org/cssom-view-1/#dom-element-checkvisibility\n  // @ts-ignore\n  if (element.checkVisibility) {\n    // @ts-ignore\n    return element.checkVisibility({\n      checkOpacity,\n      checkVisibilityCSS,\n    });\n  }\n  // Check if the element or its ancestors are hidden.\n  let el = element;\n  while (el && depth > 0) {\n    const style = getComputedStyle(el);\n    if (\n      (checkOpacity && style.opacity === '0') ||\n      (checkVisibilityCSS && style.visibility === 'hidden') ||\n      style.display === 'none'\n    ) {\n      return false;\n    }\n    el = el.parentElement;\n    depth--;\n  }\n  return true;\n}\n\nexport type Point = { x: number; y: number };\n\n/**\n * Get progress ratio of a point on a line segment.\n * @param x - The x coordinate of the point.\n * @param y - The y coordinate of the point.\n * @param p1 - The first point of the line segment.\n * @param p2 - The second point of the line segment.\n */\nexport function getPointProgressOnLine(\n  x: number,\n  y: number,\n  p1: Point,\n  p2: Point\n): number {\n  const segment = distance(p1, p2);\n  const toStart = distance(p1, { x, y });\n  const toEnd = distance(p2, { x, y });\n  if (toStart > segment || toEnd > segment) {\n    // Point is outside the line segment, so clamp it to the nearest end\n    return toStart > toEnd ? 1 : 0;\n  }\n  return toStart / segment;\n}\n\nexport function distance(p1: Point, p2: Point) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\n/**\n * Get or insert a CSSStyleRule with a selector in an element containing <style> tags.\n * @param styleParent - The parent element containing <style> tags.\n * @param selectorText - The selector text of the CSS rule.\n * @return {CSSStyleRule | {\n *   style: {\n *     setProperty: () => void,\n *     removeProperty: () => void,\n *     width?: string,\n *     height?: string,\n *     display?: string,\n *     transform?: string,\n *   },\n *   selectorText: string,\n * }}\n */\nexport function getOrInsertCSSRule(\n  styleParent: Element | ShadowRoot,\n  selectorText: string\n): CSSStyleRule {\n  const cssRule = getCSSRule(styleParent, (st) => st === selectorText);\n  if (cssRule) return cssRule;\n  return insertCSSRule(styleParent, selectorText);\n}\n\n/**\n * Get a CSSStyleRule with a selector in an element containing <style> tags.\n * @param  styleParent - The parent element containing <style> tags.\n * @param  predicate - A function that returns true for the desired CSSStyleRule.\n */\nexport function getCSSRule(\n  styleParent: Element | ShadowRoot,\n  predicate: (selectorText: string) => boolean\n): CSSStyleRule | undefined {\n  let style;\n\n  for (style of styleParent.querySelectorAll('style:not([media])') ?? []) {\n    // Catch this error. e.g. browser extension adds style tags.\n    //   Uncaught DOMException: CSSStyleSheet.cssRules getter:\n    //   Not allowed to access cross-origin stylesheet\n    let cssRules;\n    try {\n      cssRules = style.sheet?.cssRules;\n    } catch {\n      continue;\n    }\n    for (const rule of cssRules ?? []) {\n      if (predicate(rule.selectorText)) return rule;\n    }\n  }\n}\n\n/**\n * Insert a CSSStyleRule with a selector in an element containing <style> tags.\n * @param styleParent - The parent element containing <style> tags.\n * @param selectorText - The selector text of the CSS rule.\n */\nexport function insertCSSRule(\n  styleParent: Element | ShadowRoot,\n  selectorText: string\n): CSSStyleRule | undefined {\n  const styles = styleParent.querySelectorAll('style:not([media])') ?? [];\n  const style = styles?.[styles.length - 1];\n\n  // If there is no style sheet return an empty style rule.\n  if (!style?.sheet) {\n    // The style tag must be connected to the DOM before it has a sheet.\n    // This could indicate a bug. Should the code be moved to connectedCallback?\n    console.warn(\n      'Media Chrome: No style sheet found on style tag of',\n      styleParent\n    );\n\n    return {\n      // @ts-ignore\n      style: {\n        setProperty: () => {},\n        removeProperty: () => '',\n        getPropertyValue: () => '',\n      },\n    };\n  }\n\n  style?.sheet.insertRule(`${selectorText}{}`, style.sheet.cssRules.length);\n  return /** @type {CSSStyleRule} */ style.sheet.cssRules?.[\n    style.sheet.cssRules.length - 1\n  ];\n}\n\n/**\n * Gets the number represented by the attribute\n * @param el - (Should be an HTMLElement, but need any for SSR cases)\n * @param attrName - The name of the attribute to get\n * @param defaultValue - The default value to return if the attribute is not set\n * @returns Will return undefined if no attribute set\n */\nexport function getNumericAttr(\n  el: HTMLElement,\n  attrName: string,\n  defaultValue: number = Number.NaN\n): number | undefined {\n  const attrVal = el.getAttribute(attrName);\n  return attrVal != null ? +attrVal : defaultValue;\n}\n\n/**\n * @param el - (Should be an HTMLElement, but need any for SSR cases)\n * @param attrName - The name of the attribute to set\n * @param value - The value to set\n */\nexport function setNumericAttr(\n  el: HTMLElement,\n  attrName: string,\n  value: number\n): void {\n  // Simple cast to number\n  const nextNumericValue = +value;\n\n  // Treat null, undefined, and NaN as \"nothing values\", so unset if value is currently set.\n  if (value == null || Number.isNaN(nextNumericValue)) {\n    if (el.hasAttribute(attrName)) {\n      el.removeAttribute(attrName);\n    }\n    return;\n  }\n\n  // Avoid resetting a value that hasn't changed\n  if (getNumericAttr(el, attrName, undefined) === nextNumericValue) return;\n\n  el.setAttribute(attrName, `${nextNumericValue}`);\n}\n\n/**\n * @param el - (Should be an HTMLElement, but need any for SSR cases)\n * @param attrName - The name of the attribute to get\n */\nexport function getBooleanAttr(el: HTMLElement, attrName: string): boolean {\n  return el.hasAttribute(attrName);\n}\n\n/**\n * @param el - (Should be an HTMLElement, but need any for SSR cases)\n * @param attrName - The name of the attribute to set\n * @param value - The value to set\n */\nexport function setBooleanAttr(\n  el: HTMLElement,\n  attrName: string,\n  value: boolean\n): void {\n  // also handles undefined\n  if (value == null) {\n    if (el.hasAttribute(attrName)) {\n      el.removeAttribute(attrName);\n    }\n    return;\n  }\n\n  // avoid setting a value that hasn't changed\n  // NOTE: For booleans, we can rely on a loose equality check\n  if (getBooleanAttr(el, attrName) == value) return;\n\n  el.toggleAttribute(attrName, value);\n}\n\n/**\n * @param el - (Should be an HTMLElement, but need any for SSR cases)\n * @param attrName - The name of the attribute to get\n * @param defaultValue - The default value to return if the attribute is not set\n */\nexport function getStringAttr(\n  el: HTMLElement,\n  attrName: string,\n  defaultValue: any = null\n) {\n  return el.getAttribute(attrName) ?? defaultValue;\n}\n\n/**\n * @param el -  (Should be an HTMLElement, but need any for SSR cases)\n * @param attrName - The name of the attribute to get\n * @param value - The value to set\n */\nexport function setStringAttr(\n  el: HTMLElement,\n  attrName: string,\n  value: string\n) {\n  // also handles undefined\n  if (value == null) {\n    if (el.hasAttribute(attrName)) {\n      el.removeAttribute(attrName);\n    }\n    return;\n  }\n\n  const nextValue = `${value}`;\n  // avoid triggering a set if no change\n  if (getStringAttr(el, attrName, undefined) === nextValue) return;\n\n  el.setAttribute(attrName, nextValue);\n}\n", "import {\n  MediaUIAttributes,\n  MediaUIEvents,\n  MediaStateReceiverAttributes,\n  PointerTypes,\n} from './constants.js';\nimport {\n  closestComposedNode,\n  getBooleanAttr,\n  setBooleanAttr,\n} from './utils/element-utils.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\n\nconst template: HTMLTemplateElement = document.createElement('template');\n\ntemplate.innerHTML = /*html*/ `\n<style>\n  :host {\n    display: var(--media-control-display, var(--media-gesture-receiver-display, inline-block));\n    box-sizing: border-box;\n  }\n</style>\n`;\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n *\n * @cssproperty --media-gesture-receiver-display - `display` property of gesture receiver.\n * @cssproperty --media-control-display - `display` property of control.\n */\nclass MediaGestureReceiver extends globalThis.HTMLElement {\n  #mediaController;\n\n  // NOTE: Currently \"baking in\" actions + attrs until we come up with\n  // a more robust architecture (CJP)\n  static get observedAttributes(): string[] {\n    return [\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER,\n      MediaUIAttributes.MEDIA_PAUSED,\n    ];\n  }\n\n  nativeEl: HTMLElement;\n  _pointerType: string;\n\n  constructor(\n    options: {\n      slotTemplate?: HTMLTemplateElement;\n      defaultContent?: string;\n    } = {}\n  ) {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      const shadow = this.attachShadow({ mode: 'open' });\n\n      const buttonHTML = template.content.cloneNode(true);\n      this.nativeEl = buttonHTML as HTMLElement;\n\n      // Slots\n      let slotTemplate = options.slotTemplate;\n\n      if (!slotTemplate) {\n        slotTemplate = document.createElement('template');\n        slotTemplate.innerHTML = `<slot>${options.defaultContent || ''}</slot>`;\n      }\n\n      this.nativeEl.appendChild(slotTemplate.content.cloneNode(true));\n      shadow.appendChild(buttonHTML);\n    }\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue && this.isConnected) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback(): void {\n    this.tabIndex = -1;\n    this.setAttribute('aria-hidden', 'true');\n\n    this.#mediaController = getMediaControllerEl(this);\n    if (this.getAttribute(MediaStateReceiverAttributes.MEDIA_CONTROLLER)) {\n      this.#mediaController?.associateElement?.(this);\n    }\n\n    this.#mediaController?.addEventListener('pointerdown', this);\n    this.#mediaController?.addEventListener('click', this);\n  }\n\n  disconnectedCallback(): void {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    if (this.getAttribute(MediaStateReceiverAttributes.MEDIA_CONTROLLER)) {\n      this.#mediaController?.unassociateElement?.(this);\n    }\n\n    this.#mediaController?.removeEventListener('pointerdown', this);\n    this.#mediaController?.removeEventListener('click', this);\n    this.#mediaController = null;\n  }\n\n  handleEvent(event): void {\n    const composedTarget = event.composedPath()?.[0];\n    const allowList = ['video', 'media-controller'];\n    if (!allowList.includes(composedTarget?.localName)) return;\n\n    if (event.type === 'pointerdown') {\n      // Since not all browsers have updated to be spec compliant, where 'click' events should be PointerEvents,\n      // we can use use 'pointerdown' to reliably determine the pointer type. (CJP).\n      this._pointerType = event.pointerType;\n    } else if (event.type === 'click') {\n      // Cannot use composedPath or target because this is a layer on top and pointer events are disabled.\n      // Attach to window and check if click is in this element's bounding box to keep <video> right-click menu.\n      const { clientX, clientY } = event;\n      const { left, top, width, height } = this.getBoundingClientRect();\n      const x = clientX - left;\n      const y = clientY - top;\n      if (\n        x < 0 ||\n        y < 0 ||\n        x > width ||\n        y > height ||\n        // In case this element has no dimensions (or display: none) return.\n        (width === 0 && height === 0)\n      ) {\n        return;\n      }\n\n      const { pointerType = this._pointerType } = event;\n      // NOTE: While there are cases where we may have a stale this._pointerType,\n      // we're guaranteed that the most recent this._pointerType will correspond\n      // to the current click event definitionally. As such, this clearing is technically\n      // unnecessary (CJP)\n      this._pointerType = undefined;\n\n      // NOTE: Longer term, we'll likely want to delay this to support double click/double tap (CJP)\n      if (pointerType === PointerTypes.TOUCH) {\n        this.handleTap(event);\n        return;\n      } else if (pointerType === PointerTypes.MOUSE) {\n        this.handleMouseClick(event);\n        return;\n      }\n    }\n  }\n\n  /**\n   * @type {boolean} Is the media paused\n   */\n  get mediaPaused() {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n\n  // NOTE: Currently \"baking in\" actions + attrs until we come up with\n  // a more robust architecture (CJP)\n  /**\n   * @abstract\n   * @argument {Event} e\n   */\n  handleTap(e) {} // eslint-disable-line\n\n  // eslint-disable-next-line\n  handleMouseClick(e) {\n    const eventName = this.mediaPaused\n      ? MediaUIEvents.MEDIA_PLAY_REQUEST\n      : MediaUIEvents.MEDIA_PAUSE_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nfunction getMediaControllerEl(controlEl) {\n  const mediaControllerId = controlEl.getAttribute(\n    MediaStateReceiverAttributes.MEDIA_CONTROLLER\n  );\n  if (mediaControllerId) {\n    return controlEl.getRootNode()?.getElementById(mediaControllerId);\n  }\n  return closestComposedNode(controlEl, 'media-controller');\n}\n\nif (!globalThis.customElements.get('media-gesture-receiver')) {\n  globalThis.customElements.define(\n    'media-gesture-receiver',\n    MediaGestureReceiver\n  );\n}\n\nexport default MediaGestureReceiver;\n", "/*\n  The <media-chrome> can contain the control elements\n  and the media element. Features:\n  * Auto-set the `media` attribute on child media chrome elements\n    * Uses the element with slot=\"media\"\n  * Take custom controls to fullscreen\n  * Position controls at the bottom\n  * Auto-hide controls on inactivity while playing\n*/\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIAttributes, MediaStateChangeEvents } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { observeResize } from './utils/resize-observer.js';\n// Guarantee that `<media-gesture-receiver/>` is available for use in the template\nimport './media-gesture-receiver.js';\n\nexport const Attributes = {\n  AUDIO: 'audio',\n  AUTOHIDE: 'autohide',\n  BREAKPOINTS: 'breakpoints',\n  GESTURES_DISABLED: 'gesturesdisabled',\n  KEYBOARD_CONTROL: 'keyboardcontrol',\n  NO_AUTOHIDE: 'noautohide',\n  USER_INACTIVE: 'userinactive',\n};\n\nconst template: HTMLTemplateElement = document.createElement('template');\n\ntemplate.innerHTML = /*html*/ `\n  <style>\n    ${\n      /*\n       * outline on media is turned off because it is allowed to get focus to faciliate hotkeys.\n       * However, on keyboard interactions, the focus outline is shown,\n       * which is particularly noticeable when going fullscreen via hotkeys.\n       */ ''\n    }\n    :host([${MediaUIAttributes.MEDIA_IS_FULLSCREEN}]) ::slotted([slot=media]) {\n      outline: none;\n    }\n\n    :host {\n      box-sizing: border-box;\n      position: relative;\n      display: inline-block;\n      line-height: 0;\n      background-color: var(--media-background-color, #000);\n    }\n\n    :host(:not([${Attributes.AUDIO}])) [part~=layer]:not([part~=media-layer]) {\n      position: absolute;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n      display: flex;\n      flex-flow: column nowrap;\n      align-items: start;\n      pointer-events: none;\n      background: none;\n    }\n\n    slot[name=media] {\n      display: var(--media-slot-display, contents);\n    }\n\n    ${\n      /*\n       * when in audio mode, hide the slotted media element by default\n       */ ''\n    }\n    :host([${Attributes.AUDIO}]) slot[name=media] {\n      display: var(--media-slot-display, none);\n    }\n\n    ${\n      /*\n       * when in audio mode, hide the gesture-layer which causes media-controller to be taller than the control bar\n       */ ''\n    }\n    :host([${Attributes.AUDIO}]) [part~=layer][part~=gesture-layer] {\n      height: 0;\n      display: block;\n    }\n\n    ${\n      /*\n       * if gestures are disabled, don't accept pointer-events\n       */ ''\n    }\n    :host(:not([${Attributes.AUDIO}])[${\n  Attributes.GESTURES_DISABLED\n}]) ::slotted([slot=gestures-chrome]),\n    :host(:not([${Attributes.AUDIO}])[${\n  Attributes.GESTURES_DISABLED\n}]) media-gesture-receiver[slot=gestures-chrome] {\n      display: none;\n    }\n\n    ${\n      /*\n       * any slotted element that isn't a poster or media slot should be pointer-events auto\n       * we'll want to add here any slotted elements that shouldn't get pointer-events by default when slotted\n       */ ''\n    }\n    ::slotted(:not([slot=media]):not([slot=poster]):not(media-loading-indicator):not([hidden])) {\n      pointer-events: auto;\n    }\n\n    :host(:not([${Attributes.AUDIO}])) *[part~=layer][part~=centered-layer] {\n      align-items: center;\n      justify-content: center;\n    }\n\n    :host(:not([${\n      Attributes.AUDIO\n    }])) ::slotted(media-gesture-receiver[slot=gestures-chrome]),\n    :host(:not([${\n      Attributes.AUDIO\n    }])) media-gesture-receiver[slot=gestures-chrome] {\n      align-self: stretch;\n      flex-grow: 1;\n    }\n\n    slot[name=middle-chrome] {\n      display: inline;\n      flex-grow: 1;\n      pointer-events: none;\n      background: none;\n    }\n\n    ${/* Position the media and poster elements to fill the container */ ''}\n    ::slotted([slot=media]),\n    ::slotted([slot=poster]) {\n      width: 100%;\n      height: 100%;\n    }\n\n    ${/* Video specific styles */ ''}\n    :host(:not([${Attributes.AUDIO}])) .spacer {\n      flex-grow: 1;\n    }\n\n    ${/* Safari needs this to actually make the element fill the window */ ''}\n    :host(:-webkit-full-screen) {\n      ${/* Needs to use !important otherwise easy to break */ ''}\n      width: 100% !important;\n      height: 100% !important;\n    }\n\n    ${/* Only add these if auto hide is not disabled */ ''}\n    ::slotted(:not([slot=media]):not([slot=poster]):not([${\n      Attributes.NO_AUTOHIDE\n    }]):not([hidden])) {\n      opacity: 1;\n      transition: opacity 0.25s;\n    }\n\n    ${\n      /* Hide controls when inactive, not paused, not audio and auto hide not disabled */ ''\n    }\n    :host([${Attributes.USER_INACTIVE}]:not([${\n  MediaUIAttributes.MEDIA_PAUSED\n}]):not([${MediaUIAttributes.MEDIA_IS_AIRPLAYING}]):not([${\n  MediaUIAttributes.MEDIA_IS_CASTING\n}]):not([${\n  Attributes.AUDIO\n}])) ::slotted(:not([slot=media]):not([slot=poster]):not([${\n  Attributes.NO_AUTOHIDE\n}])) {\n      opacity: 0;\n      transition: opacity 1s;\n    }\n\n    :host([${Attributes.USER_INACTIVE}]:not([${\n  MediaUIAttributes.MEDIA_PAUSED\n}]):not([${MediaUIAttributes.MEDIA_IS_CASTING}]):not([${\n  Attributes.AUDIO\n}])) ::slotted([slot=media]) {\n      cursor: none;\n    }\n\n    ::slotted(media-control-bar)  {\n      align-self: stretch;\n    }\n\n    ${\n      /* ::slotted([slot=poster]) doesn't work for slot fallback content so hide parent slot instead */ ''\n    }\n    :host(:not([${Attributes.AUDIO}])[${\n  MediaUIAttributes.MEDIA_HAS_PLAYED\n}]) slot[name=poster] {\n      display: none;\n    }\n\n    ::slotted([role=\"menu\"]) {\n      align-self: end;\n    }\n\n    ::slotted([role=\"dialog\"]) {\n      align-self: center;\n    }\n  </style>\n\n  <slot name=\"media\" part=\"layer media-layer\"></slot>\n  <slot name=\"poster\" part=\"layer poster-layer\"></slot>\n  <slot name=\"gestures-chrome\" part=\"layer gesture-layer\">\n    <media-gesture-receiver slot=\"gestures-chrome\"></media-gesture-receiver>\n  </slot>\n  <span part=\"layer vertical-layer\">\n    <slot name=\"top-chrome\" part=\"top chrome\"></slot>\n    <slot name=\"middle-chrome\" part=\"middle chrome\"></slot>\n    <slot name=\"centered-chrome\" part=\"layer centered-layer center centered chrome\"></slot>\n    ${/* default, effectively \"bottom-chrome\" */ ''}\n    <slot part=\"bottom chrome\"></slot>\n  </span>\n`;\n\nconst MEDIA_UI_ATTRIBUTE_NAMES = Object.values(MediaUIAttributes);\n\nconst defaultBreakpoints = 'sm:384 md:576 lg:768 xl:960';\n\nfunction resizeCallback(entry: ResizeObserverEntry) {\n  setBreakpoints(entry.target as HTMLElement, entry.contentRect.width);\n}\n\nfunction setBreakpoints(container: HTMLElement, width: number) {\n  if (!container.isConnected) return;\n\n  const breakpoints =\n    container.getAttribute(Attributes.BREAKPOINTS) ?? defaultBreakpoints;\n  const ranges = createBreakpointMap(breakpoints);\n  const activeBreakpoints = getBreakpoints(ranges, width);\n\n  let changed = false;\n\n  Object.keys(ranges).forEach((name) => {\n    if (activeBreakpoints.includes(name)) {\n      if (!container.hasAttribute(`breakpoint${name}`)) {\n        container.setAttribute(`breakpoint${name}`, '');\n        changed = true;\n      }\n      return;\n    }\n\n    if (container.hasAttribute(`breakpoint${name}`)) {\n      container.removeAttribute(`breakpoint${name}`);\n      changed = true;\n    }\n  });\n\n  if (changed) {\n    const evt = new CustomEvent(MediaStateChangeEvents.BREAKPOINTS_CHANGE, {\n      detail: activeBreakpoints,\n    });\n\n    container.dispatchEvent(evt);\n  }\n}\n\nfunction createBreakpointMap(breakpoints: string) {\n  const pairs = breakpoints.split(/\\s+/);\n  return Object.fromEntries(pairs.map((pair) => pair.split(':')));\n}\n\nfunction getBreakpoints(breakpoints: Record<string, string>, width: number) {\n  return Object.keys(breakpoints).filter((name) => {\n    return width >= parseInt(breakpoints[name]);\n  });\n}\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {boolean} audio\n * @attr {string} autohide\n * @attr {string} breakpoints\n * @attr {boolean} gesturesdisabled\n * @attr {boolean} keyboardcontrol\n * @attr {boolean} noautohide\n * @attr {boolean} userinactive\n *\n * @cssprop --media-background-color - `background-color` of container.\n * @cssprop --media-slot-display - `display` of the media slot (default none for [audio] usage).\n */\nclass MediaContainer extends globalThis.HTMLElement {\n  static get observedAttributes(): string[] {\n    return (\n      [Attributes.AUTOHIDE, Attributes.GESTURES_DISABLED]\n        .concat(MEDIA_UI_ATTRIBUTE_NAMES)\n        // Filter out specific / complex data media UI attributes\n        // that shouldn't be propagated to this state receiver element.\n        .filter(\n          (name) =>\n            ![\n              MediaUIAttributes.MEDIA_RENDITION_LIST,\n              MediaUIAttributes.MEDIA_AUDIO_TRACK_LIST,\n              MediaUIAttributes.MEDIA_CHAPTERS_CUES,\n              MediaUIAttributes.MEDIA_WIDTH,\n              MediaUIAttributes.MEDIA_HEIGHT,\n            ].includes(name as any)\n        )\n    );\n  }\n\n  #pointerDownTimeStamp = 0;\n  #currentMedia: HTMLMediaElement | null = null;\n  #inactiveTimeout: ReturnType<typeof setTimeout> | null = null;\n  #autohide: number | undefined;\n  breakpointsComputed = false;\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    // Watch for child adds/removes and update the media element if necessary\n    const mutationCallback = (mutationsList: MutationRecord[]) => {\n      const media = this.media;\n\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'childList') {\n          // Media element being removed\n          mutation.removedNodes.forEach((node: Element) => {\n            // Is this a direct child media element of media-controller?\n            // TODO: This accuracy doesn't matter after moving away from media attrs.\n            // Could refactor so we can always just call 'dispose' on any removed media el.\n            if (node.slot == 'media' && mutation.target == this) {\n              // Check if this was the current media by if it was the first\n              // el with slot=media in the child list. There could be multiple.\n              let previousSibling =\n                mutation.previousSibling &&\n                (mutation.previousSibling as Element).previousElementSibling;\n\n              // Must have been first if no prev sibling or new media\n              if (!previousSibling || !media) {\n                this.mediaUnsetCallback(node as HTMLMediaElement);\n              } else {\n                // Check if any prev siblings had a slot=media\n                // Should remain true otherwise\n                let wasFirst = previousSibling.slot !== 'media';\n                while (\n                  (previousSibling =\n                    previousSibling.previousSibling as Element) !== null\n                ) {\n                  if (previousSibling.slot == 'media') wasFirst = false;\n                }\n                if (wasFirst) this.mediaUnsetCallback(node as HTMLMediaElement);\n              }\n            }\n          });\n\n          // Controls or media element being added\n          // No need to inject anything if media=null\n          if (media) {\n            mutation.addedNodes.forEach((node) => {\n              if (node === media) {\n                // Update all controls with new media if this is the new media\n                this.handleMediaUpdated(media);\n              }\n            });\n          }\n        }\n      }\n    };\n\n    const mutationObserver = new MutationObserver(mutationCallback);\n    mutationObserver.observe(this, { childList: true, subtree: true });\n\n    let pendingResizeCb = false;\n    const deferResizeCallback = (entry: ResizeObserverEntry) => {\n      // Already have a pending async breakpoint computation, so go ahead and bail\n      if (pendingResizeCb) return;\n      // Just in case it takes too long (which will cause an error to throw),\n      // do the breakpoint computation asynchronously\n      setTimeout(() => {\n        resizeCallback(entry);\n        // Once we've completed, reset the pending cb flag to false\n        pendingResizeCb = false;\n\n        if (!this.breakpointsComputed) {\n          this.breakpointsComputed = true;\n          this.dispatchEvent(\n            new CustomEvent(MediaStateChangeEvents.BREAKPOINTS_COMPUTED, {\n              bubbles: true,\n              composed: true,\n            })\n          );\n        }\n      }, 0);\n      pendingResizeCb = true;\n    };\n    observeResize(this, deferResizeCallback);\n\n    // Handles the case when the slotted media element is a slot element itself.\n    // e.g. chaining media slots for media themes.\n\n    /** @type {HTMLSlotElement} */\n    const chainedSlot = this.querySelector(\n      ':scope > slot[slot=media]'\n    ) as HTMLSlotElement;\n    if (chainedSlot) {\n      chainedSlot.addEventListener('slotchange', () => {\n        const slotEls = chainedSlot.assignedElements({ flatten: true });\n        if (!slotEls.length) {\n          if (this.#currentMedia) {\n            this.mediaUnsetCallback(this.#currentMedia);\n          }\n          return;\n        }\n        this.handleMediaUpdated(this.media);\n      });\n    }\n  }\n\n  // Could share this code with media-chrome-html-element instead\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string,\n    newValue: string\n  ) {\n    if (attrName.toLowerCase() == Attributes.AUTOHIDE) {\n      this.autohide = newValue;\n    }\n  }\n\n  // First direct child with slot=media, or null\n  /**\n   * @returns {HTMLVideoElement &\n   * {buffered,\n   * webkitEnterFullscreen?,\n   * webkitExitFullscreen?,\n   * requestCast?,\n   * webkitShowPlaybackTargetPicker?,\n   * videoTracks?,\n   * }}\n   */\n  get media(): HTMLVideoElement | null {\n    /** @type {HTMLVideoElement} */\n    let media = this.querySelector(':scope > [slot=media]') as HTMLVideoElement;\n\n    // Chaining media slots for media templates\n    if (media?.nodeName == 'SLOT')\n      // @ts-ignore\n      media = media.assignedElements({ flatten: true })[0];\n\n    return media;\n  }\n\n  /**\n   * @param {HTMLMediaElement} media\n   */\n  async handleMediaUpdated(media: HTMLMediaElement) {\n    // Anything \"falsy\" couldn't act as a media element.\n    if (!media) return;\n\n    this.#currentMedia = media;\n\n    // Custom element. Wait until it's defined before resolving\n    if (media.localName.includes('-')) {\n      await globalThis.customElements.whenDefined(media.localName);\n    }\n\n    // Even if we are not connected to the DOM after this await still call mediaSetCallback\n    // so the media state is already computed once, then when the container is connected\n    // to the DOM mediaSetCallback is called again to attach the root node event listeners.\n\n    this.mediaSetCallback(media);\n  }\n\n  connectedCallback(): void {\n    const isAudioChrome = this.getAttribute(Attributes.AUDIO) != null;\n    const label = isAudioChrome ? nouns.AUDIO_PLAYER() : nouns.VIDEO_PLAYER();\n    this.setAttribute('role', 'region');\n    this.setAttribute('aria-label', label);\n\n    this.handleMediaUpdated(this.media);\n\n    // Assume user is inactive until they're not (aka userinactive by default is true)\n    // This allows things like autoplay and programmatic playing to also initiate hiding controls (CJP)\n    this.setAttribute(Attributes.USER_INACTIVE, '');\n\n    this.addEventListener('pointerdown', this);\n    this.addEventListener('pointermove', this);\n    this.addEventListener('pointerup', this);\n    this.addEventListener('mouseleave', this);\n    this.addEventListener('keyup', this);\n\n    globalThis.window?.addEventListener('mouseup', this);\n  }\n\n  disconnectedCallback(): void {\n    // When disconnected from the DOM, remove root node and media event listeners\n    // to prevent memory leaks and unneeded invisble UI updates.\n    if (this.media) {\n      this.mediaUnsetCallback(this.media);\n    }\n\n    globalThis.window?.removeEventListener('mouseup', this);\n  }\n\n  /**\n   * @abstract\n   * @param {HTMLMediaElement} media\n   */\n  mediaSetCallback(media: HTMLMediaElement) {} // eslint-disable-line\n\n  /**\n   * @param {HTMLMediaElement} media\n   */\n  mediaUnsetCallback(\n    media: HTMLMediaElement // eslint-disable-line\n  ) {\n    this.#currentMedia = null;\n  }\n\n  handleEvent(event: Event) {\n    switch (event.type) {\n      case 'pointerdown':\n        this.#pointerDownTimeStamp = (event as PointerEvent).timeStamp;\n        break;\n      case 'pointermove':\n        this.#handlePointerMove(event as PointerEvent);\n        break;\n      case 'pointerup':\n        this.#handlePointerUp(event as PointerEvent);\n        break;\n      case 'mouseleave':\n        // Immediately hide if mouse leaves the container.\n        this.#setInactive();\n        break;\n      case 'mouseup':\n        this.removeAttribute(Attributes.KEYBOARD_CONTROL);\n        break;\n      case 'keyup':\n        // Unhide for keyboard controlling.\n        this.#scheduleInactive();\n        // Allow for focus styles only when using the keyboard to navigate.\n        this.setAttribute(Attributes.KEYBOARD_CONTROL, '');\n        break;\n    }\n  }\n\n  #handlePointerMove(event: PointerEvent) {\n    if (event.pointerType !== 'mouse') {\n      // On mobile we toggle the controls on a tap which is handled in pointerup,\n      // but Android fires pointermove events even when the user is just tapping.\n      // Prevent calling setActive() on tap because it will mess with the toggle logic.\n      const MAX_TAP_DURATION = 250;\n      // If the move duration exceeds 200ms then it's a drag and we should show the controls.\n      if (event.timeStamp - this.#pointerDownTimeStamp < MAX_TAP_DURATION)\n        return;\n    }\n\n    this.#setActive();\n    // Stay visible if hovered over control bar\n    clearTimeout(this.#inactiveTimeout);\n\n    // If hovering over something other than controls, we're free to make inactive\n    // @ts-ignore\n    if ([this, this.media].includes(event.target)) {\n      this.#scheduleInactive();\n    }\n  }\n\n  #handlePointerUp(event: PointerEvent) {\n    if (event.pointerType === 'touch') {\n      const controlsVisible = !this.hasAttribute(Attributes.USER_INACTIVE);\n\n      if (\n        [this, this.media].includes(event.target as HTMLVideoElement) &&\n        controlsVisible\n      ) {\n        this.#setInactive();\n      } else {\n        this.#scheduleInactive();\n      }\n    } else if (\n      event\n        .composedPath()\n        .some((el: HTMLElement) =>\n          ['media-play-button', 'media-fullscreen-button'].includes(\n            el?.localName\n          )\n        )\n    ) {\n      this.#scheduleInactive();\n    }\n  }\n\n  #setInactive() {\n    if (this.#autohide < 0) return;\n    if (this.hasAttribute(Attributes.USER_INACTIVE)) return;\n\n    this.setAttribute(Attributes.USER_INACTIVE, '');\n\n    const evt = new globalThis.CustomEvent(\n      MediaStateChangeEvents.USER_INACTIVE,\n      { composed: true, bubbles: true, detail: true }\n    );\n    this.dispatchEvent(evt);\n  }\n\n  #setActive() {\n    if (!this.hasAttribute(Attributes.USER_INACTIVE)) return;\n\n    this.removeAttribute(Attributes.USER_INACTIVE);\n\n    const evt = new globalThis.CustomEvent(\n      MediaStateChangeEvents.USER_INACTIVE,\n      { composed: true, bubbles: true, detail: false }\n    );\n    this.dispatchEvent(evt);\n  }\n\n  #scheduleInactive() {\n    this.#setActive();\n\n    clearTimeout(this.#inactiveTimeout);\n\n    const autohide = parseInt(this.autohide);\n\n    // Setting autohide to -1 turns off autohide\n    if (autohide < 0) return;\n\n    /** @type {ReturnType<typeof setTimeout>} */\n    this.#inactiveTimeout = setTimeout(() => {\n      this.#setInactive();\n    }, autohide * 1000);\n  }\n\n  set autohide(seconds: string) {\n    const parsedSeconds = Number(seconds);\n    this.#autohide = isNaN(parsedSeconds) ? 0 : parsedSeconds;\n  }\n\n  get autohide(): string {\n    return (this.#autohide === undefined ? 2 : this.#autohide).toString();\n  }\n}\n\nif (!globalThis.customElements.get('media-container')) {\n  globalThis.customElements.define('media-container', MediaContainer);\n}\n\nexport { MediaContainer };\nexport default MediaContainer;\n", "export class AttributeTokenList\n  implements\n    Pick<\n      DOMTokenList,\n      | 'length'\n      | 'value'\n      | 'toString'\n      | 'item'\n      | 'add'\n      | 'remove'\n      | 'contains'\n      | 'toggle'\n      | 'replace'\n    >\n{\n  #el: HTMLElement;\n  #attr: string;\n  #defaultSet: Set<string>;\n  #tokenSet: Set<string> = new Set<string>();\n\n  constructor(\n    el?: HTMLElement,\n    attr?: string,\n    { defaultValue } = { defaultValue: undefined }\n  ) {\n    this.#el = el;\n    this.#attr = attr;\n    this.#defaultSet = new Set(defaultValue);\n  }\n\n  [Symbol.iterator]() {\n    return this.#tokens.values();\n  }\n\n  get #tokens(): Set<string> {\n    return this.#tokenSet.size ? this.#tokenSet : this.#defaultSet;\n  }\n\n  get length(): number {\n    return this.#tokens.size;\n  }\n\n  get value(): string {\n    return [...this.#tokens].join(' ') ?? '';\n  }\n\n  set value(val: string) {\n    if (val === this.value) return;\n    this.#tokenSet = new Set();\n    this.add(...(val?.split(' ') ?? []));\n  }\n\n  toString(): string {\n    return this.value;\n  }\n\n  item(index): string {\n    return [...this.#tokens][index];\n  }\n\n  values(): Iterable<string> {\n    return this.#tokens.values();\n  }\n\n  forEach(\n    callback: (value: string, key: string, parent: Set<string>) => void,\n    thisArg?: any\n  ) {\n    this.#tokens.forEach(callback, thisArg);\n  }\n\n  add(...tokens: string[]): void {\n    tokens.forEach((t) => this.#tokenSet.add(t));\n    // if the attribute was removed don't try to add it again.\n    if (this.value === '' && !this.#el?.hasAttribute(`${this.#attr}`)) {\n      return;\n    }\n    this.#el?.setAttribute(`${this.#attr}`, `${this.value}`);\n  }\n\n  remove(...tokens: string[]): void {\n    tokens.forEach((t) => this.#tokenSet.delete(t));\n    this.#el?.setAttribute(`${this.#attr}`, `${this.value}`);\n  }\n\n  contains(token: string): boolean {\n    return this.#tokens.has(token);\n  }\n\n  toggle(token: string, force: boolean): boolean {\n    if (typeof force !== 'undefined') {\n      if (force) {\n        this.add(token);\n        return true;\n      } else {\n        this.remove(token);\n        return false;\n      }\n    }\n\n    if (this.contains(token)) {\n      this.remove(token);\n      return false;\n    }\n\n    this.add(token);\n    return true;\n  }\n\n  replace(oldToken: string, newToken: string): boolean {\n    this.remove(oldToken);\n    this.add(newToken);\n    return oldToken === newToken;\n  }\n}\n", "import { MediaUIAttributes, TextTrackKinds } from '../constants.js';\nimport type { TextTrackLike } from './TextTrackLike.js';\n\n// NOTE: This is generic for any CSS/html list representation. Consider renaming and moving to generic module.\n/**\n * Splits a string (representing TextTracks) into an array of strings based on whitespace.\n * @param textTracksStr - a string of 1+ \"items\" (representing TextTracks), separated by whitespace\n * @returns An array of non-whitesace strings (each representing a single TextTrack).\n */\nexport const splitTextTracksStr = (textTracksStr = ''): string[] =>\n  textTracksStr.split(/\\s+/);\n\n/**\n * Parses a string that represents a TextTrack into a \"TextTrack-like object\"\n * The expected TextTrack string format is:\n * \"language[:label]\"\n * where the language *should* conform to BCP 47, just like TextTracks, and the (optional)\n * label *must* be URL encoded.\n * Note that this format may be expanded to include additional properties, such as\n * `id`.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n * @param textTrackStr - A well-defined TextTrack string representations\n * @returns An object that resembles a (partial) TextTrack (`{ language: string; label?: string; }`)\n */\nexport const parseTextTrackStr = (textTrackStr = ''): TextTrackLike => {\n  const [kind, language, encodedLabel] = textTrackStr.split(':');\n  const label = encodedLabel ? decodeURIComponent(encodedLabel) : undefined;\n  return {\n    kind: kind === 'cc' ? TextTrackKinds.CAPTIONS : TextTrackKinds.SUBTITLES,\n    language,\n    label,\n  };\n};\n\n/**\n * Parses a whitespace-separated string that represents list of TextTracks into an array of TextTrack-like objects,\n * where each object will have the properties identified by the corresponding string, plus any properties generically\n * provided by the (optional) `textTrackLikeObj` argument.\n * @param textTracksStr - a string of 1+ \"items\" (representing TextTracks), separated by whitespace\n * @param textTrackLikeObj An object that resembles a (partial) TextTrack, used to add generic properties to all parsed TextTracks.\n * @returns An array of \"TextTrack-like objects\", each with properties parsed from the string and any properties from `textTrackLikeObj`.\n * @example\n * ```js\n * const tracksStr = 'en-US:English en:English%20%28with%20descriptions%29';\n * const tracks = parseTextTracksStr(tracksStr);\n * // [{ language: 'en-US', label: 'English' }, { language: 'en', label: 'English (with descriptions)' }];\n *\n * const tracksData = { kind: 'captions' };\n * const tracksWithData = parseTextTracksStr(tracksStr, tracksData);\n * // [{ language: 'en-US', label: 'English', kind: 'captions' }, { language: 'en', label: 'English (with descriptions)', kind: 'captions' }];\n * ```\n */\nexport const parseTextTracksStr = (\n  textTracksStr = '',\n  textTrackLikeObj: Partial<TextTrackLike> = {}\n): TextTrackLike[] => {\n  return splitTextTracksStr(textTracksStr).map((textTrackStr) => {\n    const textTrackObj = parseTextTrackStr(textTrackStr);\n    return {\n      ...textTrackLikeObj,\n      ...textTrackObj,\n    };\n  });\n};\n\nexport type TrackOrTracks = string[] | TextTrackLike[] | string | TextTrackLike;\nexport type TextTrackListLike = TextTrackLike[] | TextTrackList;\n\n/**\n * Takes a variety of possible representations of TextTrack(s) and \"normalizes\" them to an Array of 1+ TextTrack-like objects.\n * @param trackOrTracks - A value representing 1+ TextTracks\n * @returns An array of TextTrack-like objects.\n */\nexport const parseTracks = (trackOrTracks: TrackOrTracks): TextTrackLike[] => {\n  if (!trackOrTracks) return [];\n  // Already an array, but might be an array of strings, objects, or both.\n  if (Array.isArray(trackOrTracks)) {\n    return trackOrTracks.map((trackObjOrStr) => {\n      // If the individual track is a string representation, translate it into a TextTrack-like object.\n      if (typeof trackObjOrStr === 'string') {\n        return parseTextTrackStr(trackObjOrStr);\n      }\n      // Otherwise, assume it already is one.\n      return trackObjOrStr;\n    });\n  }\n  // A string of 1+ TextTrack representations. Parse into an array of objects.\n  if (typeof trackOrTracks === 'string') {\n    return parseTextTracksStr(trackOrTracks);\n  }\n  // Assume a single TextTrack-like object. Wrap into an array of 1.\n  return [trackOrTracks];\n};\n\n/**\n * Translates a TextTrack-like object into a well-defined string representation for the TextTrack\n * @param obj - A TextTrack or TextTrack-like object\n * @returns {string} A string representing a TextTrack with the format: \"language[:label]\"\n */\nexport const formatTextTrackObj = (\n  { kind, label, language }: TextTrackLike = { kind: 'subtitles' }\n): string => {\n  if (!label) return language;\n  return `${kind === 'captions' ? 'cc' : 'sb'}:${language}:${encodeURIComponent(\n    label\n  )}`;\n};\n\n/**\n * Translates a set of TextTracks into a well-defined, whitespace-separated string representation of the set\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList\n * @param textTracks - A TextTracks object or an Array of TextTracks or TextTrack-like objects.\n * @returns A string representing a set of TextTracks, separated by whitespace.\n */\nexport const stringifyTextTrackList = (\n  textTracks: TextTrackListLike = []\n): string => {\n  return Array.prototype.map.call(textTracks, formatTextTrackObj).join(' ');\n};\n\n// NOTE: This is a generic higher order fn. Consider and moving to generic module.\n/**\n * A generic higher-order function that yields a predicate to assert whether or not some value has the provided key/value pair\n * @param key - The property key/name against which we'd like to match\n * @param value - The value of the key we expect for a match\n * @returns A predicate function that yields true if the provided object has the expected key/value pair, otherwise false.\n * @example\n * ```js\n * const hasShowingMode = isMatchingPropOf('mode', 'showing');\n * hasShowingMode({ mode: 'showing' }); // true\n * hasShowingMode({ mode: 'disabled' }); // false\n * hasShowingMode({ no_mode: 'any' }); // false\n * ```\n */\nexport const isMatchingPropOf =\n  (key: string | number, value: any): ((value: any) => boolean) =>\n  (obj) =>\n    obj[key] === value;\n\n// NOTE: This is a generic higher order fn. Consider renaming and moving to generic module.\n/**\n * A higher-order function that yields a single predicate to assert whether or not some value has *every* key/value pair defined in `filterObj`.\n * @param filterObj - An object of key/value pairs that we expect on a given object\n * @returns A predicate function that yields true iff the provided object has *every* key/value pair in `filterObj`, otherwise false\n * @example\n * ```js\n * const track1 = { label: 'English', kind: 'captions', language: 'en-US' };\n * const track1a = { label: 'English', kind: 'captions', language: 'en-US', id: '1', mode: 'showing' };\n * const track2 = { label: 'English (with descriptions)', kind: 'captions', language: 'en-US', id: '2', mode: 'disabled' };\n * const track3 = { label: 'Espa\u00F1ol', kind: 'subtitles', language: 'es-MX', id: '3', mode: 'disabled' };\n * const track4 = { label: 'English', language: 'en-US', mode: 'showing' };\n *\n * const isMatchingTrack = textTrackObjAsPred({ label: 'English', kind: 'captions', language: 'en-US' });\n * isMatchingTrack(track1); // true\n * isMatchingTrack(track1a); // true\n * isMatchingTrack(track2); // false\n * isMatchingTrack(track3); // false\n * isMatchingTrack(track4); // false\n * isMatchingTrack({ no_corresponding_props: 'any' }); // false\n * ```\n */\nexport const textTrackObjAsPred = (\n  filterObj: any\n): ((textTrack: TextTrackLike) => boolean) => {\n  const preds = Object.entries(filterObj).map(([key, value]) => {\n    // Translate each key/value pair into a single predicate\n    return isMatchingPropOf(key, value);\n  });\n\n  // Return a predicate function that takes the array of single key/value pair predicates and asserts that *every* pred in the array is true of the (TextTrack-like) object\n  return (textTrack) => preds.every((pred) => pred(textTrack));\n};\n\n/**\n * Updates any `tracks` that match one of the `tracksToUpdate` to be in the provided TextTrack `mode`.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/mode\n * @see {@link parseTracks}\n * @param mode - The desired mode for any matching TextTracks. Should be one of \"disabled\"|\"hidden\"|\"showing\"\n * @param tracks - A TextTracks object or array of TextTracks that should contain any matching TextTracks to update\n * @param tracksToUpdate - A value representing a set of TextTracks\n */\nexport const updateTracksModeTo = (\n  mode: TextTrackMode,\n  tracks: TextTrackListLike = [],\n  tracksToUpdate: TrackOrTracks = []\n) => {\n  // 1. Normalize the tracksToUpdate into an array of \"partial TextTrack-like\" objects\n  // 2. Convert each object into its own predicate function to identify that an actual TextTrack is a match\n  const preds = parseTracks(tracksToUpdate).map(textTrackObjAsPred);\n\n  // A track is identified as a track to update as long as it matches *one* of the preds (i.e. as long as it \"looks like\" one of \"partial TextTrack-like\" objects)\n  const isTrackToUpdate = (textTrack) => {\n    return preds.some((pred) => pred(textTrack));\n  };\n\n  Array.from(tracks as any)\n    // 1. Filter to only include tracks to update\n    .filter(isTrackToUpdate)\n    // 2. Update each of those tracks to the appropriate mode.\n    .forEach((textTrack: TextTrackLike) => {\n      textTrack.mode = mode;\n    });\n};\n\nexport type TrackFilter = (track: TextTrackLike) => boolean;\n\n/**\n * Takes an `HTMLMediaElement media` and yields an array of `TextTracks` that match the provided `filterPredOrObj` criteria (or all `TextTracks` by default).\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/textTracks\n * @see {@link textTrackObjAsPred}\n * @param media - An HTMLMediaElement with an expected textTracks value\n * (NOTE: This uses \"structural polymorphism\", so as long as `media` has an Array-like `textTracks` value of TextTrack-like objects, this function will work).\n * @param filterPredOrObj - Either a predicate function or an object that can be translated into a predicate function of matching key/value pairs.\n * @returns An array of TextTracks that match the given `filterPredOrObj` (or all TextTracks on `media` by default)\n * @example\n * ```html\n * <!DOCTYPE html>\n * <html lang=\"en\">\n * <head></head>\n * <body>\n * <video src=\"https://stream.mux.com/DS00Spx1CV902MCtPj5WknGlR102V5HFkDe/high.mp4\">\n *   <track label=\"Spanish\" kind=\"subtitles\" srclang=\"es\" src=\"./vtt/en-sub.vtt\">\n *   <track label=\"English\" kind=\"subtitles\" srclang=\"en\" src=\"./vtt/es-sub.vtt\">\n *   <track label=\"English\" kind=\"captions\" srclang=\"en\" src=\"./vtt/en-cc.vtt\">\n  </video>\n * </body>\n * </html>\n * ```\n * ```js\n * // js ...\n * const media = document.querySelector('video');\n * getTextTracksList(media, { kind: 'subtitles' });\n * // [{ label: 'Spanish', kind: 'subtitles', language: 'es' }, { label: 'English', kind: 'subtitles', language: 'en' }]\n * getTextTracksList(media, { kind: 'captions' });\n * // [{ label: 'English', kind: 'captions', language: 'en' }]\n * getTextTracksList(media);\n * // [{ label: 'Spanish', kind: 'subtitles', language: 'es' }, { label: 'English', kind: 'subtitles', language: 'en' }, { label: 'English', kind: 'captions', language: 'en' }]\n * ```\n */\nexport const getTextTracksList = (\n  media: HTMLVideoElement,\n  filterPredOrObj: TrackFilter | TextTrackLike = () => true\n): TextTrackLike[] => {\n  if (!media?.textTracks) return [];\n\n  const filterPred =\n    typeof filterPredOrObj === 'function'\n      ? filterPredOrObj\n      : textTrackObjAsPred(filterPredOrObj);\n\n  return (Array.from(media.textTracks) as TextTrackLike[]).filter(filterPred);\n};\n\n/**\n * Are captions or subtitles enabled?\n *\n * @param el - An HTMLElement that has caption related attributes on it.\n * @returns Whether captions are enabled or not\n */\nexport const areSubsOn = (\n  el: HTMLElement & { mediaSubtitlesShowing?: any[] }\n): boolean => {\n  const showingSubtitles =\n    !!el.mediaSubtitlesShowing?.length ||\n    el.hasAttribute(MediaUIAttributes.MEDIA_SUBTITLES_SHOWING);\n  return showingSubtitles;\n};\n", "import { WebkitPresentationModes } from '../constants.js';\nimport { containsComposedNode } from './element-utils.js';\nimport { document } from './server-safe-globals.js';\n\n// NOTE: (re)defining these types, but more narrowly for API expectations. These should probably be centralized + derived\n// once migrated to TypeScript types (CJP)\n\n/**\n * @typedef {Partial<HTMLVideoElement> & {\n *  webkitDisplayingFullscreen?: boolean;\n *  webkitPresentationMode?: 'fullscreen'|'picture-in-picture';\n *  webkitEnterFullscreen?: () => any;\n * }} MediaStateOwner\n */\n\n/**\n * @typedef {Partial<Document|ShadowRoot>} RootNodeStateOwner\n */\n\n/**\n * @typedef {Partial<HTMLElement>} FullScreenElementStateOwner\n */\n\n/**\n * @typedef {object} StateOwners\n * @property {MediaStateOwner} [media]\n * @property {RootNodeStateOwner} [documentElement]\n * @property {FullScreenElementStateOwner} [fullscreenElement]\n */\n\n/** @type {(stateOwners: StateOwners) => Promise<undefined> | undefined} */\nexport const enterFullscreen = (stateOwners) => {\n  const { media, fullscreenElement } = stateOwners;\n\n  // NOTE: Since the fullscreenElement can change and may be a web component,\n  // we should not define this at the module level. As an optimization,\n  // we could only define/update this somehow based on state owner changes. (CJP)\n  const enterFullscreenKey =\n    fullscreenElement && 'requestFullscreen' in fullscreenElement\n      ? 'requestFullscreen'\n      : fullscreenElement && 'webkitRequestFullScreen' in fullscreenElement\n      ? 'webkitRequestFullScreen'\n      : undefined;\n\n  // Entering fullscreen cases (browser-specific)\n  if (enterFullscreenKey) {\n    // NOTE: Since the \"official\" enter fullscreen method yields a Promise that rejects\n    // if already in fullscreen, this accounts for those cases.\n    const maybePromise = fullscreenElement[enterFullscreenKey]?.();\n    if (maybePromise instanceof Promise) {\n      return maybePromise.catch(() => {});\n    }\n  } else if (media?.webkitEnterFullscreen) {\n    // Media element fullscreen using iOS API\n    media.webkitEnterFullscreen();\n  } else if (media?.requestFullscreen) {\n    // So media els don't have to implement multiple APIs.\n    media.requestFullscreen();\n  }\n};\n\nconst exitFullscreenKey =\n  'exitFullscreen' in document\n    ? 'exitFullscreen'\n    : 'webkitExitFullscreen' in document\n    ? 'webkitExitFullscreen'\n    : 'webkitCancelFullScreen' in document\n    ? 'webkitCancelFullScreen'\n    : undefined;\n\n/** @type {(stateOwners: StateOwners) => Promise<undefined> | undefined} */\nexport const exitFullscreen = (stateOwners) => {\n  const { documentElement } = stateOwners;\n\n  // Exiting fullscreen case (generic)\n  if (exitFullscreenKey) {\n    const maybePromise = documentElement?.[exitFullscreenKey]?.();\n    // NOTE: Since the \"official\" exit fullscreen method yields a Promise that rejects\n    // if not in fullscreen, this accounts for those cases.\n    if (maybePromise instanceof Promise) {\n      return maybePromise.catch(() => {});\n    }\n  }\n};\n\nconst fullscreenElementKey =\n  'fullscreenElement' in document\n    ? 'fullscreenElement'\n    : 'webkitFullscreenElement' in document\n    ? 'webkitFullscreenElement'\n    : undefined;\n\n/** @type {(stateOwners: StateOwners) => FullScreenElementStateOwner | null | undefined} */\nexport const getFullscreenElement = (stateOwners) => {\n  const { documentElement, media } = stateOwners;\n  const docFullscreenElement = documentElement?.[fullscreenElementKey];\n  if (\n    !docFullscreenElement &&\n    'webkitDisplayingFullscreen' in media &&\n    'webkitPresentationMode' in media &&\n    media.webkitDisplayingFullscreen &&\n    media.webkitPresentationMode === WebkitPresentationModes.FULLSCREEN\n  ) {\n    return media;\n  }\n  return docFullscreenElement;\n};\n\n/** @type {(stateOwners: StateOwners) => boolean} */\nexport const isFullscreen = (stateOwners) => {\n  const { media, documentElement, fullscreenElement = media } = stateOwners;\n\n  // Need a documentElement and a media StateOwner to be in fullscreen, so we're not fullscreen\n  if (!media || !documentElement) return false;\n\n  const currentFullscreenElement = getFullscreenElement(stateOwners);\n\n  // If there is no current fullscreenElement, we're definitely not in fullscreen.\n  if (!currentFullscreenElement) return false;\n\n  // If documentElement.fullscreenElement is the media or fullscreenElement StateOwner, we're definitely in fullscreen\n  if (\n    currentFullscreenElement === fullscreenElement ||\n    currentFullscreenElement === media\n  ) {\n    return true;\n  }\n\n  // In this case (most modern browsers, sans e.g. iOS), the fullscreenElement may be\n  // a web component that is \"visible\" from the documentElement, but should\n  // have its own fullscreenElement on its shadowRoot for whatever\n  // is \"visible\" at that level. Since the (also named) fullscreenElement StateOwner\n  // may be nested inside an indeterminite number of web components, traverse each layer\n  // until we either find the fullscreen StateOwner or complete the recursive check.\n  if (currentFullscreenElement.localName.includes('-')) {\n    let currentRoot = currentFullscreenElement.shadowRoot;\n\n    // NOTE: This is for (non-iOS) Safari < 16.4, which did not support ShadowRoot::fullscreenElement.\n    // We can remove this if/when we decide those versions are old enough/not used enough to handle\n    // (e.g. at the time of writing, < 16.4 ~= 1% of global market, per caniuse https://caniuse.com/mdn-api_shadowroot_fullscreenelement) (CJP)\n\n    // We can simply check if the fullscreenElement key (typically 'fullscreenElement') is defined on the shadowRoot to determine whether or not\n    // it is supported.\n    if (!(fullscreenElementKey in currentRoot)) {\n      // For these cases, if documentElement.fullscreenElement (aka document.fullscreenElement) contains our fullscreenElement StateOwner,\n      // we'll assume that means we're in fullscreen. That should be valid for all current actual and planned supported\n      // web component use cases.\n      return containsComposedNode(\n        currentFullscreenElement,\n        /** @TODO clean up type assumptions (e.g. Node) (CJP) */\n        // @ts-ignore\n        fullscreenElement\n      );\n    }\n\n    while (currentRoot?.[fullscreenElementKey]) {\n      if (currentRoot[fullscreenElementKey] === fullscreenElement) return true;\n      currentRoot = currentRoot[fullscreenElementKey]?.shadowRoot;\n    }\n  }\n\n  return false;\n};\n\nconst fullscreenEnabledKey =\n  'fullscreenEnabled' in document\n    ? 'fullscreenEnabled'\n    : 'webkitFullscreenEnabled' in document\n    ? 'webkitFullscreenEnabled'\n    : undefined;\n\n/** @type {(stateOwners: StateOwners) => boolean} */\nexport const isFullscreenEnabled = (stateOwners) => {\n  const { documentElement, media } = stateOwners;\n  return (\n    !!documentElement?.[fullscreenEnabledKey] ||\n    (media && 'webkitSupportsFullscreen' in media)\n  );\n};\n", "import { globalThis, document } from './server-safe-globals.js';\nimport { delay } from './utils.js';\nimport { isFullscreenEnabled } from './fullscreen-api.js';\n\n/**\n * Test element\n */\nlet testMediaEl: HTMLVideoElement;\nexport const getTestMediaEl = (): HTMLVideoElement => {\n  if (testMediaEl) return testMediaEl;\n  testMediaEl = document?.createElement?.('video');\n  return testMediaEl;\n};\n\n/**\n * Test for volume support\n *\n * @param mediaEl - The media element to test\n */\nexport const hasVolumeSupportAsync = async (\n  mediaEl: HTMLVideoElement = getTestMediaEl()\n): Promise<boolean> => {\n  if (!mediaEl) return false;\n  const prevVolume = mediaEl.volume;\n  mediaEl.volume = prevVolume / 2 + 0.1;\n  // Remove event listeners later via an abort controller.\n  const abortController = new AbortController();\n  const volumeSupported = await Promise.race([\n    dispatchedVolumeChange(mediaEl, abortController.signal),\n    volumeChanged(mediaEl, prevVolume),\n  ]);\n  abortController.abort();\n  return volumeSupported;\n};\n\nconst dispatchedVolumeChange = (mediaEl: HTMLVideoElement, signal: AbortSignal) => {\n  // If the volumechange event is dispatched, it means the volume property is supported.\n  return new Promise<boolean>((resolve) => {\n    mediaEl.addEventListener('volumechange', () => resolve(true), { signal });\n  });\n};\n\nconst volumeChanged = async (mediaEl: HTMLVideoElement, prevVolume: number) => {\n  // iOS Safari doesn't allow setting volume programmatically but it will\n  // change the volume property for a short time before reverting.\n  // On heavy sites this can take a while to revert so we need to wait at least\n  // 100ms to make sure the volume has not changed.\n  // If there is no change sooner, return false early to minimize UI jank.\n  for (let i = 0; i < 10; i++) {\n    if (mediaEl.volume === prevVolume) return false;\n    await delay(10);\n  }\n  return mediaEl.volume !== prevVolume;\n};\n\n// let volumeSupported;\n// export const volumeSupportPromise = hasVolumeSupportAsync().then((supported) => {\n//   volumeSupported = supported;\n//   return volumeSupported;\n// });\n\n// NOTE: This also matches at least some non-Safari UAs on e.g. iOS, such as Chrome, perhaps since\n// these browsers are built on top of the OS-level WebKit browser, so use accordingly (CJP).\n// See, e.g.: https://www.whatismybrowser.com/guides/the-latest-user-agent/chrome\nconst isSafari: boolean = /.*Version\\/.*Safari\\/.*/.test(\n  globalThis.navigator.userAgent\n);\n/**\n * Test for PIP support\n *\n * @param mediaEl - The media element to test\n */\nexport const hasPipSupport = (\n  mediaEl: HTMLVideoElement = getTestMediaEl()\n): boolean => {\n  // NOTE: PWAs for Apple that rely on Safari don't support picture in picture but still have `requestPictureInPicture()`\n  // (which will result in a failed promise). Checking for those conditions here (CJP).\n  // This should still work for macOS PWAs installed using Chrome, where PiP is supported.\n  if (globalThis.matchMedia('(display-mode: standalone)').matches && isSafari)\n    return false;\n  return typeof mediaEl?.requestPictureInPicture === 'function';\n};\n\n/**\n * Test for Fullscreen support\n *\n * @param mediaEl - The media element to test\n */\nexport const hasFullscreenSupport = (mediaEl = getTestMediaEl()) => {\n  return isFullscreenEnabled({ documentElement: document, media: mediaEl });\n};\n\nexport const fullscreenSupported: boolean = hasFullscreenSupport();\nexport const pipSupported: boolean = hasPipSupport();\nexport const airplaySupported: boolean =\n  !!globalThis.WebKitPlaybackTargetAvailabilityEvent;\nexport const castSupported: boolean = !!globalThis.chrome;\n", "import { TextTrackKinds, TextTrackModes } from '../constants.js';\nimport { getTextTracksList, updateTracksModeTo } from '../utils/captions.js';\nimport { TextTrackLike } from '../utils/TextTrackLike.js';\n\nexport const getSubtitleTracks = (stateOwners): TextTrackLike[] => {\n  return getTextTracksList(stateOwners.media, (textTrack) => {\n    return [TextTrackKinds.SUBTITLES, TextTrackKinds.CAPTIONS].includes(\n      textTrack.kind as any\n    );\n  }).sort((a, b) => (a.kind >= b.kind ? 1 : -1));\n};\n\nexport const getShowingSubtitleTracks = (stateOwners): TextTrackLike[] => {\n  return getTextTracksList(stateOwners.media, (textTrack) => {\n    return (\n      textTrack.mode === TextTrackModes.SHOWING &&\n      [TextTrackKinds.SUBTITLES, TextTrackKinds.CAPTIONS].includes(\n        textTrack.kind as any\n      )\n    );\n  });\n};\n\nexport const toggleSubtitleTracks = (stateOwners, force: boolean): void => {\n  // NOTE: Like Element::toggleAttribute(), this event uses the detail for an optional \"force\"\n  // value. When present, this means \"toggle to\" \"on\" (aka showing, even if something's already showing)\n  // or \"off\" (aka disabled, even if all tracks are currently disabled).\n  // See, e.g.: https://developer.mozilla.org/en-US/docs/Web/API/Element/toggleAttribute#force (CJP)\n\n  // NOTE: Like Element::toggleAttribute(), this event uses the detail for an optional \"force\"\n  // value. When present, this means \"toggle to\" \"on\" (aka showing, even if something's already showing)\n  // or \"off\" (aka disabled, even if all tracks are currently disabled).\n  // See, e.g.: https://developer.mozilla.org/en-US/docs/Web/API/Element/toggleAttribute#force (CJP)\n  const tracks = getSubtitleTracks(stateOwners);\n  const showingSubitleTracks = getShowingSubtitleTracks(stateOwners);\n  const subtitlesShowing = !!showingSubitleTracks.length;\n  // If there are no tracks, this request doesn't matter, so we're done.\n  if (!tracks.length) return;\n\n  // NOTE: not early bailing on forced cases so we may pick up async cases of toggling on, particularly for HAS-style\n  // (e.g. HLS) media where we may not get our preferred subtitles lang until later (CJP)\n  if (force === false || (subtitlesShowing && force !== true)) {\n    updateTracksModeTo(TextTrackModes.DISABLED, tracks, showingSubitleTracks);\n  } else if (force === true || (!subtitlesShowing && force !== false)) {\n    let subTrack = tracks[0];\n    const { options } = stateOwners;\n    if (!options?.noSubtitlesLangPref) {\n      const subtitlesPref = globalThis.localStorage.getItem(\n        'media-chrome-pref-subtitles-lang'\n      );\n\n      const userLangPrefs = subtitlesPref\n        ? [subtitlesPref, ...globalThis.navigator.languages]\n        : globalThis.navigator.languages;\n      const preferredAvailableSubs = tracks\n        .filter((textTrack) => {\n          return userLangPrefs.some((lang) =>\n            textTrack.language.toLowerCase().startsWith(lang.split('-')[0])\n          );\n        })\n        .sort((textTrackA, textTrackB) => {\n          const idxA = userLangPrefs.findIndex((lang) =>\n            textTrackA.language.toLowerCase().startsWith(lang.split('-')[0])\n          );\n          const idxB = userLangPrefs.findIndex((lang) =>\n            textTrackB.language.toLowerCase().startsWith(lang.split('-')[0])\n          );\n          return idxA - idxB;\n        });\n\n      // Since there may not have been any user preferred subs/cc match, keep the default (picking the first) as\n      // the subtitle track to show for these cases.\n      if (preferredAvailableSubs[0]) {\n        subTrack = preferredAvailableSubs[0];\n      }\n    }\n    const { language, label, kind } = subTrack;\n    updateTracksModeTo(TextTrackModes.DISABLED, tracks, showingSubitleTracks);\n    updateTracksModeTo(TextTrackModes.SHOWING, tracks, [\n      { language, label, kind },\n    ]);\n  }\n};\n\nexport const areValuesEq = (x: any, y: any): boolean => {\n  // If both are strictly equal, they're equal\n  if (x === y) return true;\n  // If their types don't match, they're not equal\n  if (typeof x !== typeof y) return false;\n  // Treat NaNs as equal\n  if (typeof x === 'number' && Number.isNaN(x) && Number.isNaN(y)) return true;\n  // NOTE: This impl does not support function values (CJP)\n  // All other \"simple\" types are not equal, since they have the same type and were not strictly equal\n  if (typeof x !== 'object') return false;\n  if (Array.isArray(x)) return areArraysEq(x, y);\n  // NOTE: This impl currently assumes that if y[key] -> x[key] (aka no \"extra\" keys in y) (CJP)\n  // For objects, if every key's value in x has a corresponding key/value entry in y, the objects are equal\n  return Object.entries(x).every(\n    // NOTE: Checking key in y to disambiguate between between missing keys and keys whose value are undefined (CJP)\n    ([key, value]) => key in y && areValuesEq(value as number, y[key])\n  );\n};\n\nexport const areArraysEq = (xs: number[], ys: number[]): boolean => {\n  const xIsArray = Array.isArray(xs);\n  const yIsArray = Array.isArray(ys);\n  // If one of the \"arrays\" is not an array, not equal\n  if (xIsArray !== yIsArray) return false;\n  // If both of the \"arrays\" are not arrays, equal\n  if (!(xIsArray || yIsArray)) return true;\n  // If arrays have different length, not equal\n  if (xs.length !== ys.length) return false;\n  // NOTE: presuming sort order is equivalent (CJP)\n  // If and only every corresponding entry between the arrays is equal, arrays are equal\n  return xs.every((x, i) => areValuesEq(x, ys[i]));\n};\n", "import { document, globalThis } from '../utils/server-safe-globals.js';\nimport {\n  AvailabilityStates,\n  StreamTypes,\n  TextTrackKinds,\n} from '../constants.js';\nimport { containsComposedNode } from '../utils/element-utils.js';\nimport { enterFullscreen, exitFullscreen, isFullscreen } from '../utils/fullscreen-api.js';\nimport {\n  airplaySupported,\n  castSupported,\n  fullscreenSupported,\n  hasFullscreenSupport,\n  hasPipSupport,\n  hasVolumeSupportAsync,\n  pipSupported,\n} from '../utils/platform-tests.js';\nimport {\n  getShowingSubtitleTracks,\n  getSubtitleTracks,\n  toggleSubtitleTracks,\n} from './util.js';\nimport { getTextTracksList } from '../utils/captions.js';\nimport { isValidNumber } from '../utils/utils.js';\n\nexport type Rendition = {\n  src?: string;\n  id?: string;\n  width?: number;\n  height?: number;\n  bitrate?: number;\n  frameRate?: number;\n  codec?: string;\n  readonly selected?: boolean;\n};\n\nexport type AudioTrack = {\n  id?: string;\n  kind?: string;\n  label: string;\n  language: string;\n  enabled: boolean;\n};\n\n/**\n *\n * MediaStateOwner is in a sense both a subset and a superset of `HTMLVideoElement` and is used as the primary\n * \"source of truth\" for media state, as well as the primary target for state change requests.\n *\n * It is a subset insofar as only the `play()` method, the `paused` property, and the `addEventListener()`/`removeEventListener()` methods\n * are *required* and required to conform to their definition of `HTMLMediaElement` on the entity used. All other interfaces\n * (properties, methods, events, etc.) are optional, but, when present, *must* conform to `HTMLMediaElement`/`HTMLVideoElement`\n * to avoid unexpected state behavior. This includes, for example, ensuring state updates occur *before* related events are fired\n * that are used to monitor for potential state changes.\n *\n * It is a superset insofar as it supports an extended interface for media state that may be browser-specific (e.g. `webkit`-prefixed\n * properties/methods) or are not immediately derivable from primary media state or other state owners. These include things like\n * `videoRenditions` for e.g. HTTP Adaptive Streaming media (such as HLS or MPEG-DASH), `audioTracks`, or `streamType`, which identifies\n * whether the media (\"stream\") is \"live\" or \"on demand\". Several of these are specified and formalized on https://github.com/video-dev/media-ui-extensions.\n */\nexport type MediaStateOwner = Partial<HTMLVideoElement> &\n  Pick<\n    HTMLMediaElement,\n    'play' | 'paused' | 'addEventListener' | 'removeEventListener'\n  > & {\n    streamType?: StreamTypes;\n    targetLiveWindow?: number;\n    liveEdgeStart?: number;\n    videoRenditions?: Rendition[] & EventTarget & { selectedIndex?: number };\n    audioTracks?: AudioTrack[] & EventTarget;\n    requestCast?: () => any;\n    webkitDisplayingFullscreen?: boolean;\n    webkitPresentationMode?: 'fullscreen' | 'picture-in-picture';\n    webkitEnterFullscreen?: () => any;\n    webkitCurrentPlaybackTargetIsWireless?: boolean;\n    webkitShowPlaybackTargetPicker?: () => any;\n  };\n\nexport type RootNodeStateOwner = Partial<Document | ShadowRoot>;\n\nexport type FullScreenElementStateOwner = Partial<HTMLElement> & EventTarget;\n\nexport type StateOption = {\n  defaultSubtitles?: boolean;\n  defaultStreamType?: StreamTypes;\n  defaultDuration?: number;\n  liveEdgeOffset?: number;\n  noVolumePref?: boolean;\n  noSubtitlesLangPref?: boolean;\n};\n\n/**\n *\n * StateOwners are anything considered a source of truth or a target for updates for state. The media element (or \"element\") is a source of truth for the state of media playback,\n * but other things could also be a source of truth for information about the media. These include:\n *\n * - media - the media element\n * - fullscreenElement - the element that will be used when in full screen (e.g. for Media Chrome, this will typically be the MediaController)\n * - documentElement - top level node for DOM context (usually document and defaults to `document` in `createMediaStore()`)\n * - options - state behavior/user preferences (e.g. defaultSubtitles to enable subtitles by default as the relevant state or state owners change)\n */\nexport type StateOwners = {\n  media?: MediaStateOwner;\n  documentElement?: RootNodeStateOwner;\n  fullscreenElement?: FullScreenElementStateOwner;\n  options?: StateOption;\n};\n\nexport type EventOrAction<D = undefined> = {\n  type: string;\n  detail?: D;\n  target?: EventTarget;\n};\n\nexport type FacadeGetter<T, D = T> = (\n  stateOwners: StateOwners,\n  event?: EventOrAction<D>\n) => T;\n\nexport type FacadeSetter<T> = (value: T, stateOwners: StateOwners) => void;\n\nexport type StateOwnerUpdateHandler<T> = (\n  handler: (value: T) => void,\n  stateOwners: StateOwners\n) => void;\n\nexport type ReadonlyFacadeProp<T, D = T> = {\n  get: FacadeGetter<T, D>;\n  mediaEvents?: string[];\n  textTracksEvents?: string[];\n  videoRenditionsEvents?: string[];\n  audioTracksEvents?: string[];\n  remoteEvents?: string[];\n  rootEvents?: string[];\n  stateOwnersUpdateHandlers?: StateOwnerUpdateHandler<T>[];\n};\n\nexport type FacadeProp<T, S = T, D = T> = ReadonlyFacadeProp<T, D> & {\n  set: FacadeSetter<S>;\n};\n\n/**\n *\n * StateMediator provides a stateless, well-defined API for getting and setting/updating media-relevant state on a set of (stateful) StateOwners.\n * In addition, it identifies monitoring conditions for potential state changes for any given bit of state. StateMediator is designed to be used\n * by a MediaStore, which owns all of the wiring up and persistence of e.g. StateOwners, MediaState, and the StateMediator.\n *\n * For any modeled state, the StateMediator defines a key, K, which names the state (e.g. `mediaPaused`, `mediaSubtitlesShowing`, `mediaCastUnavailable`,\n * etc.), whose value defines the aforementioned using:\n *\n * - `get(stateOwners, event)` - Retrieves the current state of K from StateOwners, potentially using the (optional) event to help identify the state.\n * - `set(value, stateOwners)` (Optional, not available for `Readonly` state) - Interact with StateOwners via their interfaces to (directly or indirectly) update the state of K, using the value to determine the intended state change side effects.\n * - `mediaEvents[]` (Optional) - An array of event types to monitor on `stateOwners.media` for potential changes in the state of K.\n * - `textTracksEvents[]` (Optional) - An array of event types to monitor on `stateOwners.media.textTracks` for potential changes in the state of K.\n * - `videoRenditionsEvents[]` (Optional) - An array of event types to monitor on `stateOwners.media.videoRenditions` for potential changes in the state of K.\n * - `audioTracksEvents[]` (Optional) - An array of event types to monitor on `stateOwners.media.audioTracks` for potential changes in the state of K.\n * - `remoteEvents[]` (Optional) - An array of event types to monitor on `stateOwners.media.remote` for potential changes in the state of K.\n * - `rootEvents[]` (Optional) - An array of event types to monitor on `stateOwners.documentElement` for potential changes in the state of K.\n * - `stateOwnersUpdateHandlers[]` (Optional) - An array of functions that define arbitrary code for monitoring or causing state changes, optionally returning a \"teardown\" function for cleanup.\n *\n * @example &lt;caption>Basic Example (NOTE: This is for informative use only. StateMediator is not intended to be used directly).&lt;/caption>\n *\n * // Simple stateOwners example\n * const stateOwners = {\n *   media: myVideoElement,\n *   fullscreenElement: myMediaUIContainerElement,\n *   documentElement: document,\n * };\n *\n * // Current mediaPaused state\n * let mediaPaused = stateMediator.mediaPaused.get(stateOwners);\n *\n * // Event handler to update mediaPaused to its latest state;\n * const updateMediaPausedEventHandler = (event) => {\n *   mediaPaused = stateMediator.mediaPaused.get(stateOwners, event);\n * };\n *\n * // Monitor for potential changes to mediaPaused state.\n * stateMediator.mediaPaused.mediaEvents.forEach(eventType => {\n *   stateOwners.media.addEventListener(eventType, updateMediaPausedEventHandler);\n * });\n *\n * // Function to toggle between mediaPaused and !mediaPaused (media \"unpaused\", or \"playing\" under normal conditions)\n * const toggleMediaPaused = () => {\n *   const nextMediaPaused = !mediaPaused;\n *   stateMediator.mediaPaused.set(nextMediaPaused, stateOwners);\n * };\n *\n *\n * // ... Eventual teardown, when relevant. This is especially relevant for potential garbage collection/memory management considerations.\n * stateMediator.mediaPaused.mediaEvents.forEach(eventType => {\n *   stateOwners.media.removeEventListener(eventType, updateMediaPausedEventHandler);\n * });\n *\n */\nexport type StateMediator = {\n  mediaWidth: ReadonlyFacadeProp<number>;\n  mediaHeight: ReadonlyFacadeProp<number>;\n  mediaPaused: FacadeProp<HTMLMediaElement['paused']>;\n  mediaHasPlayed: ReadonlyFacadeProp<boolean>;\n  mediaEnded: ReadonlyFacadeProp<HTMLMediaElement['ended']>;\n  mediaPlaybackRate: FacadeProp<HTMLMediaElement['playbackRate']>;\n  mediaMuted: FacadeProp<HTMLMediaElement['muted']>;\n  mediaVolume: FacadeProp<HTMLMediaElement['volume']>;\n  mediaVolumeLevel: ReadonlyFacadeProp<'high' | 'medium' | 'low' | 'off'>;\n  mediaCurrentTime: FacadeProp<HTMLMediaElement['currentTime']>;\n  mediaDuration: ReadonlyFacadeProp<HTMLMediaElement['duration']>;\n  mediaLoading: ReadonlyFacadeProp<boolean>;\n  mediaSeekable: ReadonlyFacadeProp<[number, number] | undefined>;\n  mediaBuffered: ReadonlyFacadeProp<[number, number][]>;\n  mediaStreamType: ReadonlyFacadeProp<StreamTypes>;\n  mediaTargetLiveWindow: ReadonlyFacadeProp<number>;\n  mediaTimeIsLive: ReadonlyFacadeProp<boolean>;\n  mediaSubtitlesList: ReadonlyFacadeProp<\n    Pick<TextTrack, 'kind' | 'label' | 'language'>[]\n  >;\n  mediaSubtitlesShowing: ReadonlyFacadeProp<\n    Pick<TextTrack, 'kind' | 'label' | 'language'>[]\n  >;\n  mediaChaptersCues: ReadonlyFacadeProp<\n    Pick<VTTCue, 'text' | 'startTime' | 'endTime'>[]\n  >;\n  mediaIsPip: FacadeProp<boolean>;\n  mediaRenditionList: ReadonlyFacadeProp<Rendition[]>;\n  mediaRenditionSelected: FacadeProp<string, string>;\n  mediaAudioTrackList: ReadonlyFacadeProp<{ id?: string }[]>;\n  mediaAudioTrackEnabled: FacadeProp<string, string>;\n  mediaIsFullscreen: FacadeProp<boolean>;\n  mediaIsCasting: FacadeProp<\n    boolean,\n    boolean,\n    'NO_DEVICES_AVAILABLE' | 'NOT_CONNECTED' | 'CONNECTING' | 'CONNECTED'\n  >;\n  mediaIsAirplaying: FacadeProp<boolean>;\n  mediaFullscreenUnavailable: ReadonlyFacadeProp<\n    AvailabilityStates | undefined\n  >;\n  mediaPipUnavailable: ReadonlyFacadeProp<AvailabilityStates | undefined>;\n  mediaVolumeUnavailable: ReadonlyFacadeProp<AvailabilityStates | undefined>;\n  mediaCastUnavailable: ReadonlyFacadeProp<AvailabilityStates | undefined>;\n  mediaAirplayUnavailable: ReadonlyFacadeProp<AvailabilityStates | undefined>;\n  mediaRenditionUnavailable: ReadonlyFacadeProp<AvailabilityStates | undefined>;\n  mediaAudioTrackUnavailable: ReadonlyFacadeProp<\n    AvailabilityStates | undefined\n  >;\n};\n\nconst StreamTypeValues = Object.values(StreamTypes);\n\nlet volumeSupported: boolean;\n\nexport const volumeSupportPromise: Promise<boolean> =\n  hasVolumeSupportAsync().then((supported) => {\n    volumeSupported = supported;\n    return volumeSupported;\n  });\n\nexport const prepareStateOwners = async (\n  /** @type {(StateOwners[keyof StateOwners])[]} */ ...stateOwners\n) => {\n  await Promise.all(\n    stateOwners\n      .filter((x) => x)\n      .map(async (stateOwner) => {\n        if (\n          !(\n            'localName' in stateOwner &&\n            stateOwner instanceof globalThis.HTMLElement\n          )\n        ) {\n          return;\n        }\n\n        const name = stateOwner.localName;\n        if (!name.includes('-')) return;\n\n        const classDef = globalThis.customElements.get(name);\n        if (classDef && stateOwner instanceof classDef) return;\n\n        await globalThis.customElements.whenDefined(name);\n        globalThis.customElements.upgrade(stateOwner);\n      })\n  );\n};\n\nexport const stateMediator: StateMediator = {\n  mediaWidth: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n      return media?.videoWidth ?? 0;\n    },\n    mediaEvents: ['resize'],\n  },\n  mediaHeight: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n      return media?.videoHeight ?? 0;\n    },\n    mediaEvents: ['resize'],\n  },\n  mediaPaused: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n\n      return media?.paused ?? true;\n    },\n    set(value, stateOwners) {\n      const { media } = stateOwners;\n      if (!media) return;\n      if (value) {\n        media.pause();\n      } else {\n        // Not all custom media elements return a promise from `play()`.\n        media.play()?.catch(() => {});\n      }\n    },\n    mediaEvents: ['play', 'playing', 'pause', 'emptied'],\n  },\n  mediaHasPlayed: {\n    // We want to let the user know that the media started playing at any point (`media-has-played`).\n    // Since these propagators are all called when boostrapping state, let's verify this is\n    // a real playing event by checking that 1) there's media and 2) it isn't currently paused.\n    get(stateOwners, event) {\n      const { media } = stateOwners;\n\n      if (!media) return false;\n      if (!event) return !media.paused;\n      return event.type === 'playing';\n    },\n    mediaEvents: ['playing', 'emptied'],\n  },\n  mediaEnded: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n\n      return media?.ended ?? false;\n    },\n    mediaEvents: ['seeked', 'ended', 'emptied'],\n  },\n  mediaPlaybackRate: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n\n      return media?.playbackRate ?? 1;\n    },\n    set(value, stateOwners) {\n      const { media } = stateOwners;\n      if (!media) return;\n      if (!Number.isFinite(+value)) return;\n      media.playbackRate = +value;\n    },\n    mediaEvents: ['ratechange', 'loadstart'],\n  },\n  mediaMuted: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n\n      return media?.muted ?? false;\n    },\n    set(value, stateOwners) {\n      const { media } = stateOwners;\n      if (!media) return;\n      media.muted = value;\n    },\n    mediaEvents: ['volumechange'],\n  },\n  mediaVolume: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n\n      return media?.volume ?? 1.0;\n    },\n    set(value, stateOwners) {\n      const { media } = stateOwners;\n      if (!media) return;\n      // Store the last set volume as a local preference, if ls is supported\n      /** @TODO How should we handle globalThis dependencies/\"state ownership\"? (CJP) */\n      try {\n        if (value == null) {\n          globalThis.localStorage.removeItem('media-chrome-pref-volume');\n        } else {\n          globalThis.localStorage.setItem(\n            'media-chrome-pref-volume',\n            value.toString()\n          );\n        }\n      } catch (err) {\n        // ignore\n      }\n      if (!Number.isFinite(+value)) return;\n      media.volume = +value;\n    },\n    mediaEvents: ['volumechange'],\n    stateOwnersUpdateHandlers: [\n      (handler, stateOwners) => {\n        const {\n          options: { noVolumePref },\n        } = stateOwners;\n        if (noVolumePref) return;\n        /** @TODO How should we handle globalThis dependencies/\"state ownership\"? (CJP) */\n        try {\n          const volumePref = globalThis.localStorage.getItem(\n            'media-chrome-pref-volume'\n          );\n          if (volumePref == null) return;\n          stateMediator.mediaVolume.set(+volumePref, stateOwners);\n          handler(+volumePref);\n        } catch (e) {\n          console.debug('Error getting volume pref', e);\n        }\n      },\n    ],\n  },\n  // NOTE: Keeping this roughly equivalent to prior impl to reduce number of changes,\n  // however we may want to model \"derived\" state differently from \"primary\" state\n  // (in this case, derived === mediaVolumeLevel, primary === mediaMuted, mediaVolume) (CJP)\n  mediaVolumeLevel: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n      if (typeof media?.volume == 'undefined') return 'high';\n      if (media.muted || media.volume === 0) return 'off';\n      if (media.volume < 0.5) return 'low';\n      if (media.volume < 0.75) return 'medium';\n      return 'high';\n    },\n    mediaEvents: ['volumechange'],\n  },\n  mediaCurrentTime: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n\n      return media?.currentTime ?? 0;\n    },\n    set(value, stateOwners) {\n      const { media } = stateOwners;\n      if (!media || !isValidNumber(value)) return;\n      media.currentTime = value;\n    },\n    mediaEvents: ['timeupdate', 'loadedmetadata'],\n  },\n  mediaDuration: {\n    get(stateOwners) {\n      const { media, options: { defaultDuration } = {} } = stateOwners;\n\n      // If `defaultduration` is set and we don't yet have a usable `duration`\n      // available, use the default duration.\n      if (\n        defaultDuration &&\n        (!media ||\n          !media.duration ||\n          Number.isNaN(media.duration) ||\n          !Number.isFinite(media.duration))\n      ) {\n        return defaultDuration;\n      }\n\n      return Number.isFinite(media?.duration) ? media.duration : Number.NaN;\n    },\n    mediaEvents: ['durationchange', 'loadedmetadata', 'emptied'],\n  },\n  mediaLoading: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n\n      return media?.readyState < 3;\n    },\n    mediaEvents: ['waiting', 'playing', 'emptied'],\n  },\n  mediaSeekable: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n\n      if (!media?.seekable?.length) return undefined;\n\n      const start = media.seekable.start(0);\n      const end = media.seekable.end(media.seekable.length - 1);\n\n      // Account for cases where metadata from slotted media has an \"empty\" seekable (CJP)\n      if (!start && !end) return undefined;\n      return [Number(start.toFixed(3)), Number(end.toFixed(3))];\n    },\n    mediaEvents: ['loadedmetadata', 'emptied', 'progress', 'seekablechange'],\n  },\n  mediaBuffered: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n\n      const timeRanges: any = media?.buffered ?? [];\n      return Array.from(timeRanges).map((_, i) => [\n        Number(timeRanges.start(i).toFixed(3)),\n        Number(timeRanges.end(i).toFixed(3)),\n      ]);\n    },\n    mediaEvents: ['progress', 'emptied'],\n  },\n  mediaStreamType: {\n    get(stateOwners) {\n      const { media, options: { defaultStreamType } = {} } = stateOwners;\n\n      const usedDefaultStreamType = [\n        StreamTypes.LIVE,\n        StreamTypes.ON_DEMAND,\n      ].includes(defaultStreamType as any)\n        ? defaultStreamType\n        : undefined;\n\n      if (!media) return usedDefaultStreamType;\n\n      const { streamType } = media;\n      if (StreamTypeValues.includes(streamType)) {\n        // If the slotted media supports `streamType` but\n        // `streamType` is \"unknown\", prefer `usedDefaultStreamType`\n        // if set (CJP)\n        if (streamType === StreamTypes.UNKNOWN) {\n          return usedDefaultStreamType;\n        }\n        return streamType;\n      }\n      const duration = media.duration;\n\n      if (duration === Infinity) {\n        return StreamTypes.LIVE;\n      } else if (Number.isFinite(duration)) {\n        return StreamTypes.ON_DEMAND;\n      }\n\n      return usedDefaultStreamType;\n    },\n    mediaEvents: [\n      'emptied',\n      'durationchange',\n      'loadedmetadata',\n      'streamtypechange',\n    ],\n  },\n  mediaTargetLiveWindow: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n\n      if (!media) return Number.NaN;\n      const { targetLiveWindow } = media;\n      const streamType = stateMediator.mediaStreamType.get(stateOwners);\n\n      // Since `NaN` represents either \"unknown\" or \"inapplicable\", need to check if `streamType`\n      // is `\"live\"`. If so, assume it's \"standard live\" (aka `targetLiveWindow === 0`) (CJP)\n      if (\n        (targetLiveWindow == null || Number.isNaN(targetLiveWindow)) &&\n        streamType === StreamTypes.LIVE\n      ) {\n        return 0;\n      }\n      return targetLiveWindow;\n    },\n    mediaEvents: [\n      'emptied',\n      'durationchange',\n      'loadedmetadata',\n      'streamtypechange',\n      'targetlivewindowchange',\n    ],\n  },\n  mediaTimeIsLive: {\n    get(stateOwners) {\n      const {\n        media,\n        // Default to 10 seconds\n        options: { liveEdgeOffset = 10 } = {},\n      } = stateOwners;\n\n      if (!media) return false;\n\n      if (typeof media.liveEdgeStart === 'number') {\n        if (Number.isNaN(media.liveEdgeStart)) return false;\n        return media.currentTime >= media.liveEdgeStart;\n      }\n\n      const live =\n        stateMediator.mediaStreamType.get(stateOwners) === StreamTypes.LIVE;\n      // Can't be playing live if it's not a live stream\n      if (!live) return false;\n\n      // Should this use `stateMediator.mediaSeekable.get(stateOwners)?.[1]` for separation\n      // of concerns/assumptions? (CJP)\n      const seekable = media.seekable;\n      // If the slotted media element is live but does not expose a 'seekable' `TimeRanges` object,\n      // always assume playing live\n      if (!seekable) return true;\n      // If there is an empty `seekable`, assume we are not playing live\n      if (!seekable.length) return false;\n      const liveEdgeStart = seekable.end(seekable.length - 1) - liveEdgeOffset;\n      return media.currentTime >= liveEdgeStart;\n    },\n    mediaEvents: ['playing', 'timeupdate', 'progress', 'waiting', 'emptied'],\n  },\n  // Text Tracks modeling\n  mediaSubtitlesList: {\n    get(stateOwners) {\n      return getSubtitleTracks(stateOwners).map(\n        ({ kind, label, language }) => ({ kind, label, language })\n      );\n    },\n    mediaEvents: ['loadstart'],\n    textTracksEvents: ['addtrack', 'removetrack'],\n  },\n  mediaSubtitlesShowing: {\n    get(stateOwners) {\n      return getShowingSubtitleTracks(stateOwners).map(\n        ({ kind, label, language }) => ({ kind, label, language })\n      );\n    },\n    mediaEvents: ['loadstart'],\n    textTracksEvents: ['addtrack', 'removetrack', 'change'],\n    stateOwnersUpdateHandlers: [\n      (_handler, stateOwners) => {\n        const { media, options } = stateOwners;\n        if (!media) return;\n\n        const updateDefaultSubtitlesCallback = (event?: Event) => {\n          if (!options.defaultSubtitles) return;\n\n          const nonSubsEvent =\n            event &&\n            ![TextTrackKinds.CAPTIONS, TextTrackKinds.SUBTITLES].includes(\n              // @ts-ignore\n              event?.track?.kind\n            );\n\n          if (nonSubsEvent) return;\n\n          // NOTE: In this use case, since we're causing a side effect, no need to invoke `handler()`. (CJP)\n          toggleSubtitleTracks(stateOwners, true);\n        };\n\n        media.textTracks?.addEventListener(\n          'addtrack',\n          updateDefaultSubtitlesCallback\n        );\n        media.textTracks?.addEventListener(\n          'removetrack',\n          updateDefaultSubtitlesCallback\n        );\n\n        // Invoke immediately as well, in case subs/cc tracks are already added\n        updateDefaultSubtitlesCallback();\n\n        return () => {\n          media.textTracks?.removeEventListener(\n            'addtrack',\n            updateDefaultSubtitlesCallback\n          );\n          media.textTracks?.removeEventListener(\n            'removetrack',\n            updateDefaultSubtitlesCallback\n          );\n        };\n      },\n    ],\n  },\n  mediaChaptersCues: {\n    get(stateOwners: StateOwners) {\n      const { media } = stateOwners;\n      if (!media) return [];\n\n      const [chaptersTrack] = getTextTracksList(media as HTMLVideoElement, {\n        kind: TextTrackKinds.CHAPTERS,\n      });\n\n      return Array.from(chaptersTrack?.cues ?? []).map(\n        ({ text, startTime, endTime }: VTTCue) => ({\n          text,\n          startTime,\n          endTime,\n        })\n      );\n    },\n    mediaEvents: ['loadstart', 'loadedmetadata'],\n    textTracksEvents: ['addtrack', 'removetrack', 'change'],\n    stateOwnersUpdateHandlers: [\n      (handler, stateOwners) => {\n        const { media } = stateOwners;\n        if (!media) return;\n\n        /** @TODO account for adds/removes/replacements of <track> (CJP) */\n        const chaptersTrack = media.querySelector(\n          'track[kind=\"chapters\"][default][src]'\n        );\n\n        /* If `media` is a custom media element search in its shadow DOM. */\n        const shadowChaptersTrack = media.shadowRoot?.querySelector(\n          ':is(video,audio) > track[kind=\"chapters\"][default][src]'\n        );\n\n        /** @ts-ignore */\n        chaptersTrack?.addEventListener('load', handler);\n        /** @ts-ignore */\n        shadowChaptersTrack?.addEventListener('load', handler);\n\n        return () => {\n          /** @ts-ignore */\n          chaptersTrack?.removeEventListener('load', handler);\n          /** @ts-ignore */\n          shadowChaptersTrack?.removeEventListener('load', handler);\n        };\n      },\n    ],\n  },\n  // Modeling state tied to root node\n  mediaIsPip: {\n    get(stateOwners) {\n      const { media, documentElement } = stateOwners;\n\n      // Need a documentElement and a media StateOwner to be in PiP, so we're not PiP\n      if (!media || !documentElement) return false;\n\n      // Need a documentElement.pictureInPictureElement to be in PiP, so we're not PiP\n      if (!documentElement.pictureInPictureElement) return false;\n\n      // If documentElement.pictureInPictureElement is the media StateOwner, we're definitely in PiP\n      if (documentElement.pictureInPictureElement === media) return true;\n\n      // In this case (e.g. Safari), the pictureInPictureElement may be\n      // the underlying <video> or <audio> element of a media StateOwner\n      // that is a web component, even if it's not \"visible\" from the\n      // documentElement, so check for that.\n      if (documentElement.pictureInPictureElement instanceof HTMLMediaElement) {\n        if (!media.localName?.includes('-')) return false;\n        return containsComposedNode(\n          media as Node,\n          documentElement.pictureInPictureElement\n        );\n      }\n\n      // In this case (e.g. Chrome), the pictureInPictureElement may be\n      // a web component that is \"visible\" from the documentElement, but should\n      // have its own pictureInPictureElement on its shadowRoot for whatever\n      // is \"visible\" at that level. Since the media StateOwner may be nested\n      // inside an indeterminite number of web components, traverse each layer\n      // until we either find the media StateOwner or complete the recursive check.\n      if (documentElement.pictureInPictureElement.localName.includes('-')) {\n        let currentRoot = documentElement.pictureInPictureElement.shadowRoot;\n        while (currentRoot?.pictureInPictureElement) {\n          if (currentRoot.pictureInPictureElement === media) return true;\n          currentRoot = currentRoot.pictureInPictureElement?.shadowRoot;\n        }\n      }\n\n      return false;\n    },\n    set(value, stateOwners) {\n      const { media } = stateOwners;\n      if (!media) return;\n      if (value) {\n        if (!document.pictureInPictureEnabled) {\n          console.warn('MediaChrome: Picture-in-picture is not enabled');\n          // Placeholder for emitting a user-facing warning\n          return;\n        }\n\n        if (!media.requestPictureInPicture) {\n          console.warn(\n            'MediaChrome: The current media does not support picture-in-picture'\n          );\n          // Placeholder for emitting a user-facing warning\n          return;\n        }\n        const warnNotReady = () => {\n          console.warn(\n            'MediaChrome: The media is not ready for picture-in-picture. It must have a readyState > 0.'\n          );\n        };\n\n        // Should be async\n        media.requestPictureInPicture().catch((err) => {\n          // InvalidStateError, readyState == 0 (Not ready)\n          if (err.code === 11) {\n            if (!media.src) {\n              console.warn(\n                'MediaChrome: The media is not ready for picture-in-picture. It must have a src set.'\n              );\n              return;\n            }\n            // We can assume the viewer wants the video to load, so attempt to\n            // if we can rely on readyState and preload\n            // Only works in Chrome currently. Safari doesn't allow triggering\n            // in an event listener. Also requires readyState == 4.\n            // Firefox doesn't have the PiP API yet.\n            if (media.readyState === 0 && media.preload === 'none') {\n              const cleanup = () => {\n                media.removeEventListener('loadedmetadata', tryPip);\n                media.preload = 'none';\n              };\n\n              const tryPip = () => {\n                media.requestPictureInPicture().catch(warnNotReady);\n                cleanup();\n              };\n\n              media.addEventListener('loadedmetadata', tryPip);\n              media.preload = 'metadata';\n\n              // No easy way to know if this failed and we should clean up\n              // quickly if it doesn't to prevent an awkward delay for the user\n              setTimeout(() => {\n                if (media.readyState === 0) warnNotReady();\n                cleanup();\n              }, 1000);\n            } else {\n              /** @TODO Should we actually rethrow? Feels like something we could log instead for improved devex (CJP) */\n              // Rethrow if unknown context\n              throw err;\n            }\n          } else {\n            /** @TODO Should we actually rethrow? Feels like something we could log instead for improved devex (CJP) */\n            // Rethrow if unknown context\n            throw err;\n          }\n        });\n      } else if (document.pictureInPictureElement) {\n        document.exitPictureInPicture();\n      }\n    },\n    mediaEvents: ['enterpictureinpicture', 'leavepictureinpicture'],\n  },\n  mediaRenditionList: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n      // NOTE: Copying for reference considerations (should be an array of POJOs from a state perspective) (CJP)\n      return [...(media?.videoRenditions ?? [])].map((videoRendition) => ({\n        ...videoRendition,\n      }));\n    },\n    mediaEvents: ['emptied', 'loadstart'],\n    videoRenditionsEvents: ['addrendition', 'removerendition'],\n  },\n  /** @TODO Model this as a derived value? (CJP) */\n  mediaRenditionSelected: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n      return media?.videoRenditions?.[media.videoRenditions?.selectedIndex]?.id;\n    },\n    set(value, stateOwners) {\n      const { media } = stateOwners;\n      if (!media?.videoRenditions) {\n        console.warn(\n          'MediaController: Rendition selection not supported by this media.'\n        );\n        return;\n      }\n\n      const renditionId = value;\n      // NOTE: videoRenditions is an array-like, not an array (CJP)\n      const index = Array.prototype.findIndex.call(\n        media.videoRenditions,\n        (r) => r.id == renditionId\n      );\n\n      if (media.videoRenditions.selectedIndex != index) {\n        media.videoRenditions.selectedIndex = index;\n      }\n    },\n    mediaEvents: ['emptied'],\n    videoRenditionsEvents: ['addrendition', 'removerendition', 'change'],\n  },\n  mediaAudioTrackList: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n      return [...(media?.audioTracks ?? [])];\n    },\n    mediaEvents: ['emptied', 'loadstart'],\n    audioTracksEvents: ['addtrack', 'removetrack'],\n  },\n  mediaAudioTrackEnabled: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n      return [...(media?.audioTracks ?? [])].find(\n        (audioTrack) => audioTrack.enabled\n      )?.id;\n    },\n    set(value, stateOwners) {\n      const { media } = stateOwners;\n      if (!media?.audioTracks) {\n        console.warn(\n          'MediaChrome: Audio track selection not supported by this media.'\n        );\n        return;\n      }\n\n      const audioTrackId = value;\n\n      for (const track of media.audioTracks) {\n        track.enabled = audioTrackId == track.id;\n      }\n    },\n    mediaEvents: ['emptied'],\n    audioTracksEvents: ['addtrack', 'removetrack', 'change'],\n  },\n  mediaIsFullscreen: {\n    get(stateOwners) {\n      return isFullscreen(stateOwners);\n    },\n    set(value, stateOwners) {\n      if (!value) {\n        exitFullscreen(stateOwners);\n      } else {\n        enterFullscreen(stateOwners);\n      }\n    },\n    // older Safari version may require webkit-specific events\n    rootEvents: ['fullscreenchange', 'webkitfullscreenchange'],\n    // iOS requires webkit-specific events on the video.\n    mediaEvents: ['webkitbeginfullscreen', 'webkitendfullscreen', 'webkitpresentationmodechanged']\n  },\n  mediaIsCasting: {\n    // Note this relies on a customized castable-video element.\n    get(stateOwners) {\n      const { media } = stateOwners;\n\n      if (!media?.remote || media.remote?.state === 'disconnected')\n        return false;\n\n      return !!media.remote.state;\n    },\n    set(value, stateOwners) {\n      const { media } = stateOwners;\n      if (!media) return;\n      if (value && media.remote?.state !== 'disconnected') return;\n      if (!value && media.remote?.state !== 'connected') return;\n\n      if (typeof media.remote.prompt !== 'function') {\n        console.warn(\n          'MediaChrome: Casting is not supported in this environment'\n        );\n        return;\n      }\n\n      // Open the browser cast menu.\n      // Note this relies on a customized castable-video element.\n      media.remote\n        .prompt()\n        // Don't warn here because catch is run when the user closes the cast menu.\n        .catch(() => {});\n    },\n    remoteEvents: ['connect', 'connecting', 'disconnect'],\n  },\n  // NOTE: Newly added state for tracking airplaying\n  mediaIsAirplaying: {\n    // NOTE: Cannot know if airplaying since Safari doesn't fully support HTMLMediaElement::remote yet (e.g. remote::state) (CJP)\n    get() {\n      return false;\n    },\n    set(_value, stateOwners) {\n      const { media } = stateOwners;\n      if (!media) return;\n      if (\n        !(\n          media.webkitShowPlaybackTargetPicker &&\n          globalThis.WebKitPlaybackTargetAvailabilityEvent\n        )\n      ) {\n        console.warn(\n          'MediaChrome: received a request to select AirPlay but AirPlay is not supported in this environment'\n        );\n        return;\n      }\n      media.webkitShowPlaybackTargetPicker();\n    },\n    mediaEvents: ['webkitcurrentplaybacktargetiswirelesschanged'],\n  },\n  mediaFullscreenUnavailable: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n      if (\n        !fullscreenSupported ||\n        !hasFullscreenSupport(media as HTMLVideoElement)\n      )\n        return AvailabilityStates.UNSUPPORTED;\n      return undefined;\n    },\n  },\n  mediaPipUnavailable: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n      if (!pipSupported || !hasPipSupport(media as HTMLVideoElement))\n        return AvailabilityStates.UNSUPPORTED;\n    },\n  },\n  mediaVolumeUnavailable: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n\n      if (volumeSupported === false || media?.volume == undefined) {\n        return AvailabilityStates.UNSUPPORTED;\n      }\n\n      return undefined;\n    },\n    // NOTE: Slightly different impl here. Added generic support for\n    // \"stateOwnersUpdateHandlers\" since the original impl had to hack around\n    // race conditions. (CJP)\n    stateOwnersUpdateHandlers: [\n      (handler) => {\n        if (volumeSupported == null) {\n          volumeSupportPromise.then((supported) =>\n            handler(supported ? undefined : AvailabilityStates.UNSUPPORTED)\n          );\n        }\n      },\n    ],\n  },\n  mediaCastUnavailable: {\n    // @ts-ignore\n    get(stateOwners, { availability = 'not-available' } = {}) {\n      const { media } = stateOwners;\n\n      if (!castSupported || !media?.remote?.state) {\n        return AvailabilityStates.UNSUPPORTED;\n      }\n\n      if (availability == null || availability === 'available')\n        return undefined;\n\n      return AvailabilityStates.UNAVAILABLE;\n    },\n    stateOwnersUpdateHandlers: [\n      (handler, stateOwners) => {\n        const { media } = stateOwners;\n        if (!media) return;\n\n        const remotePlaybackDisabled =\n          media.disableRemotePlayback ||\n          media.hasAttribute('disableremoteplayback');\n        if (!remotePlaybackDisabled) {\n          media?.remote\n            ?.watchAvailability((availabilityBool) => {\n              // Normalizing to `webkitplaybacktargetavailabilitychanged` for consistency.\n              const availability = availabilityBool\n                ? 'available'\n                : 'not-available';\n              // @ts-ignore\n              handler({ availability });\n            })\n            .catch((error) => {\n              if (error.name === 'NotSupportedError') {\n                // Availability monitoring is not supported by the platform, so discovery of\n                // remote playback devices will happen only after remote.prompt() is called.\n                // @ts-ignore\n                handler({ availability: null });\n              } else {\n                // Thrown if disableRemotePlayback is true for the media element\n                // or if the source can't be played remotely.\n                // Normalizing to `webkitplaybacktargetavailabilitychanged` for consistency.\n                // @ts-ignore\n                handler({ availability: 'not-available' });\n              }\n            });\n        }\n        return () => {\n          media?.remote?.cancelWatchAvailability().catch(() => {});\n        };\n      },\n    ],\n  },\n  mediaAirplayUnavailable: {\n    get(_stateOwners, event) {\n      if (!airplaySupported) return AvailabilityStates.UNSUPPORTED;\n      // @ts-ignore\n      if (event?.availability === 'not-available') {\n        return AvailabilityStates.UNAVAILABLE;\n      }\n      // Either available via `availability` state or not yet known\n      return undefined;\n    },\n    // NOTE: Keeping this event, as it's still the documented way of monitoring\n    // for AirPlay availability from Apple.\n    // See: https://developer.apple.com/documentation/webkitjs/adding_an_airplay_button_to_your_safari_media_controls#2940021 (CJP)\n    mediaEvents: ['webkitplaybacktargetavailabilitychanged'],\n    stateOwnersUpdateHandlers: [\n      (handler, stateOwners) => {\n        const { media } = stateOwners;\n        if (!media) return;\n\n        const remotePlaybackDisabled =\n          media.disableRemotePlayback ||\n          media.hasAttribute('disableremoteplayback');\n        if (!remotePlaybackDisabled) {\n          media?.remote\n            ?.watchAvailability((availabilityBool) => {\n              // Normalizing to `webkitplaybacktargetavailabilitychanged` for consistency.\n              const availability = availabilityBool\n                ? 'available'\n                : 'not-available';\n              // @ts-ignore\n              handler({ availability });\n            })\n            .catch((error) => {\n              if (error.name === 'NotSupportedError') {\n                // Availability monitoring is not supported by the platform, so discovery of\n                // remote playback devices will happen only after remote.prompt() is called.\n                // @ts-ignore\n                handler({ availability: null });\n              } else {\n                // Thrown if disableRemotePlayback is true for the media element\n                // or if the source can't be played remotely.\n                // Normalizing to `webkitplaybacktargetavailabilitychanged` for consistency.\n                // @ts-ignore\n                handler({ availability: 'not-available' });\n              }\n            });\n        }\n        return () => {\n          media?.remote?.cancelWatchAvailability().catch(() => {});\n        };\n      },\n    ],\n  },\n  mediaRenditionUnavailable: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n\n      if (!media?.videoRenditions) {\n        return AvailabilityStates.UNSUPPORTED;\n      }\n\n      if (!media.videoRenditions?.length) {\n        return AvailabilityStates.UNAVAILABLE;\n      }\n\n      return undefined;\n    },\n    mediaEvents: ['emptied', 'loadstart'],\n    videoRenditionsEvents: ['addrendition', 'removerendition'],\n  },\n  mediaAudioTrackUnavailable: {\n    get(stateOwners) {\n      const { media } = stateOwners;\n\n      if (!media?.audioTracks) {\n        return AvailabilityStates.UNSUPPORTED;\n      }\n\n      // An audio selection is only possible if there are 2 or more audio tracks.\n      if ((media.audioTracks?.length ?? 0) <= 1) {\n        return AvailabilityStates.UNAVAILABLE;\n      }\n\n      return undefined;\n    },\n    mediaEvents: ['emptied', 'loadstart'],\n    audioTracksEvents: ['addtrack', 'removetrack'],\n  },\n};\n", "import { globalThis } from '../utils/server-safe-globals.js';\nimport {\n  MediaUIEvents,\n  StreamTypes,\n  TextTrackKinds,\n  TextTrackModes,\n} from '../constants.js';\nimport {\n  getTextTracksList,\n  parseTracks,\n  updateTracksModeTo,\n} from '../utils/captions.js';\nimport { getSubtitleTracks, toggleSubtitleTracks } from './util.js';\nimport { StateMediator, StateOwners } from './state-mediator.js';\nimport { MediaState } from './media-store.js';\n\nexport type MediaUIEventsType =\n  typeof MediaUIEvents[keyof typeof MediaUIEvents];\nexport type MediaRequestTypes = Exclude<\n  MediaUIEventsType,\n  | 'registermediastatereceiver'\n  | 'unregistermediastatereceiver'\n  | 'mediashowtexttracksrequest'\n  | 'mediahidetexttracksrequest'\n>;\n\n/** @TODO Make this definition more precise (CJP) */\n/**\n *\n * RequestMap provides a stateless, well-defined API for translating state change requests to related side effects to attempt to fulfill said request and\n * any other appropriate state changes that should occur as a result. Most often (but not always), those will simply rely on the StateMediator's `set()`\n * method for the corresponding state to update the StateOwners state. RequestMap is designed to be used by a MediaStore, which owns all of the wiring up\n * and persistence of e.g. StateOwners, MediaState, StateMediator, and the RequestMap.\n *\n * For any modeled state change request, the RequestMap defines a key, K, which directly maps to the state change request type (e.g. `mediapauserequest`, `mediaseekrequest`, etc.),\n * whose value is a function that defines the appropriate side effects of the request that will, under normal circumstances, (eventually) result in actual state changes.\n */\nexport type RequestMap = {\n  [K in MediaRequestTypes]: (\n    stateMediator: StateMediator,\n    stateOwners: StateOwners,\n    action: Partial<Pick<CustomEvent<any>, 'type' | 'detail'>>\n  ) => Partial<MediaState> | undefined | void;\n};\n\nexport const requestMap: RequestMap = {\n  /**\n   * @TODO Consider adding state to `StateMediator` for e.g. `mediaThumbnailCues` and use that for derived state here (CJP)\n   */\n  [MediaUIEvents.MEDIA_PREVIEW_REQUEST](\n    stateMediator,\n    stateOwners,\n    { detail }\n  ) {\n    const { media } = stateOwners;\n\n    const mediaPreviewTime = detail ?? undefined;\n    let mediaPreviewImage = undefined;\n    let mediaPreviewCoords = undefined;\n\n    // preview-related state should be reset to nothing\n    // when there is no media or the preview time request is null/undefined\n    if (media && mediaPreviewTime != null) {\n      // preview thumbnail image-related derivation\n      const [track] = getTextTracksList(media as HTMLVideoElement, {\n        kind: TextTrackKinds.METADATA,\n        label: 'thumbnails',\n      });\n\n      const cue = Array.prototype.find.call(track?.cues ?? [], (c, i, cs) => {\n        // If our first preview image cue ends after mediaPreviewTime, use it.\n        if (i === 0) return c.endTime > mediaPreviewTime;\n        // If our last preview image cue ends at or before mediaPreviewTime, use it.\n        if (i === cs.length - 1) return c.startTime <= mediaPreviewTime;\n        // Otherwise, use the cue that contains mediaPreviewTime\n        return c.startTime <= mediaPreviewTime && c.endTime > mediaPreviewTime;\n      });\n\n      if (cue) {\n        const base = !/'^(?:[a-z]+:)?\\/\\//i.test(cue.text)\n          ? (\n              media?.querySelector(\n                'track[label=\"thumbnails\"]'\n              ) as HTMLTrackElement\n            )?.src\n          : undefined;\n        const url = new URL(cue.text, base);\n        const previewCoordsStr = new URLSearchParams(url.hash).get('#xywh');\n        mediaPreviewCoords = previewCoordsStr\n          .split(',')\n          .map((numStr) => +numStr) as [number, number, number, number];\n        mediaPreviewImage = url.href;\n      }\n    }\n\n    const mediaDuration = stateMediator.mediaDuration.get(stateOwners);\n    // chapters cue text\n    const mediaChaptersCues = stateMediator.mediaChaptersCues.get(stateOwners);\n    let mediaPreviewChapter = mediaChaptersCues.find((c, i, cs) => {\n      // Since Chapters may be \"gappy\", only treat the endtime as inclusive\n      // if it is the last chapter cue and that cue ends when the entire media ends\n      if (i === cs.length - 1 && mediaDuration === c.endTime) {\n        return c.startTime <= mediaPreviewTime && c.endTime >= mediaPreviewTime;\n      }\n      return c.startTime <= mediaPreviewTime && c.endTime > mediaPreviewTime;\n    })?.text;\n\n    // If the chapter is not found but the detail (preview time) is defined\n    // set the chapter to an empty string to differentiate it from undefined.\n    if (detail != null && mediaPreviewChapter == null) {\n      mediaPreviewChapter = '';\n    }\n\n    // NOTE: Example of directly updating state from a request action/event (CJP)\n    return {\n      mediaPreviewTime,\n      mediaPreviewImage,\n      mediaPreviewCoords,\n      mediaPreviewChapter,\n    };\n  },\n  [MediaUIEvents.MEDIA_PAUSE_REQUEST](stateMediator, stateOwners) {\n    const key = 'mediaPaused';\n    const value = true;\n    stateMediator[key].set(value, stateOwners);\n  },\n  [MediaUIEvents.MEDIA_PLAY_REQUEST](stateMediator, stateOwners) {\n    const key = 'mediaPaused';\n    const value = false;\n\n    const live =\n      stateMediator.mediaStreamType.get(stateOwners) === StreamTypes.LIVE;\n\n    if (live) {\n      const notDvr = !(\n        stateMediator.mediaTargetLiveWindow.get(stateOwners) > 0\n      );\n      const liveEdgeTime = stateMediator.mediaSeekable.get(stateOwners)?.[1];\n      // Only seek to live if we are live, not DVR, and have a known seekable end\n      if (notDvr && liveEdgeTime) {\n        stateMediator.mediaCurrentTime.set(liveEdgeTime, stateOwners);\n      }\n    }\n\n    stateMediator[key].set(value, stateOwners);\n  },\n  [MediaUIEvents.MEDIA_PLAYBACK_RATE_REQUEST](\n    stateMediator,\n    stateOwners,\n    { detail }\n  ) {\n    const key = 'mediaPlaybackRate';\n    const value = detail;\n    stateMediator[key].set(value, stateOwners);\n  },\n  [MediaUIEvents.MEDIA_MUTE_REQUEST](stateMediator, stateOwners) {\n    const key = 'mediaMuted';\n    const value = true;\n    stateMediator[key].set(value, stateOwners);\n  },\n  [MediaUIEvents.MEDIA_UNMUTE_REQUEST](stateMediator, stateOwners) {\n    const key = 'mediaMuted';\n    const value = false;\n    // If we've unmuted but our volume is currently 0, automatically set it to some low volume\n    if (!stateMediator.mediaVolume.get(stateOwners)) {\n      stateMediator.mediaVolume.set(0.25, stateOwners);\n    }\n    stateMediator[key].set(value, stateOwners);\n  },\n  [MediaUIEvents.MEDIA_VOLUME_REQUEST](stateMediator, stateOwners, { detail }) {\n    const key = 'mediaVolume';\n    const value = detail;\n    // If we've adjusted the volume to some non-0 number and are muted, automatically unmute.\n    // NOTE: \"pseudo-muted\" is currently modeled via MEDIA_VOLUME_LEVEL === \"off\" (CJP)\n    if (value && stateMediator.mediaMuted.get(stateOwners)) {\n      stateMediator.mediaMuted.set(false, stateOwners);\n    }\n    stateMediator[key].set(value, stateOwners);\n  },\n  [MediaUIEvents.MEDIA_SEEK_REQUEST](stateMediator, stateOwners, { detail }) {\n    const key = 'mediaCurrentTime';\n    const value = detail;\n    stateMediator[key].set(value, stateOwners);\n  },\n  [MediaUIEvents.MEDIA_SEEK_TO_LIVE_REQUEST](stateMediator, stateOwners) {\n    // This is an example of a specialized state change request \"action\" that doesn't need a specialized\n    // state facade model\n    const key = 'mediaCurrentTime';\n    const value = stateMediator.mediaSeekable.get(stateOwners)?.[1];\n    // If we don't have a known seekable end (which represents the live edge), bail early\n    if (Number.isNaN(Number(value))) return;\n    stateMediator[key].set(value, stateOwners);\n  },\n  // Text Tracks state change requests\n  [MediaUIEvents.MEDIA_SHOW_SUBTITLES_REQUEST](\n    _stateMediator,\n    stateOwners,\n    { detail }\n  ) {\n    const { options } = stateOwners;\n    const tracks = getSubtitleTracks(stateOwners);\n    const tracksToUpdate = parseTracks(detail);\n    const preferredLanguage = tracksToUpdate[0]?.language;\n    if (preferredLanguage && !options.noSubtitlesLangPref) {\n      globalThis.localStorage.setItem(\n        'media-chrome-pref-subtitles-lang',\n        preferredLanguage\n      );\n    }\n    updateTracksModeTo(TextTrackModes.SHOWING, tracks, tracksToUpdate);\n  },\n  [MediaUIEvents.MEDIA_DISABLE_SUBTITLES_REQUEST](\n    _stateMediator,\n    stateOwners,\n    { detail }\n  ) {\n    const tracks = getSubtitleTracks(stateOwners);\n    const tracksToUpdate = detail ?? [];\n    updateTracksModeTo(TextTrackModes.DISABLED, tracks, tracksToUpdate);\n  },\n  [MediaUIEvents.MEDIA_TOGGLE_SUBTITLES_REQUEST](\n    _stateMediator,\n    stateOwners,\n    { detail }\n  ) {\n    toggleSubtitleTracks(stateOwners, detail);\n  },\n  // Renditions/Tracks state change requests\n  [MediaUIEvents.MEDIA_RENDITION_REQUEST](\n    stateMediator,\n    stateOwners,\n    { detail }\n  ) {\n    const key = 'mediaRenditionSelected';\n    const value = detail;\n    stateMediator[key].set(value, stateOwners);\n  },\n  [MediaUIEvents.MEDIA_AUDIO_TRACK_REQUEST](\n    stateMediator,\n    stateOwners,\n    { detail }\n  ) {\n    const key = 'mediaAudioTrackEnabled';\n    const value = detail;\n    stateMediator[key].set(value, stateOwners);\n  },\n  // State change requests dependent on root node\n  [MediaUIEvents.MEDIA_ENTER_PIP_REQUEST](stateMediator, stateOwners) {\n    const key = 'mediaIsPip';\n    const value = true;\n    // Exit fullscreen if in fullscreen and entering PiP\n    if (stateMediator.mediaIsFullscreen.get(stateOwners)) {\n      // Should be async\n      stateMediator.mediaIsFullscreen.set(false, stateOwners);\n    }\n    stateMediator[key].set(value, stateOwners);\n  },\n  [MediaUIEvents.MEDIA_EXIT_PIP_REQUEST](stateMediator, stateOwners) {\n    const key = 'mediaIsPip';\n    const value = false;\n    stateMediator[key].set(value, stateOwners);\n  },\n  [MediaUIEvents.MEDIA_ENTER_FULLSCREEN_REQUEST](stateMediator, stateOwners) {\n    const key = 'mediaIsFullscreen';\n    const value = true;\n    // Exit PiP if in PiP and entering fullscreen\n    if (stateMediator.mediaIsPip.get(stateOwners)) {\n      // Should be async\n      stateMediator.mediaIsPip.set(false, stateOwners);\n    }\n    stateMediator[key].set(value, stateOwners);\n  },\n  [MediaUIEvents.MEDIA_EXIT_FULLSCREEN_REQUEST](stateMediator, stateOwners) {\n    const key = 'mediaIsFullscreen';\n    const value = false;\n    stateMediator[key].set(value, stateOwners);\n  },\n  [MediaUIEvents.MEDIA_ENTER_CAST_REQUEST](stateMediator, stateOwners) {\n    const key = 'mediaIsCasting';\n    const value = true;\n    // Exit fullscreen if in fullscreen and attempting to cast\n    if (stateMediator.mediaIsFullscreen.get(stateOwners)) {\n      // Should be async\n      stateMediator.mediaIsFullscreen.set(false, stateOwners);\n    }\n    stateMediator[key].set(value, stateOwners);\n  },\n  [MediaUIEvents.MEDIA_EXIT_CAST_REQUEST](stateMediator, stateOwners) {\n    const key = 'mediaIsCasting';\n    const value = false;\n    stateMediator[key].set(value, stateOwners);\n  },\n  [MediaUIEvents.MEDIA_AIRPLAY_REQUEST](stateMediator, stateOwners) {\n    const key = 'mediaIsAirplaying';\n    const value = true;\n    stateMediator[key].set(value, stateOwners);\n  },\n};\n", "/**\n *\n * MediaStore is a way to model media state (and changes to it) in a framework- and DOM-agnostic way. Like the difference between Redux\n * (the core state manager) and the Redux react wrapper, MediaStore provides the primitive for aggregating media state together in one place.\n *\n * It receives events as media state change requests (like `mediaplayrequest`) and keeps an internal representation of the complete media\n * state after they change, as opposed to querying the media state sources directly every time it needs to check what state something is in.\n *\n * It doesn't \"know\" how to update or query the StateOwners itself (like the media element). Rather, it relies on the StateMediator as an interface\n * for getting and setting state and relies on the RequestMap as an interface for translating state change requests to state updates (typically also\n * deferring to the StateMediator for setting state on the relevant StateOwners).\n *\n * Additionally, MediaStore state is not optimistically stored when a state change request is dispatched to it. It instead defers to the StateMediator,\n * waiting for events from the StateOwners before checking if the state actually changed and only then committing it to its internal representation of MediaState.\n *\n * @module media-store\n */\n\nimport {\n  stateMediator as defaultStateMediator,\n  prepareStateOwners,\n  StateMediator,\n  EventOrAction,\n} from './state-mediator.js';\nimport { areValuesEq } from './util.js';\nimport { requestMap as defaultRequestMap, RequestMap } from './request-map.js';\n\n/**\n * MediaState is a full representation of all media-related state modeled by the MediaStore and its StateMediator.\n * Instead of checking the StateOwners' state directly or on the fly, MediaStore keeps a \"snapshot\" of the latest\n * state, which will be provided to any MediaStore subscribers whenever the state changes, and is arbitrarily retrievable\n * from the MediaStore using `getState()`.\n */\nexport type MediaState = Readonly<{\n  [K in keyof StateMediator]: ReturnType<StateMediator[K]['get']>;\n}> & {\n  mediaPreviewTime: number;\n  mediaPreviewImage: string;\n  mediaPreviewCoords: [string, string, string, string];\n};\n\n/**\n * MediaStore is the primary abstraction for managing and monitoring media state and other state relevant to the media UI\n * (for example, fullscreen behavior or the availability of media-related functionality for a particular browser or runtime, such as volume control or Airplay). This includes:\n * - Keeping track of any state changes (examples: Is the media muted? Is the currently playing media live or on demand? What audio tracks are available for the current media?)\n * - Sharing the latest state with any MediaStore subscribers whenever it changes\n * - Receiving and responding to requests to change the media or related state (examples: I would like the media to be unmuted. I want to start casting now. I want to switch from English subtitles to Japanese.)\n * - Wiring up and managing the relationships between media state, media state change requests, and the stateful entities that \u201Cown\u201D the majority of this state (examples: the current media element being used, the current root node, the current fullscreen element)\n * - Respecting and monitoring changes in certain optional behaviors that impact state or state change requests (examples: I want subtitles/closed captions to be on by default whenever media with them are loaded. I want to disable keeping track of the user\u2019s preferred volume level.)\n *\n * @example &lt;caption>Basic Usage.&lt;/caption>\n * const mediaStore = createStore({\n *   media: myVideoElement,\n *   fullscreenElement: myMediaUIContainerElement,\n *   // documentElement: advancedRootNodeCase // Will default to `document`\n *   options: {\n *     defaultSubtitles: true // enable subtitles/captions by default\n *   },\n * });\n *\n * // NOTE: In a more realistic example, `myToggleMutedButton` and `mySeekForwardButton` would likely keep track of/\"own\" its current state. See, e.g. the `<mute-button>` Media Chrome Web Component.\n * const unsubscribe = mediaStore.subscribe(state => {\n *   myToggleMutedButton.textContent = state.muted ? 'Unmute' : 'Mute';\n * });\n *\n * myToggleMutedButton.addEventListener('click', () => {\n *   const type = mediaStore.getState().muted ? 'mediaunmuterequest' : 'mediamuterequest'\n *   mediaStore.dispatch({ type });\n * });\n *\n * mySeekForwardButton.addEventListener('click', () => {\n *   mediaStore.dispatch({\n *     type: 'mediaseekrequest',\n *     // NOTE: For all of our state change requests that require additional information, we rely on the `detail` property so we can conform to `CustomEvent`, making interop easier.\n *     detail: mediaStore.getState().mediaCurrentTime + 15,\n *   });\n * });\n *\n * // If your code has cases where it swaps out the media element being used\n * mediaStore.dispatch({\n *   type: 'mediaelementchangerequest',\n *   detail: myAudioElement,\n * });\n *\n * // ... Eventual teardown, when relevant. This is especially relevant for potential garbage collection/memory management considerations.\n * unsubscribe();\n *\n */\nexport type MediaStore = {\n  /**\n   * A method that expects an \"Action\" or \"Event\".Primarily used to make state change requests.\n   */\n  dispatch(eventOrAction: EventOrAction<any>): void;\n\n  /**\n   *  A method to get the current state of the MediaStore\n   */\n  getState(): Partial<MediaState>;\n\n  /**\n   * A method to \"subscribe\" to the MediaStore. A subscriber is just a callback function that is invoked with the current state whenever the MediaStore's state changes. The method returns an \"unsubscribe\" function, which should be used to tell the MediaStore to remove the corresponding subscriber.\n   */\n  subscribe(handler: (state: Partial<MediaState>) => void): () => void;\n};\n\ntype MediaStoreConfig = {\n  media?: any;\n  fullscreenElement?: any;\n  documentElement?: any;\n  stateMediator?: StateMediator;\n  requestMap?: RequestMap;\n  options?: any;\n  monitorStateOwnersOnlyWithSubscriptions?: boolean;\n};\n/**\n * A factory for creating a `MediaStore` instance.\n * @param mediaStoreConfig - Configuration object for the `MediaStore`.\n */\nconst createMediaStore = ({\n  media,\n  fullscreenElement,\n  documentElement,\n  stateMediator = defaultStateMediator,\n  requestMap = defaultRequestMap,\n  options = {},\n  monitorStateOwnersOnlyWithSubscriptions = true,\n}: MediaStoreConfig): MediaStore => {\n  const callbacks = [];\n\n  // We may eventually want to expose the state owners as part of the state\n  // or as a specialized getter API for advanced use cases\n  /** @type {StateOwners} */\n  const stateOwners: any = {\n    // Spreading options here since folks should not rely on holding onto references\n    // for any app-level logic wrt options.\n    options: { ...options },\n  };\n\n  /** @TODO How to model initial state for values not (currently) provided via the facade? (CJP) */\n  /**\n   * @type {Partial<MediaState>}\n   */\n  let state = Object.freeze({\n    mediaPreviewTime: undefined,\n    mediaPreviewImage: undefined,\n    mediaPreviewCoords: undefined,\n    mediaPreviewChapter: undefined,\n  });\n\n  const updateState = (nextStateDelta: any) => {\n    // This function is generically invoked, even if there are\n    // no direct state updates. In those cases, simply bail early. (CJP)\n    if (nextStateDelta == undefined) return;\n    if (areValuesEq(nextStateDelta, state)) {\n      return;\n    }\n\n    // Update the state since it changed.\n    // Using an \"immutable\" approach here so\n    // callbacks can easily do comparisons between prev/next state.\n    // Freezing isn't necessary, though it's a light touch enforcement\n    // of immutability (in case folks try to directly modify state)\n    state = Object.freeze({\n      ...state,\n      ...nextStateDelta,\n    });\n\n    // Given anything that cares the updated state\n    callbacks.forEach((cb) => cb(state));\n  };\n\n  const updateStateFromFacade = () => {\n    const nextState = Object.entries(stateMediator).reduce(\n      (nextState, [stateName, { get }]) => {\n        // (re)initialize state based on current derived state of facade\n        // NOTE: Since we don't know what stateOwners are tied to deriving a particular state,\n        // we should update this if *any*  state owner changed. (CJP)\n        nextState[stateName] = get(stateOwners);\n        return nextState;\n      },\n      {}\n    );\n\n    // since a bunch of state likely changed, update with the latest computed values\n    updateState(nextState);\n  };\n\n  // Dictionary for event handler storage and cleanup\n  const stateUpdateHandlers = {};\n\n  // This function will handle all wiring up of event handlers/monitoring of state\n  // and will re-compute the general next state whenever any \"state owner\" is set or updated,\n  // which includes the media element, but also the documentElement and the fullscreenElement\n  // This is roughly equivalent to what used to be in `mediaSetCallback`/`mediaUnsetCallback` (CJP)\n  let nextStateOwners = undefined;\n  const updateStateOwners = async (\n    nextStateOwnersDelta: any,\n    nextSubscriberCount?: number\n  ) => {\n    const pendingUpdate = !!nextStateOwners;\n    nextStateOwners = {\n      ...stateOwners,\n      ...(nextStateOwners ?? {}),\n      ...nextStateOwnersDelta,\n    };\n\n    if (pendingUpdate) return;\n\n    await prepareStateOwners(...Object.values(nextStateOwnersDelta));\n\n    // Define all of the disparate stateOwner monitoring teardown/setup once, up front.\n\n    // To avoid memory leaks, MediaStores can be configured to only monitor if\n    // there's at least one subscriber (callback). If they're configured this way,\n    // that means they should teardown pre-existing monitoring (e.g. event handlers)\n    // whenever the subscribers \"head count\" goes from > 0 to 0.\n    const shouldTeardownFromSubscriberCount =\n      callbacks.length > 0 &&\n      nextSubscriberCount === 0 &&\n      monitorStateOwnersOnlyWithSubscriptions;\n\n    // These define whether a particular `stateOwner` (or \"sub-owner\", e.g. media.textTracks)\n    // has changed since the last time this function was invoked. Relevant for both\n    // teardown and setup logic.\n    const mediaChanged = stateOwners.media !== nextStateOwners.media;\n    const textTracksChanged =\n      stateOwners.media?.textTracks !== nextStateOwners.media?.textTracks;\n    const videoRenditionsChanged =\n      stateOwners.media?.videoRenditions !==\n      nextStateOwners.media?.videoRenditions;\n    const audioTracksChanged =\n      stateOwners.media?.audioTracks !== nextStateOwners.media?.audioTracks;\n    const remoteChanged =\n      stateOwners.media?.remote !== nextStateOwners.media?.remote;\n    const rootNodeChanged =\n      stateOwners.documentElement !== nextStateOwners.documentElement;\n\n    // For any particular `stateOwner` (or \"sub-owner\"), we should teardown if and only if:\n    // * the `stateOwner` existed -AND-\n    // * it either changed -OR-\n    // * we are configured to stop monitoring due to the subscriber \"head count\".\n    const teardownMedia =\n      !!stateOwners.media &&\n      (mediaChanged || shouldTeardownFromSubscriberCount);\n\n    const teardownTextTracks =\n      !!stateOwners.media?.textTracks &&\n      (textTracksChanged || shouldTeardownFromSubscriberCount);\n\n    const teardownVideoRenditions =\n      !!stateOwners.media?.videoRenditions &&\n      (videoRenditionsChanged || shouldTeardownFromSubscriberCount);\n\n    const teardownAudioTracks =\n      !!stateOwners.media?.audioTracks &&\n      (audioTracksChanged || shouldTeardownFromSubscriberCount);\n\n    const teardownRemote =\n      !!stateOwners.media?.remote &&\n      (remoteChanged || shouldTeardownFromSubscriberCount);\n\n    const teardownRootNode =\n      !!stateOwners.documentElement &&\n      (rootNodeChanged || shouldTeardownFromSubscriberCount);\n\n    // This is simply a convenience definition saying we should be tearing down *something*\n    // used for short circuiting conditions.\n    const teardownSomething =\n      teardownMedia ||\n      teardownTextTracks ||\n      teardownVideoRenditions ||\n      teardownAudioTracks ||\n      teardownRemote ||\n      teardownRootNode;\n\n    // To avoid memory leaks, MediaStores can be configured to only monitor if\n    // there's at least one subscriber (callback). If they're configured this way,\n    // that means they should teardown pre-existing monitoring (e.g. event handlers)\n    // whenever the subscribers \"head count\" goes from > 0 to 0.\n    const shouldSetupFromSubscriberCount =\n      callbacks.length === 0 &&\n      nextSubscriberCount === 1 &&\n      monitorStateOwnersOnlyWithSubscriptions;\n\n    // For any particular `stateOwner` (or \"sub-owner\"), we should setup if and only if:\n    // * the new `stateOwner` exists (or is not being replaced) -AND-\n    // * it changed -OR-\n    // * we are configured to start monitoring due to the subscriber \"head count\".\n    const setupMedia =\n      !!nextStateOwners.media &&\n      (mediaChanged || shouldSetupFromSubscriberCount);\n\n    const setupTextTracks =\n      !!nextStateOwners.media?.textTracks &&\n      (textTracksChanged || shouldSetupFromSubscriberCount);\n\n    const setupVideoRenditions =\n      !!nextStateOwners.media?.videoRenditions &&\n      (videoRenditionsChanged || shouldSetupFromSubscriberCount);\n\n    const setupAudioTracks =\n      !!nextStateOwners.media?.audioTracks &&\n      (audioTracksChanged || shouldSetupFromSubscriberCount);\n\n    const setupRemote =\n      !!nextStateOwners.media?.remote &&\n      (remoteChanged || shouldSetupFromSubscriberCount);\n\n    const setupRootNode =\n      !!nextStateOwners.documentElement &&\n      (rootNodeChanged || shouldSetupFromSubscriberCount);\n\n    // This is simply a convenience definition saying we should be setting up *something*\n    // used for short circuiting conditions.\n    const setupSomething =\n      setupMedia ||\n      setupTextTracks ||\n      setupVideoRenditions ||\n      setupAudioTracks ||\n      setupRemote ||\n      setupRootNode;\n\n    const somethingToDo = teardownSomething || setupSomething;\n\n    // If there's nothing to do (teardown- or setup-wise), we're done here.\n    if (!somethingToDo) {\n      // Except make sure we actually update the stateOwners, if changed\n      Object.entries(nextStateOwners).forEach(\n        ([stateOwnerName, stateOwner]) => {\n          stateOwners[stateOwnerName] = stateOwner;\n        }\n      );\n      updateStateFromFacade();\n      nextStateOwners = undefined;\n      return;\n    }\n\n    Object.entries(stateMediator).forEach(\n      ([\n        stateName,\n        {\n          get,\n          mediaEvents = [],\n          textTracksEvents = [],\n          videoRenditionsEvents = [],\n          audioTracksEvents = [],\n          remoteEvents = [],\n          rootEvents = [],\n          stateOwnersUpdateHandlers = [],\n        },\n      ]) => {\n        // NOTE: This should probably be pulled out into a one-time initialization (CJP)\n        if (!stateUpdateHandlers[stateName]) {\n          stateUpdateHandlers[stateName] = {};\n        }\n\n        const handler = (event) => {\n          const nextValue = get(stateOwners, event);\n          updateState({ [stateName]: nextValue });\n        };\n\n        let prevHandler;\n        // Media Changed, update handlers here\n        prevHandler = stateUpdateHandlers[stateName].mediaEvents;\n        mediaEvents.forEach((eventType) => {\n          if (prevHandler && teardownMedia) {\n            stateOwners.media.removeEventListener(eventType, prevHandler);\n            stateUpdateHandlers[stateName].mediaEvents = undefined;\n          }\n          if (setupMedia) {\n            nextStateOwners.media.addEventListener(eventType, handler);\n            stateUpdateHandlers[stateName].mediaEvents = handler;\n          }\n        });\n        prevHandler = stateUpdateHandlers[stateName].textTracksEvents;\n        textTracksEvents.forEach((eventType) => {\n          if (prevHandler && teardownTextTracks) {\n            stateOwners.media.textTracks?.removeEventListener(\n              eventType,\n              prevHandler\n            );\n            stateUpdateHandlers[stateName].textTracksEvents = undefined;\n          }\n          if (setupTextTracks) {\n            nextStateOwners.media.textTracks?.addEventListener(\n              eventType,\n              handler\n            );\n            stateUpdateHandlers[stateName].textTracksEvents = handler;\n          }\n        });\n        prevHandler = stateUpdateHandlers[stateName].videoRenditionsEvents;\n        videoRenditionsEvents.forEach((eventType) => {\n          if (prevHandler && teardownVideoRenditions) {\n            stateOwners.media.videoRenditions?.removeEventListener(\n              eventType,\n              prevHandler\n            );\n            stateUpdateHandlers[stateName].videoRenditionsEvents = undefined;\n          }\n          if (setupVideoRenditions) {\n            nextStateOwners.media.videoRenditions?.addEventListener(\n              eventType,\n              handler\n            );\n            stateUpdateHandlers[stateName].videoRenditionsEvents = handler;\n          }\n        });\n        prevHandler = stateUpdateHandlers[stateName].audioTracksEvents;\n        audioTracksEvents.forEach((eventType) => {\n          if (prevHandler && teardownAudioTracks) {\n            stateOwners.media.audioTracks?.removeEventListener(\n              eventType,\n              prevHandler\n            );\n            stateUpdateHandlers[stateName].audioTracksEvents = undefined;\n          }\n          if (setupAudioTracks) {\n            nextStateOwners.media.audioTracks?.addEventListener(\n              eventType,\n              handler\n            );\n            stateUpdateHandlers[stateName].audioTracksEvents = handler;\n          }\n        });\n        prevHandler = stateUpdateHandlers[stateName].remoteEvents;\n        remoteEvents.forEach((eventType) => {\n          if (prevHandler && teardownRemote) {\n            stateOwners.media.remote?.removeEventListener(\n              eventType,\n              prevHandler\n            );\n            stateUpdateHandlers[stateName].remoteEvents = undefined;\n          }\n          if (setupRemote) {\n            nextStateOwners.media.remote?.addEventListener(eventType, handler);\n            stateUpdateHandlers[stateName].remoteEvents = handler;\n          }\n        });\n\n        prevHandler = stateUpdateHandlers[stateName].rootEvents;\n        rootEvents.forEach((eventType) => {\n          if (prevHandler && teardownRootNode) {\n            stateOwners.documentElement.removeEventListener(\n              eventType,\n              prevHandler\n            );\n            stateUpdateHandlers[stateName].rootEvents = undefined;\n          }\n          if (setupRootNode) {\n            nextStateOwners.documentElement.addEventListener(\n              eventType,\n              handler\n            );\n            stateUpdateHandlers[stateName].rootEvents = handler;\n          }\n        });\n\n        // NOTE: Since custom update handlers may depend on *any* state owner\n        // we should apply them whenever any state owner changes (CJP)\n        const prevHandlerTeardown =\n          stateUpdateHandlers[stateName].stateOwnersUpdateHandlers;\n        stateOwnersUpdateHandlers.forEach((fn) => {\n          if (prevHandlerTeardown && teardownSomething) {\n            prevHandlerTeardown();\n          }\n          if (setupSomething) {\n            stateUpdateHandlers[stateName].stateOwnersUpdateHandlers = fn(\n              handler,\n              nextStateOwners\n            );\n          }\n        });\n      }\n    );\n\n    Object.entries(nextStateOwners).forEach(([stateOwnerName, stateOwner]) => {\n      stateOwners[stateOwnerName] = stateOwner;\n    });\n    updateStateFromFacade();\n    nextStateOwners = undefined;\n  };\n\n  updateStateOwners({ media, fullscreenElement, documentElement, options });\n\n  return {\n    // note that none of these cases directly interact with the media element, root node, full screen element, etc.\n    // note these \"actions\" could just be the events if we wanted, especially if we normalize on \"detail\" for\n    // any payload-relevant values\n    // This is roughly equivalent to our used to be in our state requests dictionary object, though much of the\n    // \"heavy lifting\" is now moved into the facade `set()`\n    dispatch(action) {\n      const { type, detail } = action;\n\n      // For any state change request \"actions\"/\"events\" of media (and related) state,\n      // these are handled by the `RequestMap`, which defines a function for a given change request type\n      // that is responsible for what should happen as a result\n      if (requestMap[type]) {\n        // Most state change requests do not directly update the media state. Instead\n        // they will typically interact in some way or another with one or more of the `StateOwner`s (like the media element).\n        // For some of our media UI state, however, it does directly update state. In those cases,\n        // the function can optionally return an object with the properties and values of the media state changes.\n        // See: RequestMap[MediaUIEvents.MEDIA_PREVIEW_REQUEST] for an example of this.\n        updateState(requestMap[type](stateMediator, stateOwners, action));\n        return;\n      }\n\n      // These are other state change requests so we can dynamically update things like the media element, fullscreenElement,\n      // or options-style properties in a single architecture.\n\n      // We can get change requests for the stateOwners themselves\n      if (type === 'mediaelementchangerequest') {\n        updateStateOwners({ media: detail });\n      } else if (type === 'fullscreenelementchangerequest') {\n        updateStateOwners({ fullscreenElement: detail });\n      } else if (type === 'documentelementchangerequest') {\n        updateStateOwners({ documentElement: detail });\n      }\n      // and we can update our default/options values\n      else if (type === 'optionschangerequest') {\n        // Doing a simple impl for now\n        Object.entries(detail ?? {}).forEach(([optionName, optionValue]) => {\n          // NOTE: updating options will *NOT* prompt any state updates.\n          // However, since we directly mutate options, this allows state owners to be\n          // \"live\" and automatically updated for any other event or similar monitoring.\n          // For a concrete example, see, e.g., the `mediaSubtitlesShowing.stateOwnersUpdateHandlers`\n          // responsible for managing/monitoring `defaultSubtitles` in the `defaultStateMediator`. (CJP)\n          stateOwners.options[optionName] = optionValue;\n        });\n        // updateStateFromFacade();\n      }\n    },\n    getState() {\n      // return the current state, whatever it is\n      return state;\n    },\n    subscribe(callback) {\n      // Since state owner monitoring can change based on subscription \"head count\",\n      // make sure we invoke `updateStateOwners()` whenever someone subscribes.\n      // NOTE: Must do this before updating `callbacks` to compare next vs. previous callback count.\n      updateStateOwners({}, callbacks.length + 1);\n      callbacks.push(callback);\n\n      // give the callback the current state immediately so it can get whatever the state is currently.\n      callback(state);\n      return () => {\n        const idx = callbacks.indexOf(callback);\n        if (idx >= 0) {\n          // Since state owner monitoring can change based on subscription \"head count\",\n          // make sure we invoke `updateStateOwners()` whenever someone unsubscribes.\n          // NOTE: Must do this before updating `callbacks` to compare next vs. previous callback count.\n          updateStateOwners({}, callbacks.length - 1);\n          callbacks.splice(idx, 1);\n        }\n      };\n    },\n  };\n};\n\nexport default createMediaStore;\n", "/*\n  The <media-chrome> can contain the control elements\n  and the media element. Features:\n  * Auto-set the `media` attribute on child media chrome elements\n    * Uses the element with slot=\"media\"\n  * Take custom controls to fullscreen\n  * Position controls at the bottom\n  * Auto-hide controls on inactivity while playing\n*/\nimport { MediaContainer } from './media-container.js';\nimport { document, globalThis } from './utils/server-safe-globals.js';\nimport { AttributeTokenList } from './utils/attribute-token-list.js';\nimport {\n  delay,\n  stringifyRenditionList,\n  stringifyAudioTrackList,\n} from './utils/utils.js';\nimport { stringifyTextTrackList } from './utils/captions.js';\nimport {\n  MediaUIEvents,\n  MediaUIAttributes,\n  MediaStateReceiverAttributes,\n  AttributeToStateChangeEventMap,\n  MediaUIProps,\n} from './constants.js';\nimport {\n  setBooleanAttr,\n  setNumericAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\nimport createMediaStore, { MediaStore } from './media-store/media-store.js';\nimport { CustomElement } from './utils/CustomElement.js';\n\nconst ButtonPressedKeys = [\n  'ArrowLeft',\n  'ArrowRight',\n  'Enter',\n  ' ',\n  'f',\n  'm',\n  'k',\n  'c',\n];\nconst DEFAULT_SEEK_OFFSET = 10;\n\nexport const Attributes = {\n  DEFAULT_SUBTITLES: 'defaultsubtitles',\n  DEFAULT_STREAM_TYPE: 'defaultstreamtype',\n  DEFAULT_DURATION: 'defaultduration',\n  FULLSCREEN_ELEMENT: 'fullscreenelement',\n  HOTKEYS: 'hotkeys',\n  KEYS_USED: 'keysused',\n  LIVE_EDGE_OFFSET: 'liveedgeoffset',\n  NO_AUTO_SEEK_TO_LIVE: 'noautoseektolive',\n  NO_HOTKEYS: 'nohotkeys',\n  NO_VOLUME_PREF: 'novolumepref',\n  NO_SUBTITLES_LANG_PREF: 'nosubtitleslangpref',\n  NO_DEFAULT_STORE: 'nodefaultstore',\n  KEYBOARD_FORWARD_SEEK_OFFSET: 'keyboardforwardseekoffset',\n  KEYBOARD_BACKWARD_SEEK_OFFSET: 'keyboardbackwardseekoffset',\n};\n\n/**\n * Media Controller should not mimic the HTMLMediaElement API.\n * @see https://github.com/muxinc/media-chrome/pull/182#issuecomment-1067370339\n *\n * @attr {boolean} defaultsubtitles\n * @attr {string} defaultstreamtype\n * @attr {string} defaultduration\n * @attr {string} fullscreenelement\n * @attr {boolean} nohotkeys\n * @attr {string} hotkeys\n * @attr {string} keysused\n * @attr {string} liveedgeoffset\n * @attr {boolean} noautoseektolive\n * @attr {boolean} novolumepref\n * @attr {boolean} nosubtitleslangpref\n * @attr {boolean} nodefaultstore\n */\nclass MediaController extends MediaContainer {\n  static get observedAttributes() {\n    return super.observedAttributes.concat(\n      Attributes.NO_HOTKEYS,\n      Attributes.HOTKEYS,\n      Attributes.DEFAULT_STREAM_TYPE,\n      Attributes.DEFAULT_SUBTITLES,\n      Attributes.DEFAULT_DURATION\n    );\n  }\n\n  mediaStateReceivers: HTMLElement[] = [];\n  associatedElementSubscriptions: Map<HTMLElement, () => void> = new Map();\n\n  #hotKeys = new AttributeTokenList(this, Attributes.HOTKEYS);\n  #fullscreenElement: HTMLElement;\n  #mediaStore: MediaStore;\n  #mediaStateCallback: (nextState: any) => void;\n  #mediaStoreUnsubscribe: () => void;\n  #mediaStateEventHandler = (event): void => {\n    this.#mediaStore?.dispatch(event);\n  };\n\n  constructor() {\n    super();\n\n    // Track externally associated control elements\n\n    this.associateElement(this);\n\n    let prevState = {};\n    this.#mediaStateCallback = (nextState: any): void => {\n      Object.entries(nextState).forEach(([stateName, stateValue]) => {\n        // Make sure to propagate initial state, even if still undefined (CJP)\n        if (stateName in prevState && prevState[stateName] === stateValue)\n          return;\n        this.propagateMediaState(stateName, stateValue);\n        const attrName = stateName.toLowerCase();\n        const evt = new globalThis.CustomEvent(\n          AttributeToStateChangeEventMap[attrName],\n          { composed: true, detail: stateValue }\n        );\n\n        this.dispatchEvent(evt);\n      });\n      prevState = nextState;\n    };\n\n    this.enableHotkeys();\n  }\n\n  #setupDefaultStore() {\n    this.mediaStore = createMediaStore({\n      media: this.media,\n      fullscreenElement: this.fullscreenElement,\n      options: {\n        defaultSubtitles: this.hasAttribute(Attributes.DEFAULT_SUBTITLES),\n        defaultDuration: this.hasAttribute(Attributes.DEFAULT_DURATION)\n          ? +this.getAttribute(Attributes.DEFAULT_DURATION)\n          : undefined,\n        defaultStreamType:\n          /** @type {import('./media-store/state-mediator.js').StreamTypeValue} */ this.getAttribute(\n            Attributes.DEFAULT_STREAM_TYPE\n          ) ?? undefined,\n        liveEdgeOffset: this.hasAttribute(Attributes.LIVE_EDGE_OFFSET)\n          ? +this.getAttribute(Attributes.LIVE_EDGE_OFFSET)\n          : undefined,\n        // NOTE: This wasn't updated if it was changed later. Should it be? (CJP)\n        noVolumePref: this.hasAttribute(Attributes.NO_VOLUME_PREF),\n        noSubtitlesLangPref: this.hasAttribute(\n          Attributes.NO_SUBTITLES_LANG_PREF\n        ),\n      },\n    });\n  }\n\n  get mediaStore(): MediaStore {\n    return this.#mediaStore;\n  }\n\n  set mediaStore(value: MediaStore) {\n    if (this.#mediaStore) {\n      this.#mediaStoreUnsubscribe?.();\n      this.#mediaStoreUnsubscribe = undefined;\n    }\n    this.#mediaStore = value;\n\n    if (!this.#mediaStore && !this.hasAttribute(Attributes.NO_DEFAULT_STORE)) {\n      this.#setupDefaultStore();\n      return;\n    }\n\n    this.#mediaStoreUnsubscribe = this.#mediaStore?.subscribe(\n      this.#mediaStateCallback\n    );\n  }\n\n  get fullscreenElement(): HTMLElement {\n    return this.#fullscreenElement ?? this;\n  }\n\n  set fullscreenElement(element: HTMLElement) {\n    if (this.hasAttribute(Attributes.FULLSCREEN_ELEMENT)) {\n      this.removeAttribute(Attributes.FULLSCREEN_ELEMENT);\n    }\n    this.#fullscreenElement = element;\n    // Use the getter in case the fullscreen element was reset to \"`this`\"\n    this.#mediaStore?.dispatch({\n      type: 'fullscreenelementchangerequest',\n      detail: this.fullscreenElement,\n    });\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === Attributes.NO_HOTKEYS) {\n      if (newValue !== oldValue && newValue === '') {\n        if (this.hasAttribute(Attributes.HOTKEYS)) {\n          console.warn(\n            'Media Chrome: Both `hotkeys` and `nohotkeys` have been set. All hotkeys will be disabled.'\n          );\n        }\n        this.disableHotkeys();\n      } else if (newValue !== oldValue && newValue === null) {\n        this.enableHotkeys();\n      }\n    } else if (attrName === Attributes.HOTKEYS) {\n      this.#hotKeys.value = newValue;\n    } else if (\n      attrName === Attributes.DEFAULT_SUBTITLES &&\n      newValue !== oldValue\n    ) {\n      this.#mediaStore?.dispatch({\n        type: 'optionschangerequest',\n        detail: {\n          defaultSubtitles: this.hasAttribute(Attributes.DEFAULT_SUBTITLES),\n        },\n      });\n    } else if (attrName === Attributes.DEFAULT_STREAM_TYPE) {\n      this.#mediaStore?.dispatch({\n        type: 'optionschangerequest',\n        detail: {\n          defaultStreamType:\n            this.getAttribute(Attributes.DEFAULT_STREAM_TYPE) ?? undefined,\n        },\n      });\n    } else if (attrName === Attributes.LIVE_EDGE_OFFSET) {\n      this.#mediaStore?.dispatch({\n        type: 'optionschangerequest',\n        detail: {\n          liveEdgeOffset: this.hasAttribute(Attributes.LIVE_EDGE_OFFSET)\n            ? +this.getAttribute(Attributes.LIVE_EDGE_OFFSET)\n            : undefined,\n        },\n      });\n    } else if (attrName === Attributes.FULLSCREEN_ELEMENT) {\n      const el: HTMLElement = newValue\n        ? (this.getRootNode() as Document)?.getElementById(newValue)\n        : undefined;\n\n      // NOTE: Setting the internal private prop here instead of using the setter to not\n      // clear the attribute that was just set (CJP).\n      this.#fullscreenElement = el;\n      // Use the getter in case the fullscreen element was reset to \"`this`\"\n      this.#mediaStore?.dispatch({\n        type: 'fullscreenelementchangerequest',\n        detail: this.fullscreenElement,\n      });\n    }\n  }\n\n  connectedCallback(): void {\n    // NOTE: Need to defer default MediaStore creation until connected for use cases that\n    // rely on createElement('media-controller') (like many frameworks \"under the hood\") (CJP).\n    if (!this.#mediaStore && !this.hasAttribute(Attributes.NO_DEFAULT_STORE)) {\n      this.#setupDefaultStore();\n    }\n\n    this.#mediaStore?.dispatch({\n      type: 'documentelementchangerequest',\n      detail: document,\n    });\n\n    // mediaSetCallback() is called in super.connectedCallback();\n    super.connectedCallback();\n\n    if (this.#mediaStore && !this.#mediaStoreUnsubscribe) {\n      this.#mediaStoreUnsubscribe = this.#mediaStore?.subscribe(\n        this.#mediaStateCallback\n      );\n    }\n\n    this.enableHotkeys();\n  }\n\n  disconnectedCallback(): void {\n    // mediaUnsetCallback() is called in super.disconnectedCallback();\n    super.disconnectedCallback?.();\n\n    if (this.#mediaStore) {\n      this.#mediaStore?.dispatch({\n        type: 'documentelementchangerequest',\n        detail: undefined,\n      });\n      /** @TODO Revisit: may not be necessary anymore or better solved via unsubscribe behavior? (CJP) */\n      // Disable captions on disconnect to prevent a memory leak if they stay enabled.\n      this.#mediaStore?.dispatch({\n        type: MediaUIEvents.MEDIA_TOGGLE_SUBTITLES_REQUEST,\n        detail: false,\n      });\n    }\n\n    if (this.#mediaStoreUnsubscribe) {\n      this.#mediaStoreUnsubscribe?.();\n      this.#mediaStoreUnsubscribe = undefined;\n    }\n  }\n\n  /**\n   * @override\n   * @param {HTMLMediaElement} media\n   */\n  mediaSetCallback(media: HTMLMediaElement) {\n    super.mediaSetCallback(media);\n    this.#mediaStore?.dispatch({\n      type: 'mediaelementchangerequest',\n      detail: media,\n    });\n\n    // TODO: What does this do? At least add comment, maybe move to media-container\n    if (!media.hasAttribute('tabindex')) {\n      media.tabIndex = -1;\n    }\n  }\n\n  /**\n   * @override\n   * @param {HTMLMediaElement} media\n   */\n  mediaUnsetCallback(media: HTMLMediaElement) {\n    super.mediaUnsetCallback(media);\n    this.#mediaStore?.dispatch({\n      type: 'mediaelementchangerequest',\n      detail: undefined,\n    });\n  }\n\n  propagateMediaState(stateName: string, state: any) {\n    propagateMediaState(this.mediaStateReceivers, stateName, state);\n  }\n\n  associateElement(element: HTMLElement) {\n    if (!element) return;\n    const { associatedElementSubscriptions } = this;\n\n    if (associatedElementSubscriptions.has(element)) return;\n\n    const registerMediaStateReceiver =\n      this.registerMediaStateReceiver.bind(this);\n    const unregisterMediaStateReceiver =\n      this.unregisterMediaStateReceiver.bind(this);\n\n    /** @TODO Should we support \"removing association\" */\n    const unsubscribe = monitorForMediaStateReceivers(\n      element,\n      registerMediaStateReceiver,\n      unregisterMediaStateReceiver\n    );\n\n    // Add all media request event listeners to the Associated Element. This allows any DOM element that\n    // is a descendant of any Associated Element (including the <media-controller/> itself) to make requests\n    // for media state changes rather than constraining that exclusively to a Media State Receivers.\n    // Still generically setup events -> mediaStore dispatch, since it will\n    // forward the events on to whichever store is defined (CJP)\n    Object.values(MediaUIEvents).forEach((eventName) => {\n      element.addEventListener(eventName, this.#mediaStateEventHandler);\n    });\n\n    associatedElementSubscriptions.set(element, unsubscribe);\n  }\n\n  unassociateElement(element: HTMLElement) {\n    if (!element) return;\n    const { associatedElementSubscriptions } = this;\n    if (!associatedElementSubscriptions.has(element)) return;\n    const unsubscribe = associatedElementSubscriptions.get(element);\n    unsubscribe();\n    associatedElementSubscriptions.delete(element);\n\n    // Remove all media UI event listeners\n    Object.values(MediaUIEvents).forEach((eventName) => {\n      element.removeEventListener(eventName, this.#mediaStateEventHandler);\n    });\n  }\n\n  registerMediaStateReceiver(el: HTMLElement) {\n    if (!el) return;\n    const els = this.mediaStateReceivers;\n    const index = els.indexOf(el);\n    if (index > -1) return;\n\n    els.push(el);\n\n    if (this.#mediaStore) {\n      Object.entries(this.#mediaStore.getState()).forEach(\n        ([stateName, stateValue]) => {\n          propagateMediaState([el], stateName, stateValue);\n        }\n      );\n    }\n  }\n\n  unregisterMediaStateReceiver(el: HTMLElement) {\n    const els = this.mediaStateReceivers;\n\n    const index = els.indexOf(el);\n    if (index < 0) return;\n\n    els.splice(index, 1);\n  }\n\n  #keyUpHandler(e: KeyboardEvent) {\n    const { key } = e;\n    if (!ButtonPressedKeys.includes(key)) {\n      this.removeEventListener('keyup', this.#keyUpHandler);\n      return;\n    }\n\n    this.keyboardShortcutHandler(e);\n  }\n\n  #keyDownHandler(e: KeyboardEvent) {\n    const { metaKey, altKey, key } = e;\n    if (metaKey || altKey || !ButtonPressedKeys.includes(key)) {\n      this.removeEventListener('keyup', this.#keyUpHandler);\n      return;\n    }\n\n    // if the pressed key might move the page, we need to preventDefault on keydown\n    // because doing so on keyup is too late\n    // We also want to make sure that the hotkey hasn't been turned off before doing so\n    if (\n      [' ', 'ArrowLeft', 'ArrowRight'].includes(key) &&\n      !(\n        this.#hotKeys.contains(`no${key.toLowerCase()}`) ||\n        (key === ' ' && this.#hotKeys.contains('nospace'))\n      )\n    ) {\n      e.preventDefault();\n    }\n\n    this.addEventListener('keyup', this.#keyUpHandler, { once: true });\n  }\n\n  enableHotkeys() {\n    this.addEventListener('keydown', this.#keyDownHandler);\n  }\n\n  disableHotkeys() {\n    this.removeEventListener('keydown', this.#keyDownHandler);\n    this.removeEventListener('keyup', this.#keyUpHandler);\n  }\n\n  get hotkeys() {\n    return this.#hotKeys;\n  }\n\n  keyboardShortcutHandler(e: KeyboardEvent) {\n    // TODO: e.target might need to be replaced w/ e.composedPath to account for shadow DOM.\n    // if the event's key is already handled by the target, skip keyboard shortcuts\n    // keysUsed is either an attribute or a property.\n    // The attribute is a DOM array and the property is a JS array\n    // In the attribute Space represents the space key and gets convered to ' '\n    const target = e.target as any;\n    const keysUsed = (\n      target.getAttribute(Attributes.KEYS_USED)?.split(' ') ??\n      target?.keysUsed ??\n      []\n    )\n      .map((key) => (key === 'Space' ? ' ' : key))\n      .filter(Boolean);\n\n    if (keysUsed.includes(e.key)) {\n      return;\n    }\n\n    let eventName, detail, evt;\n    // if the blocklist contains the key, skip handling it.\n    if (this.#hotKeys.contains(`no${e.key.toLowerCase()}`)) return;\n    if (e.key === ' ' && this.#hotKeys.contains(`nospace`)) return;\n\n    // These event triggers were copied from the revelant buttons\n    switch (e.key) {\n      case ' ':\n      case 'k':\n        eventName = this.#mediaStore.getState().mediaPaused\n          ? MediaUIEvents.MEDIA_PLAY_REQUEST\n          : MediaUIEvents.MEDIA_PAUSE_REQUEST;\n        this.dispatchEvent(\n          new globalThis.CustomEvent(eventName, {\n            composed: true,\n            bubbles: true,\n          })\n        );\n        break;\n\n      case 'm':\n        eventName =\n          this.mediaStore.getState().mediaVolumeLevel === 'off'\n            ? MediaUIEvents.MEDIA_UNMUTE_REQUEST\n            : MediaUIEvents.MEDIA_MUTE_REQUEST;\n        this.dispatchEvent(\n          new globalThis.CustomEvent(eventName, {\n            composed: true,\n            bubbles: true,\n          })\n        );\n        break;\n\n      case 'f':\n        eventName = this.mediaStore.getState().mediaIsFullscreen\n          ? MediaUIEvents.MEDIA_EXIT_FULLSCREEN_REQUEST\n          : MediaUIEvents.MEDIA_ENTER_FULLSCREEN_REQUEST;\n        this.dispatchEvent(\n          new globalThis.CustomEvent(eventName, {\n            composed: true,\n            bubbles: true,\n          })\n        );\n        break;\n\n      case 'c':\n        this.dispatchEvent(\n          new globalThis.CustomEvent(\n            MediaUIEvents.MEDIA_TOGGLE_SUBTITLES_REQUEST,\n            { composed: true, bubbles: true }\n          )\n        );\n        break;\n\n      case 'ArrowLeft': {\n        const offsetValue = this.hasAttribute(\n          Attributes.KEYBOARD_BACKWARD_SEEK_OFFSET\n        )\n          ? +this.getAttribute(Attributes.KEYBOARD_BACKWARD_SEEK_OFFSET)\n          : DEFAULT_SEEK_OFFSET;\n        detail = Math.max(\n          (this.mediaStore.getState().mediaCurrentTime ?? 0) - offsetValue,\n          0\n        );\n        evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n          composed: true,\n          bubbles: true,\n          detail,\n        });\n        this.dispatchEvent(evt);\n        break;\n      }\n      case 'ArrowRight': {\n        const offsetValue = this.hasAttribute(\n          Attributes.KEYBOARD_FORWARD_SEEK_OFFSET\n        )\n          ? +this.getAttribute(Attributes.KEYBOARD_FORWARD_SEEK_OFFSET)\n          : DEFAULT_SEEK_OFFSET;\n        detail = Math.max(\n          (this.mediaStore.getState().mediaCurrentTime ?? 0) + offsetValue,\n          0\n        );\n        evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n          composed: true,\n          bubbles: true,\n          detail,\n        });\n        this.dispatchEvent(evt);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n}\n\nconst MEDIA_UI_ATTRIBUTE_NAMES = Object.values(MediaUIAttributes);\nconst MEDIA_UI_PROP_NAMES = Object.values(MediaUIProps);\n\nconst getMediaUIAttributesFrom = (child: HTMLElement): string[] => {\n  let { observedAttributes } = child.constructor as typeof CustomElement;\n\n  // observedAttributes are only available if the custom element was upgraded.\n  // example: media-gesture-receiver in the shadow DOM requires an upgrade.\n  if (!observedAttributes && child.nodeName?.includes('-')) {\n    globalThis.customElements.upgrade(child);\n    ({ observedAttributes } = child.constructor as typeof CustomElement);\n  }\n\n  const mediaChromeAttributesList = child\n    ?.getAttribute?.(MediaStateReceiverAttributes.MEDIA_CHROME_ATTRIBUTES)\n    ?.split?.(/\\s+/);\n  if (!Array.isArray(observedAttributes || mediaChromeAttributesList))\n    return [];\n  return (observedAttributes || mediaChromeAttributesList).filter((attrName) =>\n    MEDIA_UI_ATTRIBUTE_NAMES.includes(attrName)\n  );\n};\n\nconst hasMediaUIProps = (mediaStateReceiverCandidate: HTMLElement): boolean => {\n  if (\n    mediaStateReceiverCandidate.nodeName?.includes('-') &&\n    !!globalThis.customElements.get(\n      mediaStateReceiverCandidate.nodeName?.toLowerCase()\n    ) &&\n    !(\n      mediaStateReceiverCandidate instanceof\n      globalThis.customElements.get(\n        mediaStateReceiverCandidate.nodeName.toLowerCase()\n      )\n    )\n  ) {\n    globalThis.customElements.upgrade(mediaStateReceiverCandidate);\n  }\n  return MEDIA_UI_PROP_NAMES.some(\n    (propName) => propName in mediaStateReceiverCandidate\n  );\n};\n\nconst isMediaStateReceiver = (child: HTMLElement): boolean => {\n  return hasMediaUIProps(child) || !!getMediaUIAttributesFrom(child).length;\n};\n\nconst serializeTuple = (tuple: any[]): string | undefined => tuple?.join?.(':');\n\nconst CustomAttrSerializer: Record<string, (value: any) => string> = {\n  [MediaUIAttributes.MEDIA_SUBTITLES_LIST]: stringifyTextTrackList,\n  [MediaUIAttributes.MEDIA_SUBTITLES_SHOWING]: stringifyTextTrackList,\n  [MediaUIAttributes.MEDIA_SEEKABLE]: serializeTuple,\n  [MediaUIAttributes.MEDIA_BUFFERED]: (tuples: any[][]): string =>\n    tuples?.map(serializeTuple).join(' '),\n  [MediaUIAttributes.MEDIA_PREVIEW_COORDS]: (coords: number[]): string =>\n    coords?.join(' '),\n  [MediaUIAttributes.MEDIA_RENDITION_LIST]: stringifyRenditionList,\n  [MediaUIAttributes.MEDIA_AUDIO_TRACK_LIST]: stringifyAudioTrackList,\n};\n\nconst setAttr = async (\n  child: HTMLElement,\n  attrName: string,\n  attrValue: any\n): Promise<void> => {\n  // If the node is not connected to the DOM yet wait on macrotask. Fix for:\n  //   Uncaught DOMException: Failed to construct 'CustomElement':\n  //   The result must not have attributes\n  if (!child.isConnected) {\n    await delay(0);\n  }\n\n  // NOTE: For \"nullish\" (null/undefined), can use any setter\n  if (typeof attrValue === 'boolean' || attrValue == null) {\n    return setBooleanAttr(child, attrName, attrValue);\n  }\n  if (typeof attrValue === 'number') {\n    return setNumericAttr(child, attrName, attrValue);\n  }\n  if (typeof attrValue === 'string') {\n    return setStringAttr(child, attrName, attrValue);\n  }\n  // Treat empty arrays as \"nothing\" values\n  if (Array.isArray(attrValue) && !attrValue.length) {\n    return child.removeAttribute(attrName);\n  }\n\n  // For \"special\" values with custom serializers or all other values\n  const val = CustomAttrSerializer[attrName]?.(attrValue) ?? attrValue;\n  return child.setAttribute(attrName, val);\n};\n\nconst isMediaSlotElementDescendant = (el: HTMLElement): boolean =>\n  !!el.closest?.('*[slot=\"media\"]');\n\n/**\n *\n * @description This function will recursively check for any descendants (including the rootNode)\n * that are Media State Receivers and invoke `mediaStateReceiverCallback` with any Media State Receiver\n * found\n *\n * @param {HTMLElement} rootNode\n * @param {function} mediaStateReceiverCallback\n */\nconst traverseForMediaStateReceivers = (\n  rootNode: HTMLElement,\n  mediaStateReceiverCallback: (element: HTMLElement) => void\n): void => {\n  // We (currently) don't check if descendants of the `media` (e.g. <video/>) are Media State Receivers\n  // See also: `propagateMediaState`\n  if (isMediaSlotElementDescendant(rootNode)) {\n    return;\n  }\n\n  const traverseForMediaStateReceiversSync = (\n    rootNode: HTMLElement,\n    mediaStateReceiverCallback: (element: HTMLElement) => void\n  ): void => {\n    // The rootNode is itself a Media State Receiver\n    if (isMediaStateReceiver(rootNode)) {\n      mediaStateReceiverCallback(rootNode);\n    }\n\n    const { children = [] } = rootNode ?? {};\n    const shadowChildren = rootNode?.shadowRoot?.children ?? [];\n    const allChildren = [...children, ...shadowChildren];\n\n    // Traverse all children (including shadowRoot children) to see if they are/have Media State Receivers\n    allChildren.forEach((child) =>\n      traverseForMediaStateReceivers(\n        child as HTMLElement,\n        mediaStateReceiverCallback\n      )\n    );\n  };\n\n  // Custom Elements (and *only* Custom Elements) must have a hyphen (\"-\") in their name. So, if the rootNode is\n  // a custom element (aka has a hyphen in its name), wait until it's defined before attempting traversal to determine\n  // whether or not it or its descendants are Media State Receivers.\n  // IMPORTANT NOTE: We're intentionally *always* waiting for the `whenDefined()` Promise to resolve here\n  // (instead of using `globalThis.customElements.get(name)` to check if a custom element is already defined/registered)\n  // because we encountered some reliability issues with the custom element instances not being fully \"ready\", even if/when\n  // they are available in the registry via `globalThis.customElements.get(name)`.\n  const name = rootNode?.nodeName.toLowerCase();\n  if (name.includes('-') && !isMediaStateReceiver(rootNode)) {\n    globalThis.customElements.whenDefined(name).then(() => {\n      // Try/traverse again once the custom element is defined\n      traverseForMediaStateReceiversSync(rootNode, mediaStateReceiverCallback);\n    });\n    return;\n  }\n\n  traverseForMediaStateReceiversSync(rootNode, mediaStateReceiverCallback);\n};\n\nconst propagateMediaState = (\n  els: HTMLElement[],\n  stateName: string,\n  val: any\n): void => {\n  els.forEach((el) => {\n    if (stateName in el) {\n      el[stateName] = val;\n      return;\n    }\n    const relevantAttrs = getMediaUIAttributesFrom(el);\n    const attrName = stateName.toLowerCase();\n    if (!relevantAttrs.includes(attrName)) return;\n    setAttr(el, attrName, val);\n  });\n};\n\n/**\n *\n * @description This function will monitor the rootNode for any Media State Receiver descendants\n * that are already present, added, or removed, invoking the relevant callback function for each\n * case.\n *\n * @param {HTMLElement} rootNode\n * @param {function} registerMediaStateReceiver\n * @param {function} unregisterMediaStateReceiver\n * @returns An unsubscribe method, used to stop monitoring descendants of rootNode and to unregister its descendants\n *\n */\nconst monitorForMediaStateReceivers = (\n  rootNode: HTMLElement,\n  registerMediaStateReceiver: (el: HTMLElement) => void,\n  unregisterMediaStateReceiver: (el: HTMLElement) => void\n): (() => void) => {\n  // First traverse the tree to register any current Media State Receivers\n  traverseForMediaStateReceivers(rootNode, registerMediaStateReceiver);\n\n  // Monitor for any event-based requests from descendants to register/unregister as a Media State Receiver\n  const registerMediaStateReceiverHandler = (evt: Event) => {\n    const el = evt?.composedPath()[0] ?? evt.target;\n    registerMediaStateReceiver(el as HTMLElement);\n  };\n\n  const unregisterMediaStateReceiverHandler = (evt: Event) => {\n    const el = evt?.composedPath()[0] ?? evt.target;\n    unregisterMediaStateReceiver(el as HTMLElement);\n  };\n\n  rootNode.addEventListener(\n    MediaUIEvents.REGISTER_MEDIA_STATE_RECEIVER,\n    registerMediaStateReceiverHandler\n  );\n  rootNode.addEventListener(\n    MediaUIEvents.UNREGISTER_MEDIA_STATE_RECEIVER,\n    unregisterMediaStateReceiverHandler\n  );\n\n  // Observe any changes to the DOM for any descendants that are identifiable as Media State Receivers\n  // and register or unregister them, depending on the change that occurred.\n  const mutationCallback = (mutationsList: MutationRecord[]) => {\n    mutationsList.forEach((mutationRecord) => {\n      const {\n        addedNodes = [],\n        removedNodes = [],\n        type,\n        target,\n        attributeName,\n      } = mutationRecord;\n      if (type === 'childList') {\n        // For each added node, register any Media State Receiver descendants (including itself)\n        Array.prototype.forEach.call(addedNodes, (node) =>\n          traverseForMediaStateReceivers(\n            node as HTMLElement,\n            registerMediaStateReceiver\n          )\n        );\n        // For each removed node, unregister any Media State Receiver descendants (including itself)\n        Array.prototype.forEach.call(removedNodes, (node) =>\n          traverseForMediaStateReceivers(\n            node as HTMLElement,\n            unregisterMediaStateReceiver\n          )\n        );\n      } else if (\n        type === 'attributes' &&\n        attributeName === MediaStateReceiverAttributes.MEDIA_CHROME_ATTRIBUTES\n      ) {\n        if (isMediaStateReceiver(target as HTMLElement)) {\n          // Changed from a \"non-Media State Receiver\" to a Media State Receiver: register it.\n          registerMediaStateReceiver(target as HTMLElement);\n        } else {\n          // Changed from a Media State Receiver to a \"non-Media State Receiver\": unregister it.\n          unregisterMediaStateReceiver(target as HTMLElement);\n        }\n      }\n    });\n  };\n\n  // Storing prevSlotted elements so we can cleanup if slotted elements change over time.\n  let prevSlotted: HTMLElement[] = [];\n  const slotChangeHandler = (event: Event) => {\n    const slotEl = event.target as HTMLSlotElement;\n    if (slotEl.name === 'media') return;\n    prevSlotted.forEach((node) =>\n      traverseForMediaStateReceivers(node, unregisterMediaStateReceiver)\n    );\n    prevSlotted = [\n      ...slotEl.assignedElements({ flatten: true }),\n    ] as HTMLElement[];\n    prevSlotted.forEach((node) =>\n      traverseForMediaStateReceivers(node, registerMediaStateReceiver)\n    );\n  };\n  rootNode.addEventListener('slotchange', slotChangeHandler);\n\n  const observer = new MutationObserver(mutationCallback);\n  observer.observe(rootNode, {\n    childList: true,\n    attributes: true,\n    subtree: true,\n  });\n\n  const unsubscribe = () => {\n    // Unregister any Media State Receiver descendants (including ourselves)\n    traverseForMediaStateReceivers(rootNode, unregisterMediaStateReceiver);\n    // Make sure we remove the slotchange event listener\n    rootNode.removeEventListener('slotchange', slotChangeHandler);\n    // Stop observing for Media State Receivers\n    observer.disconnect();\n    // Stop listening for Media State Receiver events.\n    rootNode.removeEventListener(\n      MediaUIEvents.REGISTER_MEDIA_STATE_RECEIVER,\n      registerMediaStateReceiverHandler\n    );\n    rootNode.removeEventListener(\n      MediaUIEvents.UNREGISTER_MEDIA_STATE_RECEIVER,\n      unregisterMediaStateReceiverHandler\n    );\n  };\n\n  return unsubscribe;\n};\n\nif (!globalThis.customElements.get('media-controller')) {\n  globalThis.customElements.define('media-controller', MediaController);\n}\n\nexport { MediaController };\nexport default MediaController;\n", "import { MediaStateReceiverAttributes } from './constants.js';\nimport MediaTooltip, { TooltipPlacement } from './media-tooltip.js';\nimport {\n  getOrInsertCSSRule,\n  getStringAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\n\nconst Attributes = {\n  TOOLTIP_PLACEMENT: 'tooltipplacement',\n};\n\nconst template = document.createElement('template');\ntemplate.innerHTML = /*html*/ `\n<style>\n  :host {\n    position: relative;\n    font: var(--media-font,\n      var(--media-font-weight, bold)\n      var(--media-font-size, 14px) /\n      var(--media-text-content-height, var(--media-control-height, 24px))\n      var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));\n    color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));\n    background: var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)));\n    padding: var(--media-button-padding, var(--media-control-padding, 10px));\n    justify-content: var(--media-button-justify-content, center);\n    display: inline-flex;\n    align-items: center;\n    vertical-align: middle;\n    box-sizing: border-box;\n    transition: background .15s linear;\n    pointer-events: auto;\n    cursor: pointer;\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  ${\n    /*\n    Only show outline when keyboard focusing.\n    https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo\n  */ ''\n  }\n  :host(:focus-visible) {\n    box-shadow: inset 0 0 0 2px rgb(27 127 204 / .9);\n    outline: 0;\n  }\n  ${\n    /*\n     * hide default focus ring, particularly when using mouse\n     */ ''\n  }\n  :host(:where(:focus)) {\n    box-shadow: none;\n    outline: 0;\n  }\n\n  :host(:hover) {\n    background: var(--media-control-hover-background, rgba(50 50 70 / .7));\n  }\n\n  svg, img, ::slotted(svg), ::slotted(img) {\n    width: var(--media-button-icon-width);\n    height: var(--media-button-icon-height, var(--media-control-height, 24px));\n    transform: var(--media-button-icon-transform);\n    transition: var(--media-button-icon-transition);\n    fill: var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)));\n    vertical-align: middle;\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n  }\n\n  media-tooltip {\n    ${/** Make sure unpositioned tooltip doesn't cause page overflow (scroll). */ ''}\n    max-width: 0;\n    overflow-x: clip;\n    opacity: 0;\n    transition: opacity .3s, max-width 0s 9s;\n  }\n\n  :host(:hover) media-tooltip,\n  :host(:focus-visible) media-tooltip {\n    max-width: 100vw;\n    opacity: 1;\n    transition: opacity .3s;\n  }\n\n  :host([notooltip]) slot[name=\"tooltip\"] {\n    display: none;\n  }\n</style>\n\n<slot name=\"tooltip\">\n  <media-tooltip part=\"tooltip\" aria-hidden=\"true\">\n    <slot name=\"tooltip-content\"></slot>\n  </media-tooltip>\n</slot>\n`;\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {boolean} disabled - The Boolean disabled attribute makes the element not mutable or focusable.\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n * @attr {('top'|'right'|'bottom'|'left'|'none')} tooltipplacement - The placement of the tooltip, defaults to \"top\"\n * @attr {boolean} notooltip - Hides the tooltip if this attribute is present\n *\n * @cssproperty --media-primary-color - Default color of text and icon.\n * @cssproperty --media-secondary-color - Default color of button background.\n * @cssproperty --media-text-color - `color` of button text.\n * @cssproperty --media-icon-color - `fill` color of button icon.\n *\n * @cssproperty --media-control-display - `display` property of control.\n * @cssproperty --media-control-background - `background` of control.\n * @cssproperty --media-control-hover-background - `background` of control hover state.\n * @cssproperty --media-control-padding - `padding` of control.\n * @cssproperty --media-control-height - `line-height` of control.\n *\n * @cssproperty --media-font - `font` shorthand property.\n * @cssproperty --media-font-weight - `font-weight` property.\n * @cssproperty --media-font-family - `font-family` property.\n * @cssproperty --media-font-size - `font-size` property.\n * @cssproperty --media-text-content-height - `line-height` of button text.\n *\n * @cssproperty --media-button-icon-width - `width` of button icon.\n * @cssproperty --media-button-icon-height - `height` of button icon.\n * @cssproperty --media-button-icon-transform - `transform` of button icon.\n * @cssproperty --media-button-icon-transition - `transition` of button icon.\n */\nclass MediaChromeButton extends globalThis.HTMLElement {\n  #mediaController;\n  preventClick = false;\n  nativeEl: DocumentFragment;\n  tooltipEl: MediaTooltip = null;\n  tooltipContent: string = '';\n\n  static get observedAttributes() {\n    return [\n      'disabled',\n      Attributes.TOOLTIP_PLACEMENT,\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER,\n    ];\n  }\n\n  constructor(\n    options: Partial<{\n      slotTemplate: HTMLTemplateElement;\n      defaultContent: string;\n      tooltipContent: string;\n    }> = {}\n  ) {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n\n      const buttonHTML = template.content.cloneNode(true) as DocumentFragment;\n      this.nativeEl = buttonHTML;\n\n      // Slots\n      let slotTemplate = options.slotTemplate;\n\n      if (!slotTemplate) {\n        slotTemplate = document.createElement('template');\n        slotTemplate.innerHTML = `<slot>${options.defaultContent || ''}</slot>`;\n      }\n\n      if (options.tooltipContent) {\n        buttonHTML.querySelector('slot[name=\"tooltip-content\"]').innerHTML =\n          options.tooltipContent ?? '';\n        this.tooltipContent = options.tooltipContent;\n      }\n\n      this.nativeEl.appendChild(slotTemplate.content.cloneNode(true));\n\n      this.shadowRoot.appendChild(buttonHTML);\n    }\n\n    this.tooltipEl = this.shadowRoot.querySelector('media-tooltip');\n  }\n\n  #clickListener = (e) => {\n    if (!this.preventClick) {\n      this.handleClick(e);\n    }\n\n    // Timeout needed to wait for a new \"tick\" of event loop otherwise\n    // measured position does not take into account the new tooltip content\n    setTimeout(this.#positionTooltip, 0);\n  };\n\n  #positionTooltip = () => {\n    // Conditional chaining accounts for scenarios\n    // where the tooltip element isn't yet defined.\n    this.tooltipEl?.updateXOffset?.();\n  }\n\n  // NOTE: There are definitely some \"false positive\" cases with multi-key pressing,\n  // but this should be good enough for most use cases.\n  #keyupListener = (e) => {\n    const { key } = e;\n    if (!this.keysUsed.includes(key)) {\n      this.removeEventListener('keyup', this.#keyupListener);\n      return;\n    }\n\n    if (!this.preventClick) {\n      this.handleClick(e);\n    }\n  };\n\n  #keydownListener = (e) => {\n    const { metaKey, altKey, key } = e;\n    if (metaKey || altKey || !this.keysUsed.includes(key)) {\n      this.removeEventListener('keyup', this.#keyupListener);\n      return;\n    }\n    this.addEventListener('keyup', this.#keyupListener, { once: true });\n  };\n\n  enable() {\n    this.addEventListener('click', this.#clickListener);\n    this.addEventListener('keydown', this.#keydownListener);\n    this.tabIndex = 0;\n  }\n\n  disable() {\n    this.removeEventListener('click', this.#clickListener);\n    this.removeEventListener('keydown', this.#keydownListener);\n    this.removeEventListener('keyup', this.#keyupListener);\n    this.tabIndex = -1;\n  }\n\n  attributeChangedCallback(attrName, oldValue, newValue) {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue && this.isConnected) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    } else if (attrName === 'disabled' && newValue !== oldValue) {\n      if (newValue == null) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    } else if (\n      attrName === Attributes.TOOLTIP_PLACEMENT &&\n      this.tooltipEl &&\n      newValue !== oldValue\n    ) {\n      this.tooltipEl.placement = newValue;\n    }\n\n    // The tooltips label, and subsequently it's size and position, are a function\n    // of the buttons state, so we greedily assume we need account for any form\n    // of state change by reacting to all attribute changes, even if sometimes the\n    // update might be redundant\n    this.#positionTooltip();\n  }\n\n  connectedCallback() {\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    style.setProperty(\n      'display',\n      `var(--media-control-display, var(--${this.localName}-display, inline-flex))`\n    );\n\n    if (!this.hasAttribute('disabled')) {\n      this.enable();\n    }\n\n    this.setAttribute('role', 'button');\n\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      this.#mediaController =\n        // @ts-ignore\n        this.getRootNode()?.getElementById(mediaControllerId);\n      this.#mediaController?.associateElement?.(this);\n    }\n\n    globalThis.customElements\n      .whenDefined('media-tooltip')\n      .then(() => this.#setupTooltip());\n  }\n\n  // Called when we know the tooltip is ready / defined\n  #setupTooltip() {\n    this.addEventListener('mouseenter', this.#positionTooltip);\n    this.addEventListener('focus', this.#positionTooltip);\n    this.addEventListener('click', this.#clickListener);\n\n    const initialPlacement = this.tooltipPlacement;\n    if (initialPlacement && this.tooltipEl) {\n      this.tooltipEl.placement = initialPlacement;\n    }\n  }\n\n  disconnectedCallback() {\n    this.disable();\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n\n    this.removeEventListener('mouseenter', this.#positionTooltip);\n    this.removeEventListener('focus', this.#positionTooltip);\n    this.removeEventListener('click', this.#clickListener);\n  }\n\n  get keysUsed() {\n    return ['Enter', ' '];\n  }\n\n  /**\n   * Get or set tooltip placement\n   */\n  get tooltipPlacement(): TooltipPlacement | undefined {\n    return getStringAttr(this, Attributes.TOOLTIP_PLACEMENT);\n  }\n\n  set tooltipPlacement(value: TooltipPlacement | undefined) {\n    setStringAttr(this, Attributes.TOOLTIP_PLACEMENT, value);\n  }\n\n  /**\n   * @abstract\n   * @argument {Event} e\n   */\n  handleClick(e) {} // eslint-disable-line\n}\n\nif (!globalThis.customElements.get('media-chrome-button')) {\n  globalThis.customElements.define('media-chrome-button', MediaChromeButton);\n}\n\nexport { MediaChromeButton };\nexport default MediaChromeButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { tooltipLabels, verbs } from './labels/labels.js';\nimport {\n  getStringAttr,\n  setStringAttr,\n  getBooleanAttr,\n  setBooleanAttr,\n} from './utils/element-utils.js';\n\nconst airplayIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M22.13 3H3.87a.87.87 0 0 0-.87.87v13.26a.87.87 0 0 0 .87.87h3.4L9 16H5V5h16v11h-4l1.72 2h3.4a.87.87 0 0 0 .87-.87V3.87a.87.87 0 0 0-.86-.87Zm-8.75 11.44a.5.5 0 0 0-.76 0l-4.91 5.73a.5.5 0 0 0 .38.83h9.82a.501.501 0 0 0 .38-.83l-4.91-5.73Z\"/>\n</svg>\n`;\n\nconst slotTemplate: HTMLTemplateElement = document.createElement('template');\nslotTemplate.innerHTML = /*html*/ `\n  <style>\n    :host([${\n      MediaUIAttributes.MEDIA_IS_AIRPLAYING\n    }]) slot[name=icon] slot:not([name=exit]) {\n      display: none !important;\n    }\n\n    ${/* Double negative, but safer if display doesn't equal 'block' */ ''}\n    :host(:not([${\n      MediaUIAttributes.MEDIA_IS_AIRPLAYING\n    }])) slot[name=icon] slot:not([name=enter]) {\n      display: none !important;\n    }\n\n    :host([${MediaUIAttributes.MEDIA_IS_AIRPLAYING}]) slot[name=tooltip-enter],\n    :host(:not([${\n      MediaUIAttributes.MEDIA_IS_AIRPLAYING\n    }])) slot[name=tooltip-exit] {\n      display: none;\n    }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"enter\">${airplayIcon}</slot>\n    <slot name=\"exit\">${airplayIcon}</slot>\n  </slot>\n`;\n\nconst tooltipContent = /*html*/ `\n  <slot name=\"tooltip-enter\">${tooltipLabels.ENTER_AIRPLAY}</slot>\n  <slot name=\"tooltip-exit\">${tooltipLabels.EXIT_AIRPLAY}</slot>\n`;\n\nconst updateAriaLabel = (el: MediaAirplayButton): void => {\n  const label = el.mediaIsAirplaying\n    ? verbs.EXIT_AIRPLAY()\n    : verbs.ENTER_AIRPLAY();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot enter - An element shown when the media is not in AirPlay mode and pressing the button will open the AirPlay menu.\n * @slot exit - An element shown when the media is in AirPlay mode and pressing the button will open the AirPlay menu.\n * @slot icon - The element shown for the AirPlay button\u2019s display.\n *\n * @attr {(unavailable|unsupported)} mediaairplayunavailable - (read-only) Set if AirPlay is unavailable.\n * @attr {boolean} mediaisairplaying - (read-only) Present if the media is airplaying.\n *\n * @cssproperty [--media-airplay-button-display = inline-flex] - `display` property of button.\n *\n * @event {CustomEvent} mediaairplayrequest\n */\nclass MediaAirplayButton extends MediaChromeButton {\n  static get observedAttributes(): string[] {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_IS_AIRPLAYING,\n      MediaUIAttributes.MEDIA_AIRPLAY_UNAVAILABLE,\n    ];\n  }\n\n  constructor(options: { slotTemplate?: HTMLTemplateElement } = {}) {\n    super({ slotTemplate, tooltipContent, ...options });\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    updateAriaLabel(this);\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === MediaUIAttributes.MEDIA_IS_AIRPLAYING) {\n      updateAriaLabel(this);\n    }\n  }\n\n  /**\n   * Are we currently airplaying\n   */\n  get mediaIsAirplaying(): boolean {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_AIRPLAYING);\n  }\n\n  set mediaIsAirplaying(value: boolean) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_AIRPLAYING, value);\n  }\n\n  /**\n   * Airplay unavailability state\n   */\n  get mediaAirplayUnavailable(): string | undefined {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_AIRPLAY_UNAVAILABLE);\n  }\n\n  set mediaAirplayUnavailable(value: string | undefined) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_AIRPLAY_UNAVAILABLE, value);\n  }\n\n  handleClick(): void {\n    const evt = new globalThis.CustomEvent(\n      MediaUIEvents.MEDIA_AIRPLAY_REQUEST,\n      {\n        composed: true,\n        bubbles: true,\n      }\n    );\n    this.dispatchEvent(evt);\n  }\n}\n\nif (!globalThis.customElements.get('media-airplay-button')) {\n  globalThis.customElements.define('media-airplay-button', MediaAirplayButton);\n}\n\nexport default MediaAirplayButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIAttributes, MediaUIEvents } from './constants.js';\nimport { nouns, tooltipLabels } from './labels/labels.js';\nimport {\n  areSubsOn,\n  parseTextTracksStr,\n  stringifyTextTrackList,\n} from './utils/captions.js';\nimport { TextTrackLike } from './utils/TextTrackLike.js';\n\nconst ccIconOn = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M22.83 5.68a2.58 2.58 0 0 0-2.3-2.5c-3.62-.24-11.44-.24-15.06 0a2.58 2.58 0 0 0-2.3 2.5c-.23 4.21-.23 8.43 0 12.64a2.58 2.58 0 0 0 2.3 2.5c3.62.24 11.44.24 15.06 0a2.58 2.58 0 0 0 2.3-2.5c.23-4.21.23-8.43 0-12.64Zm-11.39 9.45a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.92 3.92 0 0 1 .92-2.77 3.18 3.18 0 0 1 2.43-1 2.94 2.94 0 0 1 2.13.78c.364.359.62.813.74 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.17 1.61 1.61 0 0 0-1.29.58 2.79 2.79 0 0 0-.5 1.89 3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.48 1.48 0 0 0 1-.37 2.1 2.1 0 0 0 .59-1.14l1.4.44a3.23 3.23 0 0 1-1.07 1.69Zm7.22 0a3.07 3.07 0 0 1-1.91.57 3.06 3.06 0 0 1-2.34-1 3.75 3.75 0 0 1-.92-2.67 3.88 3.88 0 0 1 .93-2.77 3.14 3.14 0 0 1 2.42-1 3 3 0 0 1 2.16.82 2.8 2.8 0 0 1 .73 1.31l-1.43.35a1.49 1.49 0 0 0-1.51-1.21 1.61 1.61 0 0 0-1.29.58A2.79 2.79 0 0 0 15 12a3 3 0 0 0 .49 1.93 1.61 1.61 0 0 0 1.27.58 1.44 1.44 0 0 0 1-.37 2.1 2.1 0 0 0 .6-1.15l1.4.44a3.17 3.17 0 0 1-1.1 1.7Z\"/>\n</svg>`;\n\nconst ccIconOff = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M17.73 14.09a1.4 1.4 0 0 1-1 .37 1.579 1.579 0 0 1-1.27-.58A3 3 0 0 1 15 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34A2.89 2.89 0 0 0 19 9.07a3 3 0 0 0-2.14-.78 3.14 3.14 0 0 0-2.42 1 3.91 3.91 0 0 0-.93 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.17 3.17 0 0 0 1.07-1.74l-1.4-.45c-.083.43-.3.822-.62 1.12Zm-7.22 0a1.43 1.43 0 0 1-1 .37 1.58 1.58 0 0 1-1.27-.58A3 3 0 0 1 7.76 12a2.8 2.8 0 0 1 .5-1.85 1.63 1.63 0 0 1 1.29-.57 1.47 1.47 0 0 1 1.51 1.2l1.43-.34a2.81 2.81 0 0 0-.74-1.32 2.94 2.94 0 0 0-2.13-.78 3.18 3.18 0 0 0-2.43 1 4 4 0 0 0-.92 2.78 3.74 3.74 0 0 0 .92 2.66 3.07 3.07 0 0 0 2.34 1 3.07 3.07 0 0 0 1.91-.57 3.23 3.23 0 0 0 1.07-1.74l-1.4-.45a2.06 2.06 0 0 1-.6 1.07Zm12.32-8.41a2.59 2.59 0 0 0-2.3-2.51C18.72 3.05 15.86 3 13 3c-2.86 0-5.72.05-7.53.17a2.59 2.59 0 0 0-2.3 2.51c-.23 4.207-.23 8.423 0 12.63a2.57 2.57 0 0 0 2.3 2.5c1.81.13 4.67.19 7.53.19 2.86 0 5.72-.06 7.53-.19a2.57 2.57 0 0 0 2.3-2.5c.23-4.207.23-8.423 0-12.63Zm-1.49 12.53a1.11 1.11 0 0 1-.91 1.11c-1.67.11-4.45.18-7.43.18-2.98 0-5.76-.07-7.43-.18a1.11 1.11 0 0 1-.91-1.11c-.21-4.14-.21-8.29 0-12.43a1.11 1.11 0 0 1 .91-1.11C7.24 4.56 10 4.49 13 4.49s5.76.07 7.43.18a1.11 1.11 0 0 1 .91 1.11c.21 4.14.21 8.29 0 12.43Z\"/>\n</svg>`;\n\nconst slotTemplate: HTMLTemplateElement = document.createElement('template');\nslotTemplate.innerHTML = /*html*/ `\n  <style>\n    :host([aria-checked=\"true\"]) slot[name=off] {\n      display: none !important;\n    }\n\n    ${/* Double negative, but safer if display doesn't equal 'block' */ ''}\n    :host(:not([aria-checked=\"true\"])) slot[name=on] {\n      display: none !important;\n    }\n\n    :host([aria-checked=\"true\"]) slot[name=tooltip-enable],\n    :host(:not([aria-checked=\"true\"])) slot[name=tooltip-disable] {\n      display: none;\n    }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"on\">${ccIconOn}</slot>\n    <slot name=\"off\">${ccIconOff}</slot>\n  </slot>\n`;\n\nconst tooltipContent = /*html*/ `\n  <slot name=\"tooltip-enable\">${tooltipLabels.ENABLE_CAPTIONS}</slot>\n  <slot name=\"tooltip-disable\">${tooltipLabels.DISABLE_CAPTIONS}</slot>\n`;\n\nconst updateAriaChecked = (el: HTMLElement) => {\n  el.setAttribute('aria-checked', areSubsOn(el).toString());\n};\n\n/**\n * @slot on - An element that will be shown while closed captions or subtitles are on.\n * @slot off - An element that will be shown while closed captions or subtitles are off.\n * @slot icon - An element for representing on and off states in a single icon\n *\n * @attr {string} mediasubtitleslist - (read-only) A list of all subtitles and captions.\n * @attr {string} mediasubtitlesshowing - (read-only) A list of the showing subtitles and captions.\n *\n * @cssproperty [--media-captions-button-display = inline-flex] - `display` property of button.\n */\nclass MediaCaptionsButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_SUBTITLES_LIST,\n      MediaUIAttributes.MEDIA_SUBTITLES_SHOWING,\n    ];\n  }\n\n  private _captionsReady: boolean;\n\n  constructor(options: any = {}) {\n    super({ slotTemplate, tooltipContent, ...options });\n    // Internal variable to keep track of when we have some or no captions (or subtitles, if using subtitles fallback)\n    // Used for `default-showing` behavior.\n    this._captionsReady = false;\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.setAttribute('role', 'switch');\n    this.setAttribute('aria-label', nouns.CLOSED_CAPTIONS());\n    updateAriaChecked(this);\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string,\n    newValue: string\n  ) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === MediaUIAttributes.MEDIA_SUBTITLES_SHOWING) {\n      updateAriaChecked(this);\n    }\n  }\n\n  /**\n   * An array of TextTrack-like objects.\n   * Objects must have the properties: kind, language, and label.\n   */\n  get mediaSubtitlesList(): TextTrackLike[] {\n    return getSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_LIST);\n  }\n\n  set mediaSubtitlesList(list: TextTrackLike[]) {\n    setSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_LIST, list);\n  }\n\n  /**\n   * An array of TextTrack-like objects.\n   * Objects must have the properties: kind, language, and label.\n   */\n  get mediaSubtitlesShowing(): TextTrackLike[] {\n    return getSubtitlesListAttr(\n      this,\n      MediaUIAttributes.MEDIA_SUBTITLES_SHOWING\n    );\n  }\n\n  set mediaSubtitlesShowing(list: TextTrackLike[]) {\n    setSubtitlesListAttr(this, MediaUIAttributes.MEDIA_SUBTITLES_SHOWING, list);\n  }\n\n  handleClick() {\n    this.dispatchEvent(\n      new globalThis.CustomEvent(MediaUIEvents.MEDIA_TOGGLE_SUBTITLES_REQUEST, {\n        composed: true,\n        bubbles: true,\n      })\n    );\n  }\n}\n\n/**\n * @param el - Should be HTMLElement but issues with globalThis shim\n * @param attrName - The attribute name to get\n * @returns An array of TextTrack-like objects.\n */\nconst getSubtitlesListAttr = (\n  el: HTMLElement,\n  attrName: string\n): TextTrackLike[] => {\n  const attrVal = el.getAttribute(attrName);\n  return attrVal ? parseTextTracksStr(attrVal) : [];\n};\n\n/**\n *\n * @param el - Should be HTMLElement but issues with globalThis shim\n * @param attrName - The attribute name to set\n * @param list - An array of TextTrack-like objects\n */\nconst setSubtitlesListAttr = (\n  el: HTMLElement,\n  attrName: string,\n  list: TextTrackLike[]\n) => {\n  // null, undefined, and empty arrays are treated as \"no value\" here\n  if (!list?.length) {\n    el.removeAttribute(attrName);\n    return;\n  }\n\n  // don't set if the new value is the same as existing\n  const newValStr = stringifyTextTrackList(list);\n  const oldVal = el.getAttribute(attrName);\n  if (oldVal === newValStr) return;\n\n  el.setAttribute(attrName, newValStr);\n};\n\nif (!globalThis.customElements.get('media-captions-button')) {\n  globalThis.customElements.define(\n    'media-captions-button',\n    MediaCaptionsButton\n  );\n}\n\nexport { MediaCaptionsButton };\nexport default MediaCaptionsButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { tooltipLabels, verbs } from './labels/labels.js';\nimport {\n  getBooleanAttr,\n  setBooleanAttr,\n  getStringAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst enterIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\"><g><path class=\"cast_caf_icon_arch0\" d=\"M1,18 L1,21 L4,21 C4,19.3 2.66,18 1,18 L1,18 Z\"/><path class=\"cast_caf_icon_arch1\" d=\"M1,14 L1,16 C3.76,16 6,18.2 6,21 L8,21 C8,17.13 4.87,14 1,14 L1,14 Z\"/><path class=\"cast_caf_icon_arch2\" d=\"M1,10 L1,12 C5.97,12 10,16.0 10,21 L12,21 C12,14.92 7.07,10 1,10 L1,10 Z\"/><path class=\"cast_caf_icon_box\" d=\"M21,3 L3,3 C1.9,3 1,3.9 1,5 L1,8 L3,8 L3,5 L21,5 L21,19 L14,19 L14,21 L21,21 C22.1,21 23,20.1 23,19 L23,5 C23,3.9 22.1,3 21,3 L21,3 Z\"/></g></svg>`;\n\nconst exitIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\"><g><path class=\"cast_caf_icon_arch0\" d=\"M1,18 L1,21 L4,21 C4,19.3 2.66,18 1,18 L1,18 Z\"/><path class=\"cast_caf_icon_arch1\" d=\"M1,14 L1,16 C3.76,16 6,18.2 6,21 L8,21 C8,17.13 4.87,14 1,14 L1,14 Z\"/><path class=\"cast_caf_icon_arch2\" d=\"M1,10 L1,12 C5.97,12 10,16.0 10,21 L12,21 C12,14.92 7.07,10 1,10 L1,10 Z\"/><path class=\"cast_caf_icon_box\" d=\"M21,3 L3,3 C1.9,3 1,3.9 1,5 L1,8 L3,8 L3,5 L21,5 L21,19 L14,19 L14,21 L21,21 C22.1,21 23,20.1 23,19 L23,5 C23,3.9 22.1,3 21,3 L21,3 Z\"/><path class=\"cast_caf_icon_boxfill\" d=\"M5,7 L5,8.63 C8,8.6 13.37,14 13.37,17 L19,17 L19,7 Z\"/></g></svg>`;\n\nconst slotTemplate: HTMLTemplateElement = document.createElement('template');\nslotTemplate.innerHTML = /*html*/ `\n  <style>\n  :host([${\n    MediaUIAttributes.MEDIA_IS_CASTING\n  }]) slot[name=icon] slot:not([name=exit]) {\n    display: none !important;\n  }\n\n  ${/* Double negative, but safer if display doesn't equal 'block' */ ''}\n  :host(:not([${\n    MediaUIAttributes.MEDIA_IS_CASTING\n  }])) slot[name=icon] slot:not([name=enter]) {\n    display: none !important;\n  }\n\n  :host([${MediaUIAttributes.MEDIA_IS_CASTING}]) slot[name=tooltip-enter],\n    :host(:not([${\n      MediaUIAttributes.MEDIA_IS_CASTING\n    }])) slot[name=tooltip-exit] {\n      display: none;\n    }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"enter\">${enterIcon}</slot>\n    <slot name=\"exit\">${exitIcon}</slot>\n  </slot>\n`;\n\nconst tooltipContent = /*html*/ `\n  <slot name=\"tooltip-enter\">${tooltipLabels.START_CAST}</slot>\n  <slot name=\"tooltip-exit\">${tooltipLabels.STOP_CAST}</slot>\n`;\n\nconst updateAriaLabel = (el: MediaCastButton) => {\n  const label = el.mediaIsCasting ? verbs.EXIT_CAST() : verbs.ENTER_CAST();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot enter - An element shown when the media is not in casting mode and pressing the button will open the Cast menu.\n * @slot exit - An element shown when the media is in casting mode and pressing the button will open the Cast menu.\n * @slot icon - An element for representing enter and exit states in a single icon\n *\n * @attr {(unavailable|unsupported)} mediacastunavailable - (read-only) Set if casting is unavailable.\n * @attr {boolean} mediaiscasting - (read-only) Present if the media is casting.\n *\n * @cssproperty [--media-cast-button-display = inline-flex] - `display` property of button.\n */\nclass MediaCastButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_IS_CASTING,\n      MediaUIAttributes.MEDIA_CAST_UNAVAILABLE,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, tooltipContent, ...options });\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    updateAriaLabel(this);\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ) {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === MediaUIAttributes.MEDIA_IS_CASTING) {\n      updateAriaLabel(this);\n    }\n  }\n\n  /**\n   * @type {boolean} Are we currently casting\n   */\n  get mediaIsCasting(): boolean {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_CASTING);\n  }\n\n  set mediaIsCasting(value: boolean) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_CASTING, value);\n  }\n\n  /**\n   * @type {string | undefined} Cast unavailability state\n   */\n  get mediaCastUnavailable(): string | undefined {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_CAST_UNAVAILABLE);\n  }\n\n  set mediaCastUnavailable(value: string | undefined) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_CAST_UNAVAILABLE, value);\n  }\n\n  handleClick() {\n    const eventName = this.mediaIsCasting\n      ? MediaUIEvents.MEDIA_EXIT_CAST_REQUEST\n      : MediaUIEvents.MEDIA_ENTER_CAST_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-cast-button')) {\n  globalThis.customElements.define('media-cast-button', MediaCastButton);\n}\n\nexport default MediaCastButton;\n", "import { globalThis, document } from './utils/server-safe-globals.js';\nimport {\n  containsComposedNode,\n  getActiveElement,\n} from './utils/element-utils.js';\nimport { InvokeEvent } from './utils/events.js';\n\nconst template: HTMLTemplateElement = document.createElement('template');\ntemplate.innerHTML = /*html*/ `\n  <style>\n    :host {\n      font: var(--media-font,\n        var(--media-font-weight, normal)\n        var(--media-font-size, 14px) /\n        var(--media-text-content-height, var(--media-control-height, 24px))\n        var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));\n      color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));\n      background: var(--media-dialog-background, var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .8))));\n      border-radius: var(--media-dialog-border-radius);\n      border: var(--media-dialog-border, none);\n      display: var(--media-dialog-display, inline-flex);\n      transition: var(--media-dialog-transition-in,\n        visibility 0s,\n        opacity .2s ease-out,\n        transform .15s ease-out\n      ) !important;\n      ${/* ^^Prevent transition override by media-container */ ''}\n      visibility: var(--media-dialog-visibility, visible);\n      opacity: var(--media-dialog-opacity, 1);\n      transform: var(--media-dialog-transform-in, translateY(0) scale(1));\n    }\n\n    :host([hidden]) {\n      transition: var(--media-dialog-transition-out,\n        visibility .15s ease-in,\n        opacity .15s ease-in,\n        transform .15s ease-in\n      ) !important;\n      visibility: var(--media-dialog-hidden-visibility, hidden);\n      opacity: var(--media-dialog-hidden-opacity, 0);\n      transform: var(--media-dialog-transform-out, translateY(2px) scale(.99));\n      pointer-events: none;\n    }\n  </style>\n  <slot></slot>\n`;\n\nexport const Attributes = {\n  HIDDEN: 'hidden',\n  ANCHOR: 'anchor',\n};\n\n/**\n * @extends {HTMLElement}\n *\n * @slot - Default slotted elements.\n *\n * @cssproperty --media-primary-color - Default color of text / icon.\n * @cssproperty --media-secondary-color - Default color of background.\n * @cssproperty --media-text-color - `color` of text.\n *\n * @cssproperty --media-control-background - `background` of control.\n * @cssproperty --media-dialog-display - `display` of dialog.\n * @cssproperty --media-dialog-background - `background` of dialog.\n * @cssproperty --media-dialog-border-radius - `border-radius` of dialog.\n * @cssproperty --media-dialog-border - `border` of dialog.\n * @cssproperty --media-dialog-transition-in - `transition` of dialog when showing.\n * @cssproperty --media-dialog-transition-out - `transition` of dialog when hiding.\n * @cssproperty --media-dialog-visibility - `visibility` of dialog when showing.\n * @cssproperty --media-dialog-hidden-visibility - `visibility` of dialog when hiding.\n * @cssproperty --media-dialog-opacity - `opacity` of dialog when showing.\n * @cssproperty --media-dialog-hidden-opacity - `opacity` of dialog when hiding.\n * @cssproperty --media-dialog-transform-in - `transform` of dialog when showing.\n * @cssproperty --media-dialog-transform-out - `transform` of dialog when hiding.\n *\n * @cssproperty --media-font - `font` shorthand property.\n * @cssproperty --media-font-weight - `font-weight` property.\n * @cssproperty --media-font-family - `font-family` property.\n * @cssproperty --media-font-size - `font-size` property.\n * @cssproperty --media-text-content-height - `line-height` of text.\n */\nclass MediaChromeDialog extends globalThis.HTMLElement {\n  static template: HTMLTemplateElement = template;\n\n  static get observedAttributes() {\n    return [Attributes.HIDDEN, Attributes.ANCHOR];\n  }\n\n  #previouslyFocused: HTMLElement | null = null;\n  #invokerElement: HTMLElement | null = null;\n\n  nativeEl: HTMLElement;\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n\n      this.nativeEl = (\n        this.constructor as typeof MediaChromeDialog\n      ).template.content.cloneNode(true) as HTMLElement;\n      this.shadowRoot.append(this.nativeEl);\n    }\n\n    this.addEventListener('invoke', this);\n    this.addEventListener('focusout', this);\n    this.addEventListener('keydown', this);\n  }\n\n  handleEvent(event: Event) {\n    switch (event.type) {\n      case 'invoke':\n        this.#handleInvoke(event as InvokeEvent);\n        break;\n      case 'focusout':\n        this.#handleFocusOut(event as FocusEvent);\n        break;\n      case 'keydown':\n        this.#handleKeyDown(event as KeyboardEvent);\n        break;\n    }\n  }\n\n  connectedCallback(): void {\n    if (!this.role) {\n      this.role = 'dialog';\n    }\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ) {\n    if (attrName === Attributes.HIDDEN && newValue !== oldValue) {\n      if (this.hidden) {\n        this.#handleClosed();\n      } else {\n        this.#handleOpen();\n      }\n    }\n  }\n\n  #handleOpen() {\n    this.#invokerElement?.setAttribute('aria-expanded', 'true');\n    // Focus when the transition ends.\n    this.addEventListener('transitionend', () => this.focus(), { once: true });\n  }\n\n  #handleClosed() {\n    this.#invokerElement?.setAttribute('aria-expanded', 'false');\n  }\n\n  focus() {\n    this.#previouslyFocused = getActiveElement();\n\n    const focusable: HTMLElement | null = this.querySelector(\n      '[autofocus], [tabindex]:not([tabindex=\"-1\"]), [role=\"menu\"]'\n    );\n    focusable?.focus();\n  }\n\n  #handleInvoke(event: InvokeEvent) {\n    this.#invokerElement = event.relatedTarget as HTMLElement;\n\n    if (!containsComposedNode(this, event.relatedTarget as Node)) {\n      this.hidden = !this.hidden;\n    }\n  }\n\n  #handleFocusOut(event: FocusEvent) {\n    if (!containsComposedNode(this, event.relatedTarget as Node)) {\n      this.#previouslyFocused?.focus();\n\n      // If the menu was opened by a click, close it when selecting an item.\n      if (\n        this.#invokerElement &&\n        this.#invokerElement !== event.relatedTarget &&\n        !this.hidden\n      ) {\n        this.hidden = true;\n      }\n    }\n  }\n\n  get keysUsed() {\n    return ['Escape', 'Tab'];\n  }\n\n  #handleKeyDown(event: KeyboardEvent) {\n    const { key, ctrlKey, altKey, metaKey } = event;\n\n    if (ctrlKey || altKey || metaKey) {\n      return;\n    }\n\n    if (!this.keysUsed.includes(key)) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (key === 'Tab') {\n      // Move focus to the previous focusable element.\n      if (event.shiftKey) {\n        (this.previousElementSibling as HTMLElement)?.focus?.();\n      } else {\n        // Move focus to the next focusable element.\n        (this.nextElementSibling as HTMLElement)?.focus?.();\n      }\n\n      // Go back to the previous focused element.\n      this.blur();\n    } else if (key === 'Escape') {\n      // Go back to the previous menu or close the menu.\n      this.#previouslyFocused?.focus();\n      this.hidden = true;\n    }\n  }\n}\n\nif (!globalThis.customElements.get('media-chrome-dialog')) {\n  globalThis.customElements.define('media-chrome-dialog', MediaChromeDialog);\n}\n\nexport { MediaChromeDialog };\nexport default MediaChromeDialog;\n", "import { MediaStateReceiverAttributes } from './constants.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport {\n  getOrInsertCSSRule,\n  getPointProgressOnLine,\n} from './utils/element-utils.js';\nimport { observeResize, unobserveResize } from './utils/resize-observer.js';\n\nconst template: HTMLTemplateElement = document.createElement('template');\ntemplate.innerHTML = /*html*/ `\n  <style>\n    :host {\n      --_focus-box-shadow: var(--media-focus-box-shadow, inset 0 0 0 2px rgb(27 127 204 / .9));\n      --_media-range-padding: var(--media-range-padding, var(--media-control-padding, 10px));\n\n      box-shadow: var(--_focus-visible-box-shadow, none);\n      background: var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)));\n      height: calc(var(--media-control-height, 24px) + 2 * var(--_media-range-padding));\n      display: inline-flex;\n      align-items: center;\n      ${\n        /* Don't horizontal align w/ justify-content! #container can go negative on the x-axis w/ small width. */ ''\n      }\n      vertical-align: middle;\n      box-sizing: border-box;\n      position: relative;\n      width: 100px;\n      transition: background .15s linear;\n      cursor: pointer;\n      pointer-events: auto;\n      touch-action: none; ${/* Prevent scrolling when dragging on mobile. */ ''}\n      z-index: 1; ${/* Apply z-index to overlap buttons below. */ ''}\n    }\n\n    ${/* Reset before `outline` on track could be set by a CSS var */ ''}\n    input[type=range]:focus {\n      outline: 0;\n    }\n    input[type=range]:focus::-webkit-slider-runnable-track {\n      outline: 0;\n    }\n\n    :host(:hover) {\n      background: var(--media-control-hover-background, rgb(50 50 70 / .7));\n    }\n\n    #leftgap {\n      padding-left: var(--media-range-padding-left, var(--_media-range-padding));\n    }\n\n    #rightgap {\n      padding-right: var(--media-range-padding-right, var(--_media-range-padding));\n    }\n\n    #startpoint,\n    #endpoint {\n      position: absolute;\n    }\n\n    #endpoint {\n      right: 0;\n    }\n\n    #container {\n      ${\n        /* Not using the CSS `padding` prop makes it easier for slide open volume ranges so the width can be zero. */ ''\n      }\n      width: var(--media-range-track-width, 100%);\n      transform: translate(var(--media-range-track-translate-x, 0px), var(--media-range-track-translate-y, 0px));\n      position: relative;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      min-width: 40px;\n    }\n\n    #range {\n      ${/* The input range acts as a hover and hit zone for input events. */ ''}\n      display: var(--media-time-range-hover-display, block);\n      bottom: var(--media-time-range-hover-bottom, -7px);\n      height: var(--media-time-range-hover-height, max(100% + 7px, 25px));\n      width: 100%;\n      position: absolute;\n      cursor: pointer;\n\n      -webkit-appearance: none; ${\n        /* Hides the slider so that custom slider can be made */ ''\n      }\n      -webkit-tap-highlight-color: transparent;\n      background: transparent; ${/* Otherwise white in Chrome */ ''}\n      margin: 0;\n      z-index: 1;\n    }\n\n    @media (hover: hover) {\n      #range {\n        bottom: var(--media-time-range-hover-bottom, -5px);\n        height: var(--media-time-range-hover-height, max(100% + 5px, 20px));\n      }\n    }\n\n    ${/* Special styling for WebKit/Blink */ ''}\n    ${\n      /* Make thumb width/height small so it has no effect on range click position. */ ''\n    }\n    #range::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      background: transparent;\n      width: .1px;\n      height: .1px;\n    }\n\n    ${/* The thumb is not positioned relative to the track in Firefox */ ''}\n    #range::-moz-range-thumb {\n      background: transparent;\n      border: transparent;\n      width: .1px;\n      height: .1px;\n    }\n\n    #appearance {\n      height: var(--media-range-track-height, 4px);\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 100%;\n      position: absolute;\n      ${/* Required for Safari to stop glitching track height on hover */ ''}\n      will-change: transform;\n    }\n\n    #track {\n      background: var(--media-range-track-background, rgb(255 255 255 / .2));\n      border-radius: var(--media-range-track-border-radius, 1px);\n      border: var(--media-range-track-border, none);\n      outline: var(--media-range-track-outline);\n      outline-offset: var(--media-range-track-outline-offset);\n      backdrop-filter: var(--media-range-track-backdrop-filter);\n      -webkit-backdrop-filter: var(--media-range-track-backdrop-filter);\n      box-shadow: var(--media-range-track-box-shadow, none);\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n    }\n\n    #progress,\n    #pointer {\n      position: absolute;\n      height: 100%;\n      will-change: width;\n    }\n\n    #progress {\n      background: var(--media-range-bar-color, var(--media-primary-color, rgb(238 238 238)));\n      transition: var(--media-range-track-transition);\n    }\n\n    #pointer {\n      background: var(--media-range-track-pointer-background);\n      border-right: var(--media-range-track-pointer-border-right);\n      transition: visibility .25s, opacity .25s;\n      visibility: hidden;\n      opacity: 0;\n    }\n\n    @media (hover: hover) {\n      :host(:hover) #pointer {\n        transition: visibility .5s, opacity .5s;\n        visibility: visible;\n        opacity: 1;\n      }\n    }\n\n    #thumb {\n      width: var(--media-range-thumb-width, 10px);\n      height: var(--media-range-thumb-height, 10px);\n      margin-left: calc(var(--media-range-thumb-width, 10px) / -2);\n      border: var(--media-range-thumb-border, none);\n      border-radius: var(--media-range-thumb-border-radius, 10px);\n      background: var(--media-range-thumb-background, var(--media-primary-color, rgb(238 238 238)));\n      box-shadow: var(--media-range-thumb-box-shadow, 1px 1px 1px transparent);\n      transition: var(--media-range-thumb-transition);\n      transform: var(--media-range-thumb-transform, none);\n      opacity: var(--media-range-thumb-opacity, 1);\n      position: absolute;\n      left: 0;\n      cursor: pointer;\n    }\n\n    :host([disabled]) #thumb {\n      background-color: #777;\n    }\n\n    .segments #appearance {\n      height: var(--media-range-segment-hover-height, 7px);\n    }\n\n    #track {\n      clip-path: url(#segments-clipping);\n    }\n\n    #segments {\n      --segments-gap: var(--media-range-segments-gap, 2px);\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    #segments-clipping {\n      transform: translateX(calc(var(--segments-gap) / 2));\n    }\n\n    #segments-clipping:empty {\n      display: none;\n    }\n\n    #segments-clipping rect {\n      height: var(--media-range-track-height, 4px);\n      y: calc((var(--media-range-segment-hover-height, 7px) - var(--media-range-track-height, 4px)) / 2);\n      transition: var(--media-range-segment-transition, transform .1s ease-in-out);\n      transform: var(--media-range-segment-transform, scaleY(1));\n      transform-origin: center;\n    }\n  </style>\n  <div id=\"leftgap\"></div>\n  <div id=\"container\">\n    <div id=\"startpoint\"></div>\n    <div id=\"endpoint\"></div>\n    <div id=\"appearance\">\n      <div id=\"track\" part=\"track\">\n        <div id=\"pointer\"></div>\n        <div id=\"progress\" part=\"progress\"></div>\n      </div>\n      <div id=\"thumb\" part=\"thumb\"></div>\n      <svg id=\"segments\"><clipPath id=\"segments-clipping\"></clipPath></svg>\n    </div>\n    <input id=\"range\" type=\"range\" min=\"0\" max=\"1\" step=\"any\" value=\"0\">\n  </div>\n  <div id=\"rightgap\"></div>\n`;\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {boolean} disabled - The Boolean disabled attribute makes the element not mutable or focusable.\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n *\n * @csspart track - The runnable track of the range.\n * @csspart progress - The progress part of the track.\n * @csspart thumb - The thumb of the range.\n *\n * @cssproperty --media-primary-color - Default color of range bar.\n * @cssproperty --media-secondary-color - Default color of range background.\n *\n * @cssproperty [--media-control-display = inline-block] - `display` property of control.\n * @cssproperty --media-control-padding - `padding` of control.\n * @cssproperty --media-control-background - `background` of control.\n * @cssproperty --media-control-hover-background - `background` of control hover state.\n * @cssproperty --media-control-height - `height` of control.\n *\n * @cssproperty --media-range-padding - `padding` of range.\n * @cssproperty --media-range-padding-left - `padding-left` of range.\n * @cssproperty --media-range-padding-right - `padding-right` of range.\n *\n * @cssproperty --media-range-thumb-width - `width` of range thumb.\n * @cssproperty --media-range-thumb-height - `height` of range thumb.\n * @cssproperty --media-range-thumb-border - `border` of range thumb.\n * @cssproperty --media-range-thumb-border-radius - `border-radius` of range thumb.\n * @cssproperty --media-range-thumb-background - `background` of range thumb.\n * @cssproperty --media-range-thumb-box-shadow - `box-shadow` of range thumb.\n * @cssproperty --media-range-thumb-transition - `transition` of range thumb.\n * @cssproperty --media-range-thumb-transform - `transform` of range thumb.\n * @cssproperty --media-range-thumb-opacity - `opacity` of range thumb.\n *\n * @cssproperty [--media-range-bar-color = var(--media-primary-color, rgb(238 238 238))] - `background` of range progress.\n * @cssproperty --media-range-track-background - `background` of range track background.\n * @cssproperty --media-range-track-backdrop-filter - `backdrop-filter` of range track.\n * @cssproperty --media-range-track-width - `width` of range track.\n * @cssproperty --media-range-track-height - `height` of range track.\n * @cssproperty --media-range-track-border - `border` of range track.\n * @cssproperty --media-range-track-outline - `outline` of range track.\n * @cssproperty --media-range-track-outline-offset - `outline-offset` of range track.\n * @cssproperty --media-range-track-border-radius - `border-radius` of range track.\n * @cssproperty --media-range-track-box-shadow - `box-shadow` of range track.\n * @cssproperty --media-range-track-transition - `transition` of range track.\n * @cssproperty --media-range-track-translate-x - `translate` x-coordinate of range track.\n * @cssproperty --media-range-track-translate-y - `translate` y-coordinate of range track.\n *\n * @cssproperty --media-time-range-hover-display - `display` of range hover zone.\n * @cssproperty --media-time-range-hover-bottom - `bottom` of range hover zone.\n * @cssproperty --media-time-range-hover-height - `height` of range hover zone.\n *\n * @cssproperty --media-range-track-pointer-background - `background` of range track pointer.\n * @cssproperty --media-range-track-pointer-border-right - `border-right` of range track pointer.\n */\nclass MediaChromeRange extends globalThis.HTMLElement {\n  #mediaController;\n  #isInputTarget;\n  #startpoint;\n  #endpoint;\n  #cssRules: Record<string, CSSStyleRule> = {};\n  #segments = [];\n\n  static get observedAttributes(): string[] {\n    return [\n      'disabled',\n      'aria-disabled',\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER,\n    ];\n  }\n\n  container: HTMLElement;\n  range: HTMLInputElement;\n  appearance: HTMLElement;\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    this.container = this.shadowRoot.querySelector('#container');\n    this.#startpoint = this.shadowRoot.querySelector('#startpoint');\n    this.#endpoint = this.shadowRoot.querySelector('#endpoint');\n\n    /** @type {Omit<HTMLInputElement, \"value\" | \"min\" | \"max\"> &\n     * {value: number, min: number, max: number}} */\n    this.range = this.shadowRoot.querySelector('#range');\n    this.appearance = this.shadowRoot.querySelector('#appearance');\n  }\n\n  #onFocusIn = (): void => {\n    if (this.range.matches(':focus-visible')) {\n      const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n      style.setProperty(\n        '--_focus-visible-box-shadow',\n        'var(--_focus-box-shadow)'\n      );\n    }\n  };\n\n  #onFocusOut = (): void => {\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    style.removeProperty('--_focus-visible-box-shadow');\n  };\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue && this.isConnected) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    } else if (\n      attrName === 'disabled' ||\n      (attrName === 'aria-disabled' && oldValue !== newValue)\n    ) {\n      if (newValue == null) {\n        this.range.removeAttribute(attrName);\n        this.#enableUserEvents();\n      } else {\n        this.range.setAttribute(attrName, newValue);\n        this.#disableUserEvents();\n      }\n    }\n  }\n\n  connectedCallback(): void {\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    style.setProperty(\n      'display',\n      `var(--media-control-display, var(--${this.localName}-display, inline-flex))`\n    );\n\n    this.#cssRules.pointer = getOrInsertCSSRule(this.shadowRoot, '#pointer');\n    this.#cssRules.progress = getOrInsertCSSRule(this.shadowRoot, '#progress');\n    this.#cssRules.thumb = getOrInsertCSSRule(this.shadowRoot, '#thumb');\n    this.#cssRules.activeSegment = getOrInsertCSSRule(\n      this.shadowRoot,\n      '#segments-clipping rect:nth-child(0)'\n    );\n\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      // @ts-ignore\n      this.#mediaController = (this.getRootNode() as Document)?.getElementById(\n        mediaControllerId\n      );\n      this.#mediaController?.associateElement?.(this);\n    }\n\n    this.updateBar();\n\n    this.shadowRoot.addEventListener('focusin', this.#onFocusIn);\n    this.shadowRoot.addEventListener('focusout', this.#onFocusOut);\n\n    this.#enableUserEvents();\n    observeResize(this.container, this.#updateComputedStyles);\n  }\n\n  disconnectedCallback(): void {\n    this.#disableUserEvents();\n\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n\n    this.shadowRoot.removeEventListener('focusin', this.#onFocusIn);\n    this.shadowRoot.removeEventListener('focusout', this.#onFocusOut);\n    unobserveResize(this.container, this.#updateComputedStyles);\n  }\n\n  #updateComputedStyles = () => {\n    // This fixes a Chrome bug where it doesn't refresh the clip-path on content resize.\n    const clipping = this.shadowRoot.querySelector('#segments-clipping');\n    if (clipping) clipping.parentNode.append(clipping);\n  };\n\n  updatePointerBar(evt) {\n    this.#cssRules.pointer?.style.setProperty(\n      'width',\n      `${this.getPointerRatio(evt) * 100}%`\n    );\n  }\n\n  updateBar() {\n    const rangePercent = this.range.valueAsNumber * 100;\n    this.#cssRules.progress?.style.setProperty('width', `${rangePercent}%`);\n    this.#cssRules.thumb?.style.setProperty('left', `${rangePercent}%`);\n  }\n\n  updateSegments(segments) {\n    const clipping = this.shadowRoot.querySelector('#segments-clipping');\n    clipping.textContent = '';\n\n    this.container.classList.toggle('segments', !!segments?.length);\n\n    if (!segments?.length) return;\n\n    const normalized = [\n      ...new Set([\n        +this.range.min,\n        ...segments.flatMap((s) => [s.start, s.end]),\n        +this.range.max,\n      ]),\n    ];\n\n    this.#segments = [...normalized];\n\n    const lastMarker = normalized.pop();\n    for (const [i, marker] of normalized.entries()) {\n      const [isFirst, isLast] = [i === 0, i === normalized.length - 1];\n      const x = isFirst ? 'calc(var(--segments-gap) / -1)' : `${marker * 100}%`;\n      const x2 = isLast ? lastMarker : normalized[i + 1];\n      const width = `calc(${(x2 - marker) * 100}%${\n        isFirst || isLast ? '' : ` - var(--segments-gap)`\n      })`;\n\n      const segmentEl = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'rect'\n      );\n      const cssRule = getOrInsertCSSRule(\n        this.shadowRoot,\n        `#segments-clipping rect:nth-child(${i + 1})`\n      );\n      cssRule.style.setProperty('x', x);\n      cssRule.style.setProperty('width', width);\n      clipping.append(segmentEl);\n    }\n  }\n\n  #updateActiveSegment(evt) {\n    const rule = this.#cssRules.activeSegment;\n    if (!rule) return;\n\n    const pointerRatio = this.getPointerRatio(evt);\n    const segmentIndex = this.#segments.findIndex((start, i, arr) => {\n      const end = arr[i + 1];\n      return end != null && pointerRatio >= start && pointerRatio <= end;\n    });\n\n    const selectorText = `#segments-clipping rect:nth-child(${\n      segmentIndex + 1\n    })`;\n\n    if (rule.selectorText != selectorText || !rule.style.transform) {\n      rule.selectorText = selectorText;\n      rule.style.setProperty(\n        'transform',\n        'var(--media-range-segment-hover-transform, scaleY(2))'\n      );\n    }\n  }\n\n  getPointerRatio(evt) {\n    const pointerRatio = getPointProgressOnLine(\n      evt.clientX,\n      evt.clientY,\n      this.#startpoint.getBoundingClientRect(),\n      this.#endpoint.getBoundingClientRect()\n    );\n    return Math.max(0, Math.min(1, pointerRatio));\n  }\n\n  get dragging() {\n    return this.hasAttribute('dragging');\n  }\n\n  #enableUserEvents() {\n    if (this.hasAttribute('disabled')) return;\n\n    this.addEventListener('input', this);\n    this.addEventListener('pointerdown', this);\n    this.addEventListener('pointerenter', this);\n  }\n\n  #disableUserEvents() {\n    this.removeEventListener('input', this);\n    this.removeEventListener('pointerdown', this);\n    this.removeEventListener('pointerenter', this);\n    globalThis.window?.removeEventListener('pointerup', this);\n    globalThis.window?.removeEventListener('pointermove', this);\n  }\n\n  handleEvent(evt) {\n    switch (evt.type) {\n      case 'pointermove':\n        this.#handlePointerMove(evt);\n        break;\n      case 'input':\n        this.updateBar();\n        break;\n      case 'pointerenter':\n        this.#handlePointerEnter(evt);\n        break;\n      case 'pointerdown':\n        this.#handlePointerDown(evt);\n        break;\n      case 'pointerup':\n        this.#handlePointerUp();\n        break;\n      case 'pointerleave':\n        this.#handlePointerLeave();\n        break;\n    }\n  }\n\n  #handlePointerDown(evt) {\n    // Events outside the range element are handled manually below.\n    this.#isInputTarget = evt.composedPath().includes(this.range);\n\n    globalThis.window?.addEventListener('pointerup', this);\n  }\n\n  #handlePointerEnter(evt) {\n    // On mobile a pointerdown is not required to drag the range.\n    if (evt.pointerType !== 'mouse') this.#handlePointerDown(evt);\n\n    this.addEventListener('pointerleave', this);\n    globalThis.window?.addEventListener('pointermove', this);\n  }\n\n  #handlePointerUp() {\n    globalThis.window?.removeEventListener('pointerup', this);\n    this.toggleAttribute('dragging', false);\n    this.range.disabled = this.hasAttribute('disabled');\n  }\n\n  #handlePointerLeave() {\n    this.removeEventListener('pointerleave', this);\n    globalThis.window?.removeEventListener('pointermove', this);\n    this.toggleAttribute('dragging', false);\n    this.range.disabled = this.hasAttribute('disabled');\n    this.#cssRules.activeSegment?.style.removeProperty('transform');\n  }\n\n  #handlePointerMove(evt) {\n    this.toggleAttribute(\n      'dragging',\n      evt.buttons === 1 || evt.pointerType !== 'mouse'\n    );\n    this.updatePointerBar(evt);\n    this.#updateActiveSegment(evt);\n\n    // If the native input target & events are used don't fire manual input events.\n    if (\n      this.dragging &&\n      (evt.pointerType !== 'mouse' || !this.#isInputTarget)\n    ) {\n      // Disable native input events if manual events are fired.\n      this.range.disabled = true;\n\n      this.range.valueAsNumber = this.getPointerRatio(evt);\n      this.range.dispatchEvent(\n        new Event('input', { bubbles: true, composed: true })\n      );\n    }\n  }\n\n  get keysUsed() {\n    return ['ArrowUp', 'ArrowRight', 'ArrowDown', 'ArrowLeft'];\n  }\n}\n\nif (!globalThis.customElements.get('media-chrome-range')) {\n  globalThis.customElements.define('media-chrome-range', MediaChromeRange);\n}\n\nexport { MediaChromeRange };\nexport default MediaChromeRange;\n", "/*\n  <media-control-bar>\n\n  Auto position contorls in a line and set some base colors\n*/\nimport { MediaStateReceiverAttributes } from './constants.js';\nimport type MediaController from './media-controller.js';\nimport { document, globalThis } from './utils/server-safe-globals.js';\n\nconst template: HTMLTemplateElement = document.createElement('template');\n\ntemplate.innerHTML = /*html*/ `\n  <style>\n    :host {\n      ${/* Need position to display above video for some reason */ ''}\n      box-sizing: border-box;\n      display: var(--media-control-display, var(--media-control-bar-display, inline-flex));\n      color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));\n      --media-loading-indicator-icon-height: 44px;\n    }\n\n    ::slotted(media-time-range),\n    ::slotted(media-volume-range) {\n      min-height: 100%;\n    }\n\n    ::slotted(media-time-range),\n    ::slotted(media-clip-selector) {\n      flex-grow: 1;\n    }\n\n    ::slotted([role=\"menu\"]) {\n      position: absolute;\n    }\n  </style>\n\n  <slot></slot>\n`;\n\n/**\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n *\n * @cssproperty --media-primary-color - Default color of text and icon.\n * @cssproperty --media-secondary-color - Default color of button background.\n * @cssproperty --media-text-color - `color` of button text.\n *\n * @cssproperty --media-control-bar-display - `display` property of control bar.\n * @cssproperty --media-control-display - `display` property of control.\n */\nclass MediaControlBar extends globalThis.HTMLElement {\n  #mediaController: MediaController | null;\n\n  static get observedAttributes(): string[] {\n    return [MediaStateReceiverAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue && this.isConnected) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback(): void {\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      // @ts-ignore\n      this.#mediaController = (this.getRootNode() as Document)?.getElementById(\n        mediaControllerId\n      );\n      this.#mediaController?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n  }\n}\n\nif (!globalThis.customElements.get('media-control-bar')) {\n  globalThis.customElements.define('media-control-bar', MediaControlBar);\n}\n\nexport default MediaControlBar;\n", "import { MediaStateReceiverAttributes } from './constants.js';\nimport MediaController from './media-controller.js';\nimport { getOrInsertCSSRule } from './utils/element-utils.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\nconst template: HTMLTemplateElement = document.createElement('template');\n\ntemplate.innerHTML = /*html*/ `\n  <style>\n    :host {\n      font: var(--media-font,\n        var(--media-font-weight, normal)\n        var(--media-font-size, 14px) /\n        var(--media-text-content-height, var(--media-control-height, 24px))\n        var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));\n      color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));\n      background: var(--media-text-background, var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7))));\n      padding: var(--media-control-padding, 10px);\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      vertical-align: middle;\n      box-sizing: border-box;\n      text-align: center;\n      pointer-events: auto;\n    }\n\n    ${\n      /*\n      Only show outline when keyboard focusing.\n      https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo\n    */ ''\n    }\n    :host(:focus-visible) {\n      box-shadow: inset 0 0 0 2px rgb(27 127 204 / .9);\n      outline: 0;\n    }\n\n    ${\n      /*\n       * hide default focus ring, particularly when using mouse\n       */ ''\n    }\n    :host(:where(:focus)) {\n      box-shadow: none;\n      outline: 0;\n    }\n  </style>\n  <slot></slot>\n`;\n\n/**\n * @slot - Default slotted elements.\n *\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n *\n * @cssproperty --media-primary-color - Default color of text.\n * @cssproperty --media-secondary-color - Default color of background.\n * @cssproperty --media-text-color - `color` of text.\n *\n * @cssproperty --media-control-display - `display` property of control.\n * @cssproperty --media-control-background - `background` of control.\n * @cssproperty --media-control-padding - `padding` of control.\n * @cssproperty --media-control-height - `line-height` of control.\n *\n * @cssproperty --media-font - `font` shorthand property.\n * @cssproperty --media-font-weight - `font-weight` property.\n * @cssproperty --media-font-family - `font-family` property.\n * @cssproperty --media-font-size - `font-size` property.\n * @cssproperty --media-text-content-height - `line-height` of text.\n */\nclass MediaTextDisplay extends globalThis.HTMLElement {\n  #mediaController: MediaController | null;\n\n  static get observedAttributes(): string[] {\n    return [MediaStateReceiverAttributes.MEDIA_CONTROLLER];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue && this.isConnected) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback(): void {\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    style.setProperty(\n      'display',\n      `var(--media-control-display, var(--${this.localName}-display, inline-flex))`\n    );\n\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      // @ts-ignore\n      this.#mediaController = (this.getRootNode() as Document)?.getElementById(\n        mediaControllerId\n      );\n      this.#mediaController?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n  }\n}\n\nif (!globalThis.customElements.get('media-text-display')) {\n  globalThis.customElements.define('media-text-display', MediaTextDisplay);\n}\n\nexport { MediaTextDisplay };\nexport default MediaTextDisplay;\n", "import { MediaTextDisplay } from './media-text-display.js';\nimport { globalThis } from './utils/server-safe-globals.js';\nimport { formatTime } from './utils/time.js';\nimport { MediaUIAttributes } from './constants.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\n/**\n * @attr {string} mediaduration - (read-only) Set to the media duration.\n *\n * @cssproperty [--media-duration-display-display = inline-flex] - `display` property of display.\n */\nclass MediaDurationDisplay extends MediaTextDisplay {\n  /** @type {HTMLSlotElement} */\n  #slot: HTMLSlotElement;\n\n  static get observedAttributes(): string[] {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_DURATION];\n  }\n\n  constructor() {\n    super();\n    this.#slot = this.shadowRoot.querySelector('slot') as HTMLSlotElement;\n    this.#slot.textContent = formatTime(0);\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (attrName === MediaUIAttributes.MEDIA_DURATION) {\n      this.#slot.textContent = formatTime(+newValue);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {number | undefined} In seconds\n   */\n  get mediaDuration(): number | undefined {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_DURATION);\n  }\n\n  set mediaDuration(time: number | undefined) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_DURATION, time);\n  }\n}\n\nif (!globalThis.customElements.get('media-duration-display')) {\n  globalThis.customElements.define(\n    'media-duration-display',\n    MediaDurationDisplay\n  );\n}\n\nexport default MediaDurationDisplay;\n", "/*\n  <media-fullscreen-button media=\"#myVideo\" fullscreenelement=\"#myContainer\">\n\n  The fullscreenelement attribute can be used to say which element\n  to make fullscreen.\n  If none, the button will look for the closest media-container element to the media.\n  If none, the button will make the media fullscreen.\n*/\nimport { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { tooltipLabels, verbs } from './labels/labels.js';\nimport {\n  getBooleanAttr,\n  getStringAttr,\n  setBooleanAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst enterFullscreenIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M16 3v2.5h3.5V9H22V3h-6ZM4 9h2.5V5.5H10V3H4v6Zm15.5 9.5H16V21h6v-6h-2.5v3.5ZM6.5 15H4v6h6v-2.5H6.5V15Z\"/>\n</svg>`;\n\nconst exitFullscreenIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 26 24\">\n  <path d=\"M18.5 6.5V3H16v6h6V6.5h-3.5ZM16 21h2.5v-3.5H22V15h-6v6ZM4 17.5h3.5V21H10v-6H4v2.5Zm3.5-11H4V9h6V3H7.5v3.5Z\"/>\n</svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/ `\n  <style>\n    :host([${\n      MediaUIAttributes.MEDIA_IS_FULLSCREEN\n    }]) slot[name=icon] slot:not([name=exit]) {\n      display: none !important;\n    }\n\n    ${/* Double negative, but safer if display doesn't equal 'block' */ ''}\n    :host(:not([${\n      MediaUIAttributes.MEDIA_IS_FULLSCREEN\n    }])) slot[name=icon] slot:not([name=enter]) {\n      display: none !important;\n    }\n\n    :host([${MediaUIAttributes.MEDIA_IS_FULLSCREEN}]) slot[name=tooltip-enter],\n    :host(:not([${\n      MediaUIAttributes.MEDIA_IS_FULLSCREEN\n    }])) slot[name=tooltip-exit] {\n      display: none;\n    }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"enter\">${enterFullscreenIcon}</slot>\n    <slot name=\"exit\">${exitFullscreenIcon}</slot>\n  </slot>\n`;\n\nconst tooltipContent = /*html*/ `\n  <slot name=\"tooltip-enter\">${tooltipLabels.ENTER_FULLSCREEN}</slot>\n  <slot name=\"tooltip-exit\">${tooltipLabels.EXIT_FULLSCREEN}</slot>\n`;\n\nconst updateAriaLabel = (el: MediaFullscreenButton) => {\n  const label = el.mediaIsFullscreen\n    ? verbs.EXIT_FULLSCREEN()\n    : verbs.ENTER_FULLSCREEN();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot enter - An element shown when the media is not in fullscreen and pressing the button will trigger entering fullscreen.\n * @slot exit - An element shown when the media is in fullscreen and pressing the button will trigger exiting fullscreen.\n * @slot icon - An element for representing enter and exit states in a single icon\n *\n * @attr {(unavailable|unsupported)} mediafullscreenunavailable - (read-only) Set if fullscreen is unavailable.\n * @attr {boolean} mediaisfullscreen - (read-only) Present if the media is fullscreen.\n *\n * @cssproperty [--media-fullscreen-button-display = inline-flex] - `display` property of button.\n */\nclass MediaFullscreenButton extends MediaChromeButton {\n  static get observedAttributes(): string[] {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_IS_FULLSCREEN,\n      MediaUIAttributes.MEDIA_FULLSCREEN_UNAVAILABLE,\n    ];\n  }\n\n  constructor(options: object = {}) {\n    super({ slotTemplate, tooltipContent, ...options });\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    updateAriaLabel(this);\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === MediaUIAttributes.MEDIA_IS_FULLSCREEN) {\n      updateAriaLabel(this);\n    }\n  }\n\n  /**\n   * @type {string | undefined} Fullscreen unavailability state\n   */\n  get mediaFullscreenUnavailable(): string | undefined {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_FULLSCREEN_UNAVAILABLE);\n  }\n\n  set mediaFullscreenUnavailable(value: string | undefined) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_FULLSCREEN_UNAVAILABLE, value);\n  }\n\n  /**\n   * @type {boolean} Whether fullscreen is available\n   */\n  get mediaIsFullscreen(): boolean {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_FULLSCREEN);\n  }\n\n  set mediaIsFullscreen(value: boolean) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_FULLSCREEN, value);\n  }\n\n  handleClick(): void {\n    const eventName = this.mediaIsFullscreen\n      ? MediaUIEvents.MEDIA_EXIT_FULLSCREEN_REQUEST\n      : MediaUIEvents.MEDIA_ENTER_FULLSCREEN_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-fullscreen-button')) {\n  globalThis.customElements.define(\n    'media-fullscreen-button',\n    MediaFullscreenButton\n  );\n}\n\nexport default MediaFullscreenButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { verbs } from './labels/labels.js';\nimport { getBooleanAttr, setBooleanAttr } from './utils/element-utils.js';\n\nconst { MEDIA_TIME_IS_LIVE, MEDIA_PAUSED } = MediaUIAttributes;\nconst { MEDIA_SEEK_TO_LIVE_REQUEST, MEDIA_PLAY_REQUEST } = MediaUIEvents;\n\nconst indicatorSVG =\n  '<svg viewBox=\"0 0 6 12\"><circle cx=\"3\" cy=\"6\" r=\"2\"></circle></svg>';\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/ `\n  <style>\n  :host { --media-tooltip-display: none; }\n  \n  slot[name=indicator] > *,\n  :host ::slotted([slot=indicator]) {\n    ${/* Override styles for icon-only buttons */ ''}\n    min-width: auto;\n    fill: var(--media-live-button-icon-color, rgb(140, 140, 140));\n    color: var(--media-live-button-icon-color, rgb(140, 140, 140));\n  }\n\n  :host([${MEDIA_TIME_IS_LIVE}]:not([${MEDIA_PAUSED}])) slot[name=indicator] > *,\n  :host([${MEDIA_TIME_IS_LIVE}]:not([${MEDIA_PAUSED}])) ::slotted([slot=indicator]) {\n    fill: var(--media-live-button-indicator-color, rgb(255, 0, 0));\n    color: var(--media-live-button-indicator-color, rgb(255, 0, 0));\n  }\n\n  :host([${MEDIA_TIME_IS_LIVE}]:not([${MEDIA_PAUSED}])) {\n    cursor: not-allowed;\n  }\n\n  </style>\n\n  <slot name=\"indicator\">${indicatorSVG}</slot>\n  ${\n    /*\n    A new line between spacer and text creates inconsistent spacing\n    between slotted items and default slots.\n  */ ''\n  }\n  <slot name=\"spacer\">&nbsp;</slot><slot name=\"text\">LIVE</slot>\n`;\n\nconst updateAriaAttributes = (el: MediaLiveButton): void => {\n  const isPausedOrNotLive = el.mediaPaused || !el.mediaTimeIsLive;\n  const label = isPausedOrNotLive ? verbs.SEEK_LIVE() : verbs.PLAYING_LIVE();\n  el.setAttribute('aria-label', label);\n\n  isPausedOrNotLive\n    ? el.removeAttribute('aria-disabled')\n    : el.setAttribute('aria-disabled', 'true');\n};\n\n/**\n * @slot indicator - The default is an SVG of a circle that changes to red when the video or audio is live. Can be replaced with your own SVG or font icon.\n * @slot spacer - A simple text space (&nbsp;) between the indicator and the text.\n * @slot text - The text content of the button, with a default of \u201CLIVE\u201D.\n *\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n * @attr {boolean} mediatimeislive - (read-only) Present if the media playback is live.\n *\n * @cssproperty [--media-live-button-display = inline-flex] - `display` property of button.\n * @cssproperty --media-live-button-icon-color - `fill` and `color` of not live button icon.\n * @cssproperty --media-live-button-indicator-color - `fill` and `color` of live button icon.\n */\nclass MediaLiveButton extends MediaChromeButton {\n  static get observedAttributes(): string[] {\n    return [...super.observedAttributes, MEDIA_PAUSED, MEDIA_TIME_IS_LIVE];\n  }\n\n  constructor(options: object = {}) {\n    super({ slotTemplate, ...options });\n  }\n\n  connectedCallback(): void {\n    updateAriaAttributes(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n    updateAriaAttributes(this);\n  }\n\n  /**\n   * @type {boolean} Is the media paused\n   */\n  get mediaPaused(): boolean {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value: boolean) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n\n  /**\n   * @type {boolean} Is the media playback currently live\n   */\n  get mediaTimeIsLive(): boolean {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_TIME_IS_LIVE);\n  }\n\n  set mediaTimeIsLive(value: boolean) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_TIME_IS_LIVE, value);\n  }\n\n  handleClick(): void {\n    // If we're live and not paused, don't allow seek to live\n    if (!this.mediaPaused && this.mediaTimeIsLive) return;\n\n    this.dispatchEvent(\n      new globalThis.CustomEvent(MEDIA_SEEK_TO_LIVE_REQUEST, {\n        composed: true,\n        bubbles: true,\n      })\n    );\n\n    // If we're paused, also automatically play\n    if (this.hasAttribute(MEDIA_PAUSED)) {\n      this.dispatchEvent(\n        new globalThis.CustomEvent(MEDIA_PLAY_REQUEST, {\n          composed: true,\n          bubbles: true,\n        })\n      );\n    }\n  }\n}\n\nif (!globalThis.customElements.get('media-live-button')) {\n  globalThis.customElements.define('media-live-button', MediaLiveButton);\n}\n\nexport default MediaLiveButton;\n", "import {\n  MediaUIAttributes,\n  MediaStateReceiverAttributes,\n} from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport {\n  getBooleanAttr,\n  setBooleanAttr,\n  getOrInsertCSSRule,\n} from './utils/element-utils.js';\nimport MediaController from './media-controller.js';\nexport const Attributes = {\n  LOADING_DELAY: 'loadingdelay',\n};\n\nconst DEFAULT_LOADING_DELAY = 500;\n\nconst template: HTMLTemplateElement = document.createElement('template');\n\nconst loadingIndicatorIcon = `\n<svg aria-hidden=\"true\" viewBox=\"0 0 100 100\">\n  <path d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\">\n    <animateTransform\n       attributeName=\"transform\"\n       attributeType=\"XML\"\n       type=\"rotate\"\n       dur=\"1s\"\n       from=\"0 50 50\"\n       to=\"360 50 50\"\n       repeatCount=\"indefinite\" />\n  </path>\n</svg>\n`;\n\ntemplate.innerHTML = /*html*/ `\n<style>\n:host {\n  display: var(--media-control-display, var(--media-loading-indicator-display, inline-block));\n  vertical-align: middle;\n  box-sizing: border-box;\n  --_loading-indicator-delay: var(--media-loading-indicator-transition-delay, ${DEFAULT_LOADING_DELAY}ms);\n}\n\n#status {\n  color: rgba(0,0,0,0);\n  width: 0px;\n  height: 0px;\n}\n\n:host slot[name=icon] > *,\n:host ::slotted([slot=icon]) {\n  opacity: var(--media-loading-indicator-opacity, 0);\n  transition: opacity 0.15s;\n}\n\n:host([${MediaUIAttributes.MEDIA_LOADING}]:not([${\n  MediaUIAttributes.MEDIA_PAUSED\n}])) slot[name=icon] > *,\n:host([${MediaUIAttributes.MEDIA_LOADING}]:not([${\n  MediaUIAttributes.MEDIA_PAUSED\n}])) ::slotted([slot=icon]) {\n  opacity: var(--media-loading-indicator-opacity, 1);\n  transition: opacity 0.15s var(--_loading-indicator-delay);\n}\n\n:host #status {\n  visibility: var(--media-loading-indicator-opacity, hidden);\n  transition: visibility 0.15s;\n}\n\n:host([${MediaUIAttributes.MEDIA_LOADING}]:not([${\n  MediaUIAttributes.MEDIA_PAUSED\n}])) #status {\n  visibility: var(--media-loading-indicator-opacity, visible);\n  transition: visibility 0.15s var(--_loading-indicator-delay);\n}\n\nsvg, img, ::slotted(svg), ::slotted(img) {\n  width: var(--media-loading-indicator-icon-width);\n  height: var(--media-loading-indicator-icon-height, 100px);\n  fill: var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)));\n  vertical-align: middle;\n}\n</style>\n\n<slot name=\"icon\">${loadingIndicatorIcon}</slot>\n<div id=\"status\" role=\"status\" aria-live=\"polite\">${nouns.MEDIA_LOADING()}</div>\n`;\n\n/**\n * @slot icon - The element shown for when the media is in a buffering state.\n *\n * @attr {string} loadingdelay - Set the delay in ms before the loading animation is shown.\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n * @attr {boolean} medialoading - (read-only) Present if the media is loading.\n *\n * @cssproperty --media-primary-color - Default color of text and icon.\n * @cssproperty --media-icon-color - `fill` color of button icon.\n *\n * @cssproperty --media-control-display - `display` property of control.\n *\n * @cssproperty --media-loading-indicator-display - `display` property of loading indicator.\n * @cssproperty [ --media-loading-indicator-opacity = 0 ] - `opacity` property of loading indicator. Set to 1 to force it to be visible.\n * @cssproperty [ --media-loading-indicator-transition-delay = 500ms ] - `transition-delay` property of loading indicator. Make sure to include units.\n * @cssproperty --media-loading-indicator-icon-width - `width` of loading icon.\n * @cssproperty [ --media-loading-indicator-icon-height = 100px ] - `height` of loading icon.\n */\nclass MediaLoadingIndicator extends globalThis.HTMLElement {\n  #mediaController: MediaController;\n  #delay = DEFAULT_LOADING_DELAY;\n\n  static get observedAttributes(): string[] {\n    return [\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER,\n      MediaUIAttributes.MEDIA_PAUSED,\n      MediaUIAttributes.MEDIA_LOADING,\n      Attributes.LOADING_DELAY,\n    ];\n  }\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      const shadow = this.attachShadow({ mode: 'open' });\n      const indicatorHTML = template.content.cloneNode(true);\n      shadow.appendChild(indicatorHTML);\n    }\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (attrName === Attributes.LOADING_DELAY && oldValue !== newValue) {\n      this.loadingDelay = Number(newValue);\n    } else if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue && this.isConnected) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  connectedCallback(): void {\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      // @ts-ignore\n      this.#mediaController = (this.getRootNode() as Document)?.getElementById(\n        mediaControllerId\n      );\n      this.#mediaController?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n  }\n\n  /**\n   * Delay in ms\n   */\n  get loadingDelay(): number {\n    return this.#delay;\n  }\n\n  set loadingDelay(delay: number) {\n    this.#delay = delay;\n\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    style.setProperty(\n      '--_loading-indicator-delay',\n      `var(--media-loading-indicator-transition-delay, ${delay}ms)`\n    );\n  }\n\n  /**\n   * Is the media paused\n   */\n  get mediaPaused(): boolean {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value: boolean) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n  /**\n   * Is the media loading\n   */\n  get mediaLoading(): boolean {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_LOADING);\n  }\n\n  set mediaLoading(value: boolean) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_LOADING, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-loading-indicator')) {\n  globalThis.customElements.define(\n    'media-loading-indicator',\n    MediaLoadingIndicator\n  );\n}\n\nexport default MediaLoadingIndicator;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { tooltipLabels, verbs } from './labels/labels.js';\nimport { getStringAttr, setStringAttr } from './utils/element-utils.js';\n\nconst { MEDIA_VOLUME_LEVEL } = MediaUIAttributes;\n\nconst offIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"M16.5 12A4.5 4.5 0 0 0 14 8v2.18l2.45 2.45a4.22 4.22 0 0 0 .05-.63Zm2.5 0a6.84 6.84 0 0 1-.54 2.64L20 16.15A8.8 8.8 0 0 0 21 12a9 9 0 0 0-7-8.77v2.06A7 7 0 0 1 19 12ZM4.27 3 3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25A6.92 6.92 0 0 1 14 18.7v2.06A9 9 0 0 0 17.69 19l2 2.05L21 19.73l-9-9L4.27 3ZM12 4 9.91 6.09 12 8.18V4Z\"/>\n</svg>`;\n\nconst lowIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"M3 9v6h4l5 5V4L7 9H3Zm13.5 3A4.5 4.5 0 0 0 14 8v8a4.47 4.47 0 0 0 2.5-4Z\"/>\n</svg>`;\n\nconst highIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"M3 9v6h4l5 5V4L7 9H3Zm13.5 3A4.5 4.5 0 0 0 14 8v8a4.47 4.47 0 0 0 2.5-4ZM14 3.23v2.06a7 7 0 0 1 0 13.42v2.06a9 9 0 0 0 0-17.54Z\"/>\n</svg>`;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/ `\n  <style>\n  ${/* Default to High slot/icon. */ ''}\n  :host(:not([${MEDIA_VOLUME_LEVEL}])) slot[name=icon] slot:not([name=high]), \n  :host([${MEDIA_VOLUME_LEVEL}=high]) slot[name=icon] slot:not([name=high]) {\n    display: none !important;\n  }\n\n  :host([${MEDIA_VOLUME_LEVEL}=off]) slot[name=icon] slot:not([name=off]) {\n    display: none !important;\n  }\n\n  :host([${MEDIA_VOLUME_LEVEL}=low]) slot[name=icon] slot:not([name=low]) {\n    display: none !important;\n  }\n\n  :host([${MEDIA_VOLUME_LEVEL}=medium]) slot[name=icon] slot:not([name=medium]) {\n    display: none !important;\n  }\n\n  :host(:not([${MEDIA_VOLUME_LEVEL}=off])) slot[name=tooltip-unmute],\n  :host([${MEDIA_VOLUME_LEVEL}=off]) slot[name=tooltip-mute] {\n    display: none;\n  }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"off\">${offIcon}</slot>\n    <slot name=\"low\">${lowIcon}</slot>\n    <slot name=\"medium\">${lowIcon}</slot>\n    <slot name=\"high\">${highIcon}</slot>\n  </slot>\n`;\n\nconst tooltipContent = /*html*/ `\n  <slot name=\"tooltip-mute\">${tooltipLabels.MUTE}</slot>\n  <slot name=\"tooltip-unmute\">${tooltipLabels.UNMUTE}</slot>\n`;\n\nconst updateAriaLabel = (el: MediaMuteButton) => {\n  const muted = el.mediaVolumeLevel === 'off';\n  const label = muted ? verbs.UNMUTE() : verbs.MUTE();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot off - An element shown when the media is muted or the media\u2019s volume is 0.\n * @slot low - An element shown when the media\u2019s volume is \u201Clow\u201D (less than 50% / 0.5).\n * @slot medium - An element shown when the media\u2019s volume is \u201Cmedium\u201D (between 50% / 0.5 and 75% / 0.75).\n * @slot high - An element shown when the media\u2019s volume is \u201Chigh\u201D (75% / 0.75 or greater).\n * @slot icon - An element for representing all states in a single icon\n *\n * @attr {string} mediavolumelevel - (read-only) Set to the media volume level.\n *\n * @cssproperty [--media-mute-button-display = inline-flex] - `display` property of button.\n */\nclass MediaMuteButton extends MediaChromeButton {\n  static get observedAttributes(): string[] {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_VOLUME_LEVEL];\n  }\n\n  constructor(options: object = {}) {\n    super({ slotTemplate, tooltipContent, ...options });\n  }\n\n  connectedCallback(): void {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (attrName === MediaUIAttributes.MEDIA_VOLUME_LEVEL) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {string | undefined}\n   */\n  get mediaVolumeLevel(): string | undefined {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_VOLUME_LEVEL);\n  }\n\n  set mediaVolumeLevel(value: string | undefined) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_VOLUME_LEVEL, value);\n  }\n\n  handleClick(): void {\n    const eventName: string =\n      this.mediaVolumeLevel === 'off'\n        ? MediaUIEvents.MEDIA_UNMUTE_REQUEST\n        : MediaUIEvents.MEDIA_MUTE_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-mute-button')) {\n  globalThis.customElements.define('media-mute-button', MediaMuteButton);\n}\n\nexport default MediaMuteButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { tooltipLabels, verbs } from './labels/labels.js';\nimport {\n  getBooleanAttr,\n  getStringAttr,\n  setBooleanAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst pipIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 28 24\">\n  <path d=\"M24 3H4a1 1 0 0 0-1 1v16a1 1 0 0 0 1 1h20a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1Zm-1 16H5V5h18v14Zm-3-8h-7v5h7v-5Z\"/>\n</svg>`;\n\nconst slotTemplate: HTMLTemplateElement = document.createElement('template');\nslotTemplate.innerHTML = /*html*/ `\n  <style>\n  :host([${\n    MediaUIAttributes.MEDIA_IS_PIP\n  }]) slot[name=icon] slot:not([name=exit]) {\n    display: none !important;\n  }\n\n  ${/* Double negative, but safer if display doesn't equal 'block' */ ''}\n  :host(:not([${\n    MediaUIAttributes.MEDIA_IS_PIP\n  }])) slot[name=icon] slot:not([name=enter]) {\n    display: none !important;\n  }\n\n  :host([${MediaUIAttributes.MEDIA_IS_PIP}]) slot[name=tooltip-enter],\n  :host(:not([${MediaUIAttributes.MEDIA_IS_PIP}])) slot[name=tooltip-exit] {\n    display: none;\n  }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"enter\">${pipIcon}</slot>\n    <slot name=\"exit\">${pipIcon}</slot>\n  </slot>\n`;\n\nconst tooltipContent = /*html*/ `\n  <slot name=\"tooltip-enter\">${tooltipLabels.ENTER_PIP}</slot>\n  <slot name=\"tooltip-exit\">${tooltipLabels.EXIT_PIP}</slot>\n`;\n\nconst updateAriaLabel = (el: MediaPipButton): void => {\n  const label = el.mediaIsPip ? verbs.EXIT_PIP() : verbs.ENTER_PIP();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot enter - An element shown when the media is not in PIP mode and pressing the button will trigger entering PIP mode.\n * @slot exit - An element shown when the media is in PIP and pressing the button will trigger exiting PIP mode.\n * @slot icon - An element for representing enter and exit states in a single icon\n *\n * @attr {(unavailable|unsupported)} mediapipunavailable - (read-only) Set if picture-in-picture is unavailable.\n * @attr {boolean} mediaispip - (read-only) Present if the media is playing in picture-in-picture.\n *\n * @cssproperty [--media-pip-button-display = inline-flex] - `display` property of button.\n */\nclass MediaPipButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_IS_PIP,\n      MediaUIAttributes.MEDIA_PIP_UNAVAILABLE,\n    ];\n  }\n\n  constructor(options: object = {}) {\n    super({ slotTemplate, tooltipContent, ...options });\n  }\n\n  connectedCallback(): void {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (attrName === MediaUIAttributes.MEDIA_IS_PIP) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * @type {string | undefined} Pip unavailability state\n   */\n  get mediaPipUnavailable(): string | undefined {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_PIP_UNAVAILABLE);\n  }\n\n  set mediaPipUnavailable(value: string | undefined) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_PIP_UNAVAILABLE, value);\n  }\n\n  /**\n   * @type {boolean} Is the media currently playing picture-in-picture\n   */\n  get mediaIsPip(): boolean {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_IS_PIP);\n  }\n\n  set mediaIsPip(value: boolean) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_IS_PIP, value);\n  }\n\n  handleClick(): void {\n    const eventName = this.mediaIsPip\n      ? MediaUIEvents.MEDIA_EXIT_PIP_REQUEST\n      : MediaUIEvents.MEDIA_ENTER_PIP_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-pip-button')) {\n  globalThis.customElements.define('media-pip-button', MediaPipButton);\n}\n\nexport default MediaPipButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { nouns, tooltipLabels } from './labels/labels.js';\nimport { AttributeTokenList } from './utils/attribute-token-list.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\n\nexport const Attributes = {\n  RATES: 'rates',\n};\n\nexport const DEFAULT_RATES = [1, 1.2, 1.5, 1.7, 2];\nexport const DEFAULT_RATE = 1;\n\nconst slotTemplate = document.createElement('template');\nslotTemplate.innerHTML = /*html*/ `\n  <style>\n    :host {\n      min-width: 5ch;\n      padding: var(--media-button-padding, var(--media-control-padding, 10px 5px));\n    }\n  </style>\n  <slot name=\"icon\"></slot>\n`;\n\n/**\n * @attr {string} rates - Set custom playback rates for the user to choose from.\n * @attr {string} mediaplaybackrate - (read-only) Set to the media playback rate.\n *\n * @cssproperty [--media-playback-rate-button-display = inline-flex] - `display` property of button.\n */\nclass MediaPlaybackRateButton extends MediaChromeButton {\n  static get observedAttributes() {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_PLAYBACK_RATE,\n      Attributes.RATES,\n    ];\n  }\n\n  #rates = new AttributeTokenList(this, Attributes.RATES, {\n    defaultValue: DEFAULT_RATES,\n  });\n\n  container: HTMLSlotElement;\n\n  constructor(options = {}) {\n    super({\n      slotTemplate,\n      tooltipContent: tooltipLabels.PLAYBACK_RATE,\n      ...options,\n    });\n    this.container = this.shadowRoot.querySelector('slot[name=\"icon\"]');\n    this.container.innerHTML = `${DEFAULT_RATE}x`;\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === Attributes.RATES) {\n      this.#rates.value = newValue;\n    }\n    if (attrName === MediaUIAttributes.MEDIA_PLAYBACK_RATE) {\n      const newPlaybackRate = newValue ? +newValue : Number.NaN;\n      const playbackRate = !Number.isNaN(newPlaybackRate)\n        ? newPlaybackRate\n        : DEFAULT_RATE;\n      this.container.innerHTML = `${playbackRate}x`;\n      this.setAttribute('aria-label', nouns.PLAYBACK_RATE({ playbackRate }));\n    }\n  }\n\n  /**\n   * @type { AttributeTokenList | Array<number> | undefined} Will return a DOMTokenList.\n   * Setting a value will accept an array of numbers.\n   */\n  get rates() {\n    return this.#rates;\n  }\n\n  set rates(value) {\n    if (!value) {\n      this.#rates.value = '';\n    } else if (Array.isArray(value)) {\n      this.#rates.value = value.join(' ');\n    }\n  }\n\n  /**\n   * @type {number} The current playback rate\n   */\n  get mediaPlaybackRate() {\n    return getNumericAttr(\n      this,\n      MediaUIAttributes.MEDIA_PLAYBACK_RATE,\n      DEFAULT_RATE\n    );\n  }\n\n  set mediaPlaybackRate(value) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_PLAYBACK_RATE, value);\n  }\n\n  handleClick() {\n    const availableRates = Array.from(this.rates.values(), (str) => +str).sort(\n      (a, b) => a - b\n    );\n\n    const detail =\n      availableRates.find((r) => r > this.mediaPlaybackRate) ??\n      availableRates[0] ??\n      DEFAULT_RATE;\n    const evt = new globalThis.CustomEvent(\n      MediaUIEvents.MEDIA_PLAYBACK_RATE_REQUEST,\n      { composed: true, bubbles: true, detail }\n    );\n    this.dispatchEvent(evt);\n  }\n}\n\nif (!globalThis.customElements.get('media-playback-rate-button')) {\n  globalThis.customElements.define(\n    'media-playback-rate-button',\n    MediaPlaybackRateButton\n  );\n}\n\nexport default MediaPlaybackRateButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { tooltipLabels, verbs } from './labels/labels.js';\nimport { getBooleanAttr, setBooleanAttr } from './utils/element-utils.js';\n\nconst playIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"m6 21 15-9L6 3v18Z\"/>\n</svg>`;\n\nconst pauseIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 24 24\">\n  <path d=\"M6 20h4V4H6v16Zm8-16v16h4V4h-4Z\"/>\n</svg>`;\n\nconst slotTemplate: HTMLTemplateElement = document.createElement('template');\nslotTemplate.innerHTML = /*html*/ `\n  <style>\n    :host([${MediaUIAttributes.MEDIA_PAUSED}]) slot[name=pause],\n    :host(:not([${MediaUIAttributes.MEDIA_PAUSED}])) slot[name=play] {\n      display: none !important;\n    }\n\n    :host([${MediaUIAttributes.MEDIA_PAUSED}]) slot[name=tooltip-pause],\n    :host(:not([${MediaUIAttributes.MEDIA_PAUSED}])) slot[name=tooltip-play] {\n      display: none;\n    }\n  </style>\n\n  <slot name=\"icon\">\n    <slot name=\"play\">${playIcon}</slot>\n    <slot name=\"pause\">${pauseIcon}</slot>\n  </slot>\n`;\n\nconst tooltipContent = /*html*/ `\n  <slot name=\"tooltip-play\">${tooltipLabels.PLAY}</slot>\n  <slot name=\"tooltip-pause\">${tooltipLabels.PAUSE}</slot>\n`;\n\nconst updateAriaLabel = (el: any): void => {\n  const label = el.mediaPaused ? verbs.PLAY() : verbs.PAUSE();\n  el.setAttribute('aria-label', label);\n};\n\n/**\n * @slot play - An element shown when the media is paused and pressing the button will start media playback.\n * @slot pause - An element shown when the media is playing and pressing the button will pause media playback.\n * @slot icon - An element for representing play and pause states in a single icon\n *\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n *\n * @cssproperty [--media-play-button-display = inline-flex] - `display` property of button.\n */\nclass MediaPlayButton extends MediaChromeButton {\n  static get observedAttributes(): string[] {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_PAUSED,\n      MediaUIAttributes.MEDIA_ENDED,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({ slotTemplate, tooltipContent, ...options });\n  }\n\n  connectedCallback(): void {\n    updateAriaLabel(this);\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (attrName === MediaUIAttributes.MEDIA_PAUSED) {\n      updateAriaLabel(this);\n    }\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  /**\n   * Is the media paused\n   */\n  get mediaPaused(): boolean {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value: boolean) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n\n  handleClick(): void {\n    const eventName = this.mediaPaused\n      ? MediaUIEvents.MEDIA_PLAY_REQUEST\n      : MediaUIEvents.MEDIA_PAUSE_REQUEST;\n    this.dispatchEvent(\n      new globalThis.CustomEvent(eventName, { composed: true, bubbles: true })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-play-button')) {\n  globalThis.customElements.define('media-play-button', MediaPlayButton);\n}\n\nexport { MediaPlayButton };\nexport default MediaPlayButton;\n", "import { globalThis, document } from './utils/server-safe-globals.js';\nimport { getStringAttr, setStringAttr } from './utils/element-utils.js';\n\nexport const Attributes = {\n  PLACEHOLDER_SRC: 'placeholdersrc',\n  SRC: 'src',\n};\n\nconst template: HTMLTemplateElement = document.createElement('template');\n\ntemplate.innerHTML = /*html*/ `\n  <style>\n    :host {\n      pointer-events: none;\n      display: var(--media-poster-image-display, inline-block);\n      box-sizing: border-box;\n    }\n\n    img {\n      max-width: 100%;\n      max-height: 100%;\n      min-width: 100%;\n      min-height: 100%;\n      background-repeat: no-repeat;\n      background-position: var(--media-poster-image-background-position, var(--media-object-position, center));\n      background-size: var(--media-poster-image-background-size, var(--media-object-fit, contain));\n      object-fit: var(--media-object-fit, contain);\n      object-position: var(--media-object-position, center);\n    }\n  </style>\n\n  <img part=\"poster img\" aria-hidden=\"true\" id=\"image\"/>\n`;\n\nconst unsetBackgroundImage = (el: HTMLElement): void => {\n  el.style.removeProperty('background-image');\n};\nconst setBackgroundImage = (el: HTMLElement, image: string): void => {\n  el.style['background-image'] = `url('${image}')`;\n};\n\n/**\n * @attr {string} placeholdersrc - Placeholder image source URL, often a blurhash data URL.\n * @attr {string} src - Poster image source URL.\n *\n * @cssproperty --media-poster-image-display - `display` property of poster image.\n * @cssproperty --media-poster-image-background-position - `background-position` of poster image.\n * @cssproperty --media-poster-image-background-size - `background-size` of poster image.\n * @cssproperty --media-object-fit - `object-fit` of poster image.\n * @cssproperty --media-object-position - `object-position` of poster image.\n */\nclass MediaPosterImage extends globalThis.HTMLElement {\n  static get observedAttributes(): string[] {\n    return [Attributes.PLACEHOLDER_SRC, Attributes.SRC];\n  }\n\n  image: HTMLImageElement;\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    this.image = this.shadowRoot.querySelector('#image');\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (attrName === Attributes.SRC) {\n      if (newValue == null) {\n        this.image.removeAttribute(Attributes.SRC);\n      } else {\n        this.image.setAttribute(Attributes.SRC, newValue);\n      }\n    }\n\n    if (attrName === Attributes.PLACEHOLDER_SRC) {\n      if (newValue == null) {\n        unsetBackgroundImage(this.image);\n      } else {\n        setBackgroundImage(this.image, newValue);\n      }\n    }\n  }\n\n  /**\n   *\n   */\n  get placeholderSrc(): string | undefined {\n    return getStringAttr(this, Attributes.PLACEHOLDER_SRC);\n  }\n\n  set placeholderSrc(value: string | undefined) {\n    setStringAttr(this, Attributes.SRC, value);\n  }\n\n  /**\n   *\n   */\n  get src(): string | undefined {\n    return getStringAttr(this, Attributes.SRC);\n  }\n\n  set src(value: string | undefined) {\n    setStringAttr(this, Attributes.SRC, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-poster-image')) {\n  globalThis.customElements.define('media-poster-image', MediaPosterImage);\n}\n\nexport default MediaPosterImage;\n", "import { MediaTextDisplay } from './media-text-display.js';\nimport { globalThis } from './utils/server-safe-globals.js';\nimport { MediaUIAttributes } from './constants.js';\nimport { getStringAttr, setStringAttr } from './utils/element-utils.js';\n\n/**\n * @attr {string} mediapreviewchapter - (read-only) Set to the timeline preview chapter.\n *\n * @cssproperty [--media-preview-chapter-display-display = inline-flex] - `display` property of display.\n */\nclass MediaPreviewChapterDisplay extends MediaTextDisplay {\n  #slot: HTMLSlotElement;\n\n  static get observedAttributes(): string[] {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_PREVIEW_CHAPTER,\n    ];\n  }\n\n  constructor() {\n    super();\n    this.#slot = this.shadowRoot.querySelector('slot') as HTMLSlotElement;\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === MediaUIAttributes.MEDIA_PREVIEW_CHAPTER) {\n      // Only update if it changed, preview events are called a few times per second.\n      if (newValue !== oldValue && newValue != null) {\n        this.#slot.textContent = newValue;\n\n        if (newValue !== '') {\n          this.setAttribute('aria-valuetext', `chapter: ${newValue}`);\n        } else {\n          this.removeAttribute('aria-valuetext');\n        }\n      }\n    }\n  }\n\n  /**\n   * @type {string | undefined} Timeline preview chapter\n   */\n  get mediaPreviewChapter(): string | undefined {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_CHAPTER);\n  }\n\n  set mediaPreviewChapter(value: string | undefined) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_CHAPTER, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-preview-chapter-display')) {\n  globalThis.customElements.define(\n    'media-preview-chapter-display',\n    MediaPreviewChapterDisplay\n  );\n}\n\nexport default MediaPreviewChapterDisplay;\n", "import { globalThis, document } from './utils/server-safe-globals.js';\nimport {\n  MediaUIAttributes,\n  MediaStateReceiverAttributes,\n} from './constants.js';\nimport {\n  getOrInsertCSSRule,\n  getStringAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\nimport MediaController from './media-controller.js';\n\nconst template: HTMLTemplateElement = document.createElement('template');\ntemplate.innerHTML = /*html*/ `\n  <style>\n    :host {\n      box-sizing: border-box;\n      display: var(--media-control-display, var(--media-preview-thumbnail-display, inline-block));\n      overflow: hidden;\n    }\n\n    img {\n      display: none;\n      position: relative;\n    }\n  </style>\n  <img crossorigin loading=\"eager\" decoding=\"async\">\n`;\n\n/**\n *\n * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).\n * @attr {string} mediapreviewimage - (read-only) Set to the timeline preview image URL.\n * @attr {string} mediapreviewcoords - (read-only) Set to the active preview image coordinates.\n *\n * @cssproperty [--media-preview-thumbnail-display = inline-block] - `display` property of display.\n * @cssproperty [--media-control-display = inline-block] - `display` property of control.\n */\nclass MediaPreviewThumbnail extends globalThis.HTMLElement {\n  #mediaController: MediaController;\n\n  static get observedAttributes() {\n    return [\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER,\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n      MediaUIAttributes.MEDIA_PREVIEW_COORDS,\n    ];\n  }\n\n  imgWidth: number;\n  imgHeight: number;\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n  }\n\n  connectedCallback(): void {\n    const mediaControllerId = this.getAttribute(\n      MediaStateReceiverAttributes.MEDIA_CONTROLLER\n    );\n    if (mediaControllerId) {\n      this.#mediaController =\n        // @ts-ignore\n        this.getRootNode()?.getElementById(mediaControllerId);\n      this.#mediaController?.associateElement?.(this);\n    }\n  }\n\n  disconnectedCallback(): void {\n    // Use cached mediaController, getRootNode() doesn't work if disconnected.\n    this.#mediaController?.unassociateElement?.(this);\n    this.#mediaController = null;\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (\n      [\n        MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n        MediaUIAttributes.MEDIA_PREVIEW_COORDS,\n      ].includes(attrName as any)\n    ) {\n      this.update();\n    }\n    if (attrName === MediaStateReceiverAttributes.MEDIA_CONTROLLER) {\n      if (oldValue) {\n        this.#mediaController?.unassociateElement?.(this);\n        this.#mediaController = null;\n      }\n      if (newValue && this.isConnected) {\n        // @ts-ignore\n        this.#mediaController = this.getRootNode()?.getElementById(newValue);\n        this.#mediaController?.associateElement?.(this);\n      }\n    }\n  }\n\n  /**\n   * @type {string | undefined} The url of the preview image\n   */\n  get mediaPreviewImage() {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_IMAGE);\n  }\n\n  set mediaPreviewImage(value) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_IMAGE, value);\n  }\n\n  /**\n   * @type {Array<number> | undefined} Fixed length array [x, y, width, height] or undefined\n   */\n  get mediaPreviewCoords() {\n    const attrVal = this.getAttribute(MediaUIAttributes.MEDIA_PREVIEW_COORDS);\n\n    if (!attrVal) return undefined;\n\n    return attrVal.split(/\\s+/).map((coord) => +coord);\n  }\n\n  set mediaPreviewCoords(value) {\n    if (!value) {\n      this.removeAttribute(MediaUIAttributes.MEDIA_PREVIEW_COORDS);\n      return;\n    }\n\n    this.setAttribute(MediaUIAttributes.MEDIA_PREVIEW_COORDS, value.join(' '));\n  }\n\n  update(): void {\n    const coords = this.mediaPreviewCoords;\n    const previewImage = this.mediaPreviewImage;\n\n    if (!(coords && previewImage)) return;\n\n    const [x, y, w, h] = coords;\n    const src = previewImage.split('#')[0];\n\n    const computedStyle = getComputedStyle(this);\n    const { maxWidth, maxHeight, minWidth, minHeight } = computedStyle;\n    const maxRatio = Math.min(parseInt(maxWidth) / w, parseInt(maxHeight) / h);\n    const minRatio = Math.max(parseInt(minWidth) / w, parseInt(minHeight) / h);\n\n    // maxRatio scales down and takes priority, minRatio scales up.\n    const isScalingDown = maxRatio < 1;\n    const scale = isScalingDown ? maxRatio : minRatio > 1 ? minRatio : 1;\n\n    const { style } = getOrInsertCSSRule(this.shadowRoot, ':host');\n    const imgStyle = getOrInsertCSSRule(this.shadowRoot, 'img').style;\n    const img = this.shadowRoot.querySelector('img');\n\n    // Revert one set of extremum to its initial value on a known scale direction.\n    const extremum = isScalingDown ? 'min' : 'max';\n    style.setProperty(`${extremum}-width`, 'initial', 'important');\n    style.setProperty(`${extremum}-height`, 'initial', 'important');\n    style.width = `${w * scale}px`;\n    style.height = `${h * scale}px`;\n\n    const resize = () => {\n      imgStyle.width = `${this.imgWidth * scale}px`;\n      imgStyle.height = `${this.imgHeight * scale}px`;\n      imgStyle.display = 'block';\n    };\n\n    if (img.src !== src) {\n      img.onload = () => {\n        this.imgWidth = img.naturalWidth;\n        this.imgHeight = img.naturalHeight;\n        resize();\n      };\n      img.src = src;\n      resize();\n    }\n\n    resize();\n    imgStyle.transform = `translate(-${x * scale}px, -${y * scale}px)`;\n  }\n}\n\nif (!globalThis.customElements.get('media-preview-thumbnail')) {\n  globalThis.customElements.define(\n    'media-preview-thumbnail',\n    MediaPreviewThumbnail\n  );\n}\n\nexport default MediaPreviewThumbnail;\n", "import { MediaTextDisplay } from './media-text-display.js';\nimport { globalThis } from './utils/server-safe-globals.js';\nimport { formatTime } from './utils/time.js';\nimport { MediaUIAttributes } from './constants.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\n/**\n * @attr {string} mediapreviewtime - (read-only) Set to the timeline preview time.\n *\n * @cssproperty [--media-preview-time-display-display = inline-flex] - `display` property of display.\n */\nclass MediaPreviewTimeDisplay extends MediaTextDisplay {\n  #slot: HTMLSlotElement;\n\n  static get observedAttributes() {\n    return [...super.observedAttributes, MediaUIAttributes.MEDIA_PREVIEW_TIME];\n  }\n\n  constructor() {\n    super();\n    this.#slot = this.shadowRoot.querySelector('slot');\n    this.#slot.textContent = formatTime(0);\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (attrName === MediaUIAttributes.MEDIA_PREVIEW_TIME && newValue != null) {\n      this.#slot.textContent = formatTime(parseFloat(newValue));\n    }\n  }\n\n  /**\n   * Timeline preview time\n   */\n  get mediaPreviewTime(): number | undefined {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_PREVIEW_TIME);\n  }\n\n  set mediaPreviewTime(value: number | undefined) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_PREVIEW_TIME, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-preview-time-display')) {\n  globalThis.customElements.define(\n    'media-preview-time-display',\n    MediaPreviewTimeDisplay\n  );\n}\n\nexport default MediaPreviewTimeDisplay;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\nimport { tooltipLabels, verbs } from './labels/labels.js';\nimport { getSlotted, updateIconText } from './utils/element-utils.js';\n\nexport const Attributes = {\n  SEEK_OFFSET: 'seekoffset',\n};\n\nconst DEFAULT_SEEK_OFFSET = 30;\n\nconst backwardIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 20 24\"><defs><style>.text{font-size:8px;font-family:Arial-BoldMT, Arial;font-weight:700;}</style></defs><text class=\"text value\" transform=\"translate(2.18 19.87)\">${DEFAULT_SEEK_OFFSET}</text><path d=\"M10 6V3L4.37 7 10 10.94V8a5.54 5.54 0 0 1 1.9 10.48v2.12A7.5 7.5 0 0 0 10 6Z\"/></svg>`;\n\nconst slotTemplate: HTMLTemplateElement = document.createElement('template');\nslotTemplate.innerHTML = `\n  <slot name=\"icon\">${backwardIcon}</slot>\n`;\n\nconst DEFAULT_TIME = 0;\n\n/**\n * @slot icon - The element shown for the seek backward button\u2019s display.\n *\n * @attr {string} seekoffset - Adjusts how much time (in seconds) the playhead should seek backward.\n * @attr {string} mediacurrenttime - (read-only) Set to the current media time.\n *\n * @cssproperty [--media-seek-backward-button-display = inline-flex] - `display` property of button.\n */\nclass MediaSeekBackwardButton extends MediaChromeButton {\n  static get observedAttributes(): string[] {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      Attributes.SEEK_OFFSET,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({\n      slotTemplate,\n      tooltipContent: tooltipLabels.SEEK_BACKWARD,\n      ...options,\n    });\n  }\n\n  connectedCallback(): void {\n    this.seekOffset = getNumericAttr(\n      this,\n      Attributes.SEEK_OFFSET,\n      DEFAULT_SEEK_OFFSET\n    );\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    _oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (attrName === Attributes.SEEK_OFFSET) {\n      this.seekOffset = getNumericAttr(\n        this,\n        Attributes.SEEK_OFFSET,\n        DEFAULT_SEEK_OFFSET\n      );\n    }\n\n    super.attributeChangedCallback(attrName, _oldValue, newValue);\n  }\n\n  // Own props\n\n  /**\n   * Seek amount in seconds\n   */\n  get seekOffset(): number {\n    return getNumericAttr(this, Attributes.SEEK_OFFSET, DEFAULT_SEEK_OFFSET);\n  }\n\n  set seekOffset(value: number) {\n    setNumericAttr(this, Attributes.SEEK_OFFSET, value);\n    this.setAttribute(\n      'aria-label',\n      verbs.SEEK_BACK_N_SECS({ seekOffset: this.seekOffset })\n    );\n    updateIconText(getSlotted(this, 'icon'), this.seekOffset as any);\n  }\n\n  // Props derived from Media UI Attributes\n\n  /**\n   * The current time in seconds\n   */\n  get mediaCurrentTime(): number {\n    return getNumericAttr(\n      this,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      DEFAULT_TIME\n    );\n  }\n\n  set mediaCurrentTime(time: number) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, time);\n  }\n\n  handleClick(): void {\n    const detail = Math.max(this.mediaCurrentTime - this.seekOffset, 0);\n    const evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n      composed: true,\n      bubbles: true,\n      detail,\n    });\n    this.dispatchEvent(evt);\n  }\n}\n\nif (!globalThis.customElements.get('media-seek-backward-button')) {\n  globalThis.customElements.define(\n    'media-seek-backward-button',\n    MediaSeekBackwardButton\n  );\n}\n\nexport default MediaSeekBackwardButton;\n", "import { MediaChromeButton } from './media-chrome-button.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { getNumericAttr, setNumericAttr } from './utils/element-utils.js';\nimport { tooltipLabels, verbs } from './labels/labels.js';\nimport { getSlotted, updateIconText } from './utils/element-utils.js';\n\nexport const Attributes = {\n  SEEK_OFFSET: 'seekoffset',\n};\n\nconst DEFAULT_SEEK_OFFSET = 30;\n\nconst forwardIcon = `<svg aria-hidden=\"true\" viewBox=\"0 0 20 24\"><defs><style>.text{font-size:8px;font-family:Arial-BoldMT, Arial;font-weight:700;}</style></defs><text class=\"text value\" transform=\"translate(8.9 19.87)\">${DEFAULT_SEEK_OFFSET}</text><path d=\"M10 6V3l5.61 4L10 10.94V8a5.54 5.54 0 0 0-1.9 10.48v2.12A7.5 7.5 0 0 1 10 6Z\"/></svg>`;\n\nconst slotTemplate: HTMLTemplateElement = document.createElement('template');\nslotTemplate.innerHTML = `\n  <slot name=\"icon\">${forwardIcon}</slot>\n`;\n\nconst DEFAULT_TIME = 0;\n\n/**\n * @slot icon - The element shown for the seek forward button\u2019s display.\n *\n * @attr {string} seekoffset - Adjusts how much time (in seconds) the playhead should seek forward.\n * @attr {string} mediacurrenttime - (read-only) Set to the current media time.\n *\n * @cssproperty [--media-seek-forward-button-display = inline-flex] - `display` property of button.\n */\nclass MediaSeekForwardButton extends MediaChromeButton {\n  static get observedAttributes(): string[] {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      Attributes.SEEK_OFFSET,\n    ];\n  }\n\n  constructor(options = {}) {\n    super({\n      slotTemplate,\n      tooltipContent: tooltipLabels.SEEK_FORWARD,\n      ...options,\n    });\n  }\n\n  connectedCallback(): void {\n    this.seekOffset = getNumericAttr(\n      this,\n      Attributes.SEEK_OFFSET,\n      DEFAULT_SEEK_OFFSET\n    );\n    super.connectedCallback();\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    _oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (attrName === Attributes.SEEK_OFFSET) {\n      this.seekOffset = getNumericAttr(\n        this,\n        Attributes.SEEK_OFFSET,\n        DEFAULT_SEEK_OFFSET\n      );\n    }\n\n    super.attributeChangedCallback(attrName, _oldValue, newValue);\n  }\n\n  // Own props\n\n  /**\n   * Seek amount in seconds\n   */\n  get seekOffset(): number {\n    return getNumericAttr(this, Attributes.SEEK_OFFSET, DEFAULT_SEEK_OFFSET);\n  }\n\n  set seekOffset(value: number) {\n    setNumericAttr(this, Attributes.SEEK_OFFSET, value);\n    this.setAttribute(\n      'aria-label',\n      verbs.SEEK_FORWARD_N_SECS({ seekOffset: this.seekOffset })\n    );\n    updateIconText(getSlotted(this, 'icon'), this.seekOffset as any);\n  }\n\n  // Props derived from Media UI Attributes\n\n  /**\n   * The current time in seconds\n   */\n  get mediaCurrentTime(): number {\n    return getNumericAttr(\n      this,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      DEFAULT_TIME\n    );\n  }\n\n  set mediaCurrentTime(time: number) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, time);\n  }\n\n  handleClick(): void {\n    const detail = this.mediaCurrentTime + this.seekOffset;\n    const evt = new globalThis.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n      composed: true,\n      bubbles: true,\n      detail,\n    });\n    this.dispatchEvent(evt);\n  }\n}\n\nif (!globalThis.customElements.get('media-seek-forward-button')) {\n  globalThis.customElements.define(\n    'media-seek-forward-button',\n    MediaSeekForwardButton\n  );\n}\n\nexport default MediaSeekForwardButton;\n", "import { MediaTextDisplay } from './media-text-display.js';\nimport {\n  getBooleanAttr,\n  getNumericAttr,\n  getOrInsertCSSRule,\n  setBooleanAttr,\n  setNumericAttr,\n} from './utils/element-utils.js';\nimport { globalThis } from './utils/server-safe-globals.js';\nimport { formatAsTimePhrase, formatTime } from './utils/time.js';\nimport { MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\n\nexport const Attributes = {\n  REMAINING: 'remaining',\n  SHOW_DURATION: 'showduration',\n  NO_TOGGLE: 'notoggle',\n};\n\nconst CombinedAttributes = [\n  ...Object.values(Attributes),\n  MediaUIAttributes.MEDIA_CURRENT_TIME,\n  MediaUIAttributes.MEDIA_DURATION,\n  MediaUIAttributes.MEDIA_SEEKABLE,\n];\n\n// Todo: Use data locals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n\nconst ButtonPressedKeys = ['Enter', ' '];\n\nconst DEFAULT_TIMES_SEP = '&nbsp;/&nbsp;';\n\nconst formatTimesLabel = (\n  el: MediaTimeDisplay,\n  { timesSep = DEFAULT_TIMES_SEP } = {}\n): string => {\n  const showRemaining = el.hasAttribute(Attributes.REMAINING);\n  const showDuration = el.hasAttribute(Attributes.SHOW_DURATION);\n  const currentTime = el.mediaCurrentTime ?? 0;\n  const [, seekableEnd] = el.mediaSeekable ?? [];\n  let endTime = 0;\n  if (Number.isFinite(el.mediaDuration)) {\n    endTime = el.mediaDuration;\n  } else if (Number.isFinite(seekableEnd)) {\n    endTime = seekableEnd;\n  }\n\n  const timeLabel = showRemaining\n    ? formatTime(0 - (endTime - currentTime))\n    : formatTime(currentTime);\n\n  if (!showDuration) return timeLabel;\n  return `${timeLabel}${timesSep}${formatTime(endTime)}`;\n};\n\nconst DEFAULT_MISSING_TIME_PHRASE = 'video not loaded, unknown time.';\n\nconst updateAriaValueText = (el: MediaTimeDisplay): void => {\n  const currentTime = el.mediaCurrentTime;\n  const [, seekableEnd] = el.mediaSeekable ?? [];\n  let endTime = null;\n  if (Number.isFinite(el.mediaDuration)) {\n    endTime = el.mediaDuration;\n  } else if (Number.isFinite(seekableEnd)) {\n    endTime = seekableEnd;\n  }\n  if (currentTime == null || endTime === null) {\n    el.setAttribute('aria-valuetext', DEFAULT_MISSING_TIME_PHRASE);\n    return;\n  }\n  const showRemaining = el.hasAttribute(Attributes.REMAINING);\n  const showDuration = el.hasAttribute(Attributes.SHOW_DURATION);\n\n  const currentTimePhrase = showRemaining\n    ? formatAsTimePhrase(0 - (endTime - currentTime))\n    : formatAsTimePhrase(currentTime);\n\n  if (!showDuration) {\n    el.setAttribute('aria-valuetext', currentTimePhrase);\n    return;\n  }\n  const totalTimePhrase = formatAsTimePhrase(endTime);\n  const fullPhrase = `${currentTimePhrase} of ${totalTimePhrase}`;\n  el.setAttribute('aria-valuetext', fullPhrase);\n};\n\n/**\n * @attr {boolean} remaining - Toggle on to show the remaining time instead of elapsed time.\n * @attr {boolean} showduration - Toggle on to show the duration.\n * @attr {boolean} disabled - The Boolean disabled attribute makes the element not mutable or focusable.\n * @attr {boolean} notoggle - Set this to disable click or tap behavior that toggles between remaining and current time.\n * @attr {string} mediacurrenttime - (read-only) Set to the current media time.\n * @attr {string} mediaduration - (read-only) Set to the media duration.\n * @attr {string} mediaseekable - (read-only) Set to the seekable time ranges.\n *\n * @cssproperty [--media-time-display-display = inline-flex] - `display` property of display.\n * @cssproperty --media-control-hover-background - `background` of control hover state.\n */\nclass MediaTimeDisplay extends MediaTextDisplay {\n  #slot: HTMLSlotElement;\n\n  static get observedAttributes(): string[] {\n    return [...super.observedAttributes, ...CombinedAttributes, 'disabled'];\n  }\n\n  constructor() {\n    super();\n\n    this.#slot = this.shadowRoot.querySelector('slot');\n    this.#slot.innerHTML = `${formatTimesLabel(this)}`;\n  }\n\n  connectedCallback(): void {\n    const { style } = getOrInsertCSSRule(\n      this.shadowRoot,\n      ':host(:hover:not([notoggle]))'\n    );\n    style.setProperty('cursor', 'pointer');\n    style.setProperty(\n      'background',\n      'var(--media-control-hover-background, rgba(50 50 70 / .7))'\n    );\n\n    if (!this.hasAttribute('disabled')) {\n      this.enable();\n    }\n\n    this.setAttribute('role', 'progressbar');\n    this.setAttribute('aria-label', nouns.PLAYBACK_TIME());\n\n    const keyUpHandler = (evt) => {\n      const { key } = evt;\n      if (!ButtonPressedKeys.includes(key)) {\n        this.removeEventListener('keyup', keyUpHandler);\n        return;\n      }\n\n      this.toggleTimeDisplay();\n    };\n\n    this.addEventListener('keydown', (evt) => {\n      const { metaKey, altKey, key } = evt;\n      if (metaKey || altKey || !ButtonPressedKeys.includes(key)) {\n        this.removeEventListener('keyup', keyUpHandler);\n        return;\n      }\n      this.addEventListener('keyup', keyUpHandler);\n    });\n\n    this.addEventListener('click', this.toggleTimeDisplay);\n\n    super.connectedCallback();\n  }\n\n  toggleTimeDisplay(): void {\n    if (this.noToggle) {\n      return;\n    }\n    if (this.hasAttribute('remaining')) {\n      this.removeAttribute('remaining');\n    } else {\n      this.setAttribute('remaining', '');\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.disable();\n    super.disconnectedCallback();\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    if (CombinedAttributes.includes(attrName)) {\n      this.update();\n    } else if (attrName === 'disabled' && newValue !== oldValue) {\n      if (newValue == null) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n  }\n\n  enable(): void {\n    this.tabIndex = 0;\n  }\n\n  disable(): void {\n    this.tabIndex = -1;\n  }\n\n  // Own props\n\n  /**\n   * Whether to show the remaining time\n   */\n  get remaining(): boolean {\n    return getBooleanAttr(this, Attributes.REMAINING);\n  }\n\n  set remaining(show: boolean) {\n    setBooleanAttr(this, Attributes.REMAINING, show);\n  }\n\n  /**\n   * Whether to show the duration\n   */\n  get showDuration(): boolean {\n    return getBooleanAttr(this, Attributes.SHOW_DURATION);\n  }\n\n  set showDuration(show: boolean) {\n    setBooleanAttr(this, Attributes.SHOW_DURATION, show);\n  }\n\n  /**\n   * Disable the default behavior that toggles between current and remaining time\n   */\n  get noToggle(): boolean {\n    return getBooleanAttr(this, Attributes.NO_TOGGLE);\n  }\n\n  set noToggle(noToggle: boolean) {\n    setBooleanAttr(this, Attributes.NO_TOGGLE, noToggle);\n  }\n\n  // Props derived from media UI attributes\n\n  /**\n   * Get the duration\n   */\n  get mediaDuration(): number {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_DURATION);\n  }\n\n  set mediaDuration(time: number) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_DURATION, time);\n  }\n\n  /**\n   * The current time in seconds\n   */\n  get mediaCurrentTime(): number {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME);\n  }\n\n  set mediaCurrentTime(time: number) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, time);\n  }\n\n  /**\n   * Range of values that can be seeked to.\n   * An array of two numbers [start, end]\n   */\n  get mediaSeekable(): [number, number] {\n    const seekable = this.getAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n    if (!seekable) return undefined;\n    // Only currently supports a single, contiguous seekable range (CJP)\n    return seekable.split(':').map((time) => +time) as [number, number];\n  }\n\n  set mediaSeekable(range: [number, number]) {\n    if (range == null) {\n      this.removeAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n      return;\n    }\n    this.setAttribute(MediaUIAttributes.MEDIA_SEEKABLE, range.join(':'));\n  }\n\n  update(): void {\n    const timesLabel = formatTimesLabel(this);\n    updateAriaValueText(this);\n    // Only update if it changed, timeupdate events are called a few times per second.\n    if (timesLabel !== this.#slot.innerHTML) {\n      this.#slot.innerHTML = timesLabel;\n    }\n  }\n}\n\nif (!globalThis.customElements.get('media-time-display')) {\n  globalThis.customElements.define('media-time-display', MediaTimeDisplay);\n}\n\nexport default MediaTimeDisplay;\n", "type Range = { valueAsNumber: number };\n\n/**\n * Smoothly animate a range input accounting for hiccups and diverging playback.\n */\nexport class RangeAnimation {\n  fps: number;\n  callback: (value: number) => void;\n  duration: number;\n  playbackRate: number;\n\n  #range: Range;\n  #startTime: number;\n  #previousTime: number;\n  #deltaTime: number;\n  #frameCount: number;\n  #updateTimestamp: number;\n  #updateStartValue: number;\n  #lastRangeIncrease: number;\n  #id = 0;\n\n  constructor(range: Range, callback: (value: number) => void, fps: number) {\n    this.#range = range;\n    this.callback = callback;\n    this.fps = fps;\n  }\n\n  start() {\n    if (this.#id !== 0) return;\n\n    this.#previousTime = performance.now();\n    this.#startTime = this.#previousTime;\n    this.#frameCount = 0;\n    this.#animate();\n  }\n\n  stop() {\n    if (this.#id === 0) return;\n\n    cancelAnimationFrame(this.#id);\n    this.#id = 0;\n  }\n\n  update({ start, duration, playbackRate }) {\n    // 1. Always allow increases.\n    // 2. Allow a relatively large decrease (user action or Safari jumping back :s).\n    const increase = start - this.#range.valueAsNumber;\n    const durationDelta = Math.abs(duration - this.duration);\n    if (increase > 0 || increase < -0.03 || durationDelta >= 0.5) {\n      this.callback(start);\n    }\n\n    this.#updateStartValue = start;\n    this.#updateTimestamp = performance.now();\n    this.duration = duration;\n    this.playbackRate = playbackRate;\n  }\n\n  #animate = (now = performance.now()) => {\n    this.#id = requestAnimationFrame(this.#animate);\n    this.#deltaTime = performance.now() - this.#previousTime;\n    const fpsInterval = 1000 / this.fps;\n\n    if (this.#deltaTime > fpsInterval) {\n      // Get ready for next frame by setting previousTime=now, but also adjust for your\n      // specified fpsInterval not being a multiple of RAF's interval (16.7ms)\n      this.#previousTime = now - (this.#deltaTime % fpsInterval);\n\n      const fps = 1000 / ((now - this.#startTime) / ++this.#frameCount);\n      const delta = (now - this.#updateTimestamp) / 1000 / this.duration;\n      let value = this.#updateStartValue + delta * this.playbackRate;\n      const increase = value - this.#range.valueAsNumber;\n\n      // If the increase is negative, the animation was faster than the playhead.\n      // Can happen on video startup. Slow down the animation to match the playhead.\n      if (increase > 0) {\n        // A perfect increase at this frame rate should be this much.\n        this.#lastRangeIncrease = this.playbackRate / this.duration / fps;\n      } else {\n        this.#lastRangeIncrease = 0.995 * this.#lastRangeIncrease;\n        value = this.#range.valueAsNumber + this.#lastRangeIncrease;\n      }\n\n      this.callback(value);\n    }\n  };\n}\n", "import { globalThis, document } from './utils/server-safe-globals.js';\nimport { MediaChromeRange } from './media-chrome-range.js';\nimport './media-preview-thumbnail.js';\nimport './media-preview-time-display.js';\nimport './media-preview-chapter-display.js';\nimport { MediaUIEvents, MediaUIAttributes } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport { isValidNumber } from './utils/utils.js';\nimport { formatAsTimePhrase } from './utils/time.js';\nimport { isElementVisible } from './utils/element-utils.js';\nimport { RangeAnimation } from './utils/range-animation.js';\nimport {\n  getOrInsertCSSRule,\n  containsComposedNode,\n  closestComposedNode,\n  getBooleanAttr,\n  setBooleanAttr,\n  getNumericAttr,\n  setNumericAttr,\n  getStringAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\ntype Rects = {\n  box: { width: number; min: number; max: number };\n  range?: DOMRect;\n  bounds?: DOMRect;\n};\n\nconst DEFAULT_MISSING_TIME_PHRASE = 'video not loaded, unknown time.';\n\nconst updateAriaValueText = (el: any): void => {\n  const range = el.range;\n  const currentTimePhrase = formatAsTimePhrase(+calcTimeFromRangeValue(el));\n  const totalTimePhrase = formatAsTimePhrase(+el.mediaSeekableEnd);\n  const fullPhrase = !(currentTimePhrase && totalTimePhrase)\n    ? DEFAULT_MISSING_TIME_PHRASE\n    : `${currentTimePhrase} of ${totalTimePhrase}`;\n  range.setAttribute('aria-valuetext', fullPhrase);\n};\n\nconst template: HTMLTemplateElement = document.createElement('template');\ntemplate.innerHTML = /*html*/ `\n  <style>\n    :host {\n      --media-box-border-radius: 4px;\n      --media-box-padding-left: 10px;\n      --media-box-padding-right: 10px;\n      --media-preview-border-radius: var(--media-box-border-radius);\n      --media-box-arrow-offset: var(--media-box-border-radius);\n      --_control-background: var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .7)));\n      --_preview-background: var(--media-preview-background, var(--_control-background));\n\n      ${\n        /* 1% rail width trick was off in Safari, contain: layout seems to\n        prevent the horizontal overflow as well. */ ''\n      }\n      contain: layout;\n    }\n\n    #buffered {\n      background: var(--media-time-range-buffered-color, rgb(255 255 255 / .4));\n      position: absolute;\n      height: 100%;\n      will-change: width;\n    }\n\n    #preview-rail,\n    #current-rail {\n      width: 100%;\n      position: absolute;\n      left: 0;\n      bottom: 100%;\n      pointer-events: none;\n      will-change: transform;\n    }\n\n    [part~=\"box\"] {\n      width: min-content;\n      ${\n        /* absolute position is needed here so the box doesn't overflow the bounds */ ''\n      }\n      position: absolute;\n      bottom: 100%;\n      flex-direction: column;\n      align-items: center;\n      transform: translateX(-50%);\n    }\n\n    [part~=\"current-box\"] {\n      display: var(--media-current-box-display, var(--media-box-display, flex));\n      margin: var(--media-current-box-margin, var(--media-box-margin, 0 0 5px));\n      visibility: hidden;\n    }\n\n    [part~=\"preview-box\"] {\n      display: var(--media-preview-box-display, var(--media-box-display, flex));\n      margin: var(--media-preview-box-margin, var(--media-box-margin, 0 0 5px));\n      transition-property: var(--media-preview-transition-property, visibility, opacity);\n      transition-duration: var(--media-preview-transition-duration-out, .25s);\n      transition-delay: var(--media-preview-transition-delay-out, 0s);\n      visibility: hidden;\n      opacity: 0;\n    }\n\n    :host(:is([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}], [${\n  MediaUIAttributes.MEDIA_PREVIEW_TIME\n}])[dragging]) [part~=\"preview-box\"] {\n      transition-duration: var(--media-preview-transition-duration-in, .5s);\n      transition-delay: var(--media-preview-transition-delay-in, .25s);\n      visibility: visible;\n      opacity: 1;\n    }\n\n    @media (hover: hover) {\n      :host(:is([${MediaUIAttributes.MEDIA_PREVIEW_IMAGE}], [${\n  MediaUIAttributes.MEDIA_PREVIEW_TIME\n}]):hover) [part~=\"preview-box\"] {\n        transition-duration: var(--media-preview-transition-duration-in, .5s);\n        transition-delay: var(--media-preview-transition-delay-in, .25s);\n        visibility: visible;\n        opacity: 1;\n      }\n    }\n\n    media-preview-thumbnail,\n    ::slotted(media-preview-thumbnail) {\n      visibility: hidden;\n      ${\n        /* delay changing these CSS props until the preview box transition is ended */ ''\n      }\n      transition: visibility 0s .25s;\n      transition-delay: calc(var(--media-preview-transition-delay-out, 0s) + var(--media-preview-transition-duration-out, .25s));\n      background: var(--media-preview-thumbnail-background, var(--_preview-background));\n      box-shadow: var(--media-preview-thumbnail-box-shadow, 0 0 4px rgb(0 0 0 / .2));\n      max-width: var(--media-preview-thumbnail-max-width, 180px);\n      max-height: var(--media-preview-thumbnail-max-height, 160px);\n      min-width: var(--media-preview-thumbnail-min-width, 120px);\n      min-height: var(--media-preview-thumbnail-min-height, 80px);\n      border: var(--media-preview-thumbnail-border);\n      border-radius: var(--media-preview-thumbnail-border-radius,\n        var(--media-preview-border-radius) var(--media-preview-border-radius) 0 0);\n    }\n\n    :host([${\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE\n    }][dragging]) media-preview-thumbnail,\n    :host([${\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE\n    }][dragging]) ::slotted(media-preview-thumbnail) {\n      transition-delay: var(--media-preview-transition-delay-in, .25s);\n      visibility: visible;\n    }\n\n    @media (hover: hover) {\n      :host([${\n        MediaUIAttributes.MEDIA_PREVIEW_IMAGE\n      }]:hover) media-preview-thumbnail,\n      :host([${\n        MediaUIAttributes.MEDIA_PREVIEW_IMAGE\n      }]:hover) ::slotted(media-preview-thumbnail) {\n        transition-delay: var(--media-preview-transition-delay-in, .25s);\n        visibility: visible;\n      }\n\n      :host([${MediaUIAttributes.MEDIA_PREVIEW_TIME}]:hover) {\n        --media-time-range-hover-display: block;\n      }\n    }\n\n    media-preview-chapter-display,\n    ::slotted(media-preview-chapter-display) {\n      font-size: var(--media-font-size, 13px);\n      line-height: 17px;\n      min-width: 0;\n      visibility: hidden;\n      ${\n        /* delay changing these CSS props until the preview box transition is ended */ ''\n      }\n      transition: min-width 0s, border-radius 0s, margin 0s, padding 0s, visibility 0s;\n      transition-delay: calc(var(--media-preview-transition-delay-out, 0s) + var(--media-preview-transition-duration-out, .25s));\n      background: var(--media-preview-chapter-background, var(--_preview-background));\n      border-radius: var(--media-preview-chapter-border-radius,\n        var(--media-preview-border-radius) var(--media-preview-border-radius)\n        var(--media-preview-border-radius) var(--media-preview-border-radius));\n      padding: var(--media-preview-chapter-padding, 3.5px 9px);\n      margin: var(--media-preview-chapter-margin, 0 0 5px);\n      text-shadow: var(--media-preview-chapter-text-shadow, 0 0 4px rgb(0 0 0 / .75));\n    }\n\n    :host([${\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE\n    }]) media-preview-chapter-display,\n    :host([${\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE\n    }]) ::slotted(media-preview-chapter-display) {\n      transition-delay: var(--media-preview-transition-delay-in, .25s);\n      border-radius: var(--media-preview-chapter-border-radius, 0);\n      padding: var(--media-preview-chapter-padding, 3.5px 9px 0);\n      margin: var(--media-preview-chapter-margin, 0);\n      min-width: 100%;\n    }\n\n    media-preview-chapter-display[${MediaUIAttributes.MEDIA_PREVIEW_CHAPTER}],\n    ::slotted(media-preview-chapter-display[${\n      MediaUIAttributes.MEDIA_PREVIEW_CHAPTER\n    }]) {\n      visibility: visible;\n    }\n\n    media-preview-chapter-display:not([aria-valuetext]),\n    ::slotted(media-preview-chapter-display:not([aria-valuetext])) {\n      display: none;\n    }\n\n    media-preview-time-display,\n    ::slotted(media-preview-time-display),\n    media-time-display,\n    ::slotted(media-time-display) {\n      font-size: var(--media-font-size, 13px);\n      line-height: 17px;\n      min-width: 0;\n      ${\n        /* delay changing these CSS props until the preview box transition is ended */ ''\n      }\n      transition: min-width 0s, border-radius 0s;\n      transition-delay: calc(var(--media-preview-transition-delay-out, 0s) + var(--media-preview-transition-duration-out, .25s));\n      background: var(--media-preview-time-background, var(--_preview-background));\n      border-radius: var(--media-preview-time-border-radius,\n        var(--media-preview-border-radius) var(--media-preview-border-radius)\n        var(--media-preview-border-radius) var(--media-preview-border-radius));\n      padding: var(--media-preview-time-padding, 3.5px 9px);\n      margin: var(--media-preview-time-margin, 0);\n      text-shadow: var(--media-preview-time-text-shadow, 0 0 4px rgb(0 0 0 / .75));\n      transform: translateX(min(\n        max(calc(50% - var(--_box-width) / 2),\n        calc(var(--_box-shift, 0))),\n        calc(var(--_box-width) / 2 - 50%)\n      ));\n    }\n\n    :host([${\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE\n    }]) media-preview-time-display,\n    :host([${\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE\n    }]) ::slotted(media-preview-time-display) {\n      transition-delay: var(--media-preview-transition-delay-in, .25s);\n      border-radius: var(--media-preview-time-border-radius,\n        0 0 var(--media-preview-border-radius) var(--media-preview-border-radius));\n      min-width: 100%;\n    }\n\n    :host([${MediaUIAttributes.MEDIA_PREVIEW_TIME}]:hover) {\n      --media-time-range-hover-display: block;\n    }\n\n    [part~=\"arrow\"],\n    ::slotted([part~=\"arrow\"]) {\n      display: var(--media-box-arrow-display, inline-block);\n      transform: translateX(min(\n        max(calc(50% - var(--_box-width) / 2 + var(--media-box-arrow-offset)),\n        calc(var(--_box-shift, 0))),\n        calc(var(--_box-width) / 2 - 50% - var(--media-box-arrow-offset))\n      ));\n      ${/* border-color has to come before border-top-color! */ ''}\n      border-color: transparent;\n      border-top-color: var(--media-box-arrow-background, var(--_control-background));\n      border-width: var(--media-box-arrow-border-width,\n        var(--media-box-arrow-height, 5px) var(--media-box-arrow-width, 6px) 0);\n      border-style: solid;\n      justify-content: center;\n      height: 0;\n    }\n  </style>\n  <div id=\"preview-rail\">\n    <slot name=\"preview\" part=\"box preview-box\">\n      <media-preview-thumbnail></media-preview-thumbnail>\n      <media-preview-chapter-display></media-preview-chapter-display>\n      <media-preview-time-display></media-preview-time-display>\n      <slot name=\"preview-arrow\"><div part=\"arrow\"></div></slot>\n    </slot>\n  </div>\n  <div id=\"current-rail\">\n    <slot name=\"current\" part=\"box current-box\">\n      ${\n        /* Example: add the current time w/ arrow to the playhead\n        <media-time-display slot=\"current\"></media-time-display>\n        <div part=\"arrow\" slot=\"current\"></div> */ ''\n      }\n    </slot>\n  </div>\n`;\n\nconst calcRangeValueFromTime = (\n  el: any,\n  time: number = el.mediaCurrentTime\n): number => {\n  const startTime = Number.isFinite(el.mediaSeekableStart)\n    ? el.mediaSeekableStart\n    : 0;\n  // Prefer `mediaDuration` when available and finite.\n  const endTime = Number.isFinite(el.mediaDuration)\n    ? el.mediaDuration\n    : el.mediaSeekableEnd;\n  if (Number.isNaN(endTime)) return 0;\n  const value = (time - startTime) / (endTime - startTime);\n  return Math.max(0, Math.min(value, 1));\n};\n\nconst calcTimeFromRangeValue = (\n  el: any,\n  value: number = el.range.valueAsNumber\n): number => {\n  const startTime = Number.isFinite(el.mediaSeekableStart)\n    ? el.mediaSeekableStart\n    : 0;\n  // Prefer `mediaDuration` when available and finite.\n  const endTime = Number.isFinite(el.mediaDuration)\n    ? el.mediaDuration\n    : el.mediaSeekableEnd;\n  if (Number.isNaN(endTime)) return 0;\n  return value * (endTime - startTime) + startTime;\n};\n\n/**\n * @slot preview - An element that slides along the timeline to the position of the pointer hovering.\n * @slot preview-arrow - An arrow element that slides along the timeline to the position of the pointer hovering.\n * @slot current - An element that slides along the timeline to the position of the current time.\n *\n * @attr {string} mediabuffered - (read-only) Set to the buffered time ranges.\n * @attr {string} mediaplaybackrate - (read-only) Set to the media playback rate.\n * @attr {string} mediaduration - (read-only) Set to the media duration.\n * @attr {string} mediaseekable - (read-only) Set to the seekable time ranges.\n * @attr {boolean} mediapaused - (read-only) Present if the media is paused.\n * @attr {boolean} medialoading - (read-only) Present if the media is loading.\n * @attr {string} mediacurrenttime - (read-only) Set to the current media time.\n * @attr {string} mediapreviewimage - (read-only) Set to the timeline preview image URL.\n * @attr {string} mediapreviewtime - (read-only) Set to the timeline preview time.\n *\n * @csspart buffered - A CSS part that selects the buffered bar element.\n * @csspart box - A CSS part that selects both the preview and current box elements.\n * @csspart preview-box - A CSS part that selects the preview box element.\n * @csspart current-box - A CSS part that selects the current box element.\n * @csspart arrow - A CSS part that selects the arrow element.\n *\n * @cssproperty [--media-time-range-display = inline-block] - `display` property of range.\n *\n * @cssproperty --media-preview-transition-property - `transition-property` of range hover preview.\n * @cssproperty --media-preview-transition-duration-out - `transition-duration` out of range hover preview.\n * @cssproperty --media-preview-transition-delay-out - `transition-delay` out of range hover preview.\n * @cssproperty --media-preview-transition-duration-in - `transition-duration` in of range hover preview.\n * @cssproperty --media-preview-transition-delay-in - `transition-delay` in of range hover preview.\n *\n * @cssproperty --media-preview-thumbnail-background - `background` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-box-shadow - `box-shadow` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-max-width - `max-width` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-max-height - `max-height` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-min-width - `min-width` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-min-height - `min-height` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-border-radius - `border-radius` of range preview thumbnail.\n * @cssproperty --media-preview-thumbnail-border - `border` of range preview thumbnail.\n *\n * @cssproperty --media-preview-chapter-background - `background` of range preview chapter display.\n * @cssproperty --media-preview-chapter-border-radius - `border-radius` of range preview chapter display.\n * @cssproperty --media-preview-chapter-padding - `padding` of range preview chapter display.\n * @cssproperty --media-preview-chapter-margin - `margin` of range preview chapter display.\n * @cssproperty --media-preview-chapter-text-shadow - `text-shadow` of range preview chapter display.\n *\n * @cssproperty --media-preview-time-background - `background` of range preview time display.\n * @cssproperty --media-preview-time-border-radius - `border-radius` of range preview time display.\n * @cssproperty --media-preview-time-padding - `padding` of range preview time display.\n * @cssproperty --media-preview-time-margin - `margin` of range preview time display.\n * @cssproperty --media-preview-time-text-shadow - `text-shadow` of range preview time display.\n *\n * @cssproperty --media-box-display - `display` of range box.\n * @cssproperty --media-box-margin - `margin` of range box.\n * @cssproperty --media-box-padding-left - `padding-left` of range box.\n * @cssproperty --media-box-padding-right - `padding-right` of range box.\n * @cssproperty --media-box-border-radius - `border-radius` of range box.\n *\n * @cssproperty --media-preview-box-display - `display` of range preview box.\n * @cssproperty --media-preview-box-margin - `margin` of range preview box.\n *\n * @cssproperty --media-current-box-display - `display` of range current box.\n * @cssproperty --media-current-box-margin - `margin` of range current box.\n *\n * @cssproperty --media-box-arrow-display - `display` of range box arrow.\n * @cssproperty --media-box-arrow-background - `border-top-color` of range box arrow.\n * @cssproperty --media-box-arrow-border-width - `border-width` of range box arrow.\n * @cssproperty --media-box-arrow-height - `height` of range box arrow.\n * @cssproperty --media-box-arrow-width - `width` of range box arrow.\n * @cssproperty --media-box-arrow-offset - `translateX` offset of range box arrow.\n */\nclass MediaTimeRange extends MediaChromeRange {\n  static get observedAttributes(): string[] {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_PAUSED,\n      MediaUIAttributes.MEDIA_DURATION,\n      MediaUIAttributes.MEDIA_SEEKABLE,\n      MediaUIAttributes.MEDIA_CURRENT_TIME,\n      MediaUIAttributes.MEDIA_PREVIEW_IMAGE,\n      MediaUIAttributes.MEDIA_PREVIEW_TIME,\n      MediaUIAttributes.MEDIA_PREVIEW_CHAPTER,\n      MediaUIAttributes.MEDIA_BUFFERED,\n      MediaUIAttributes.MEDIA_PLAYBACK_RATE,\n      MediaUIAttributes.MEDIA_LOADING,\n      MediaUIAttributes.MEDIA_ENDED,\n    ];\n  }\n\n  #rootNode;\n  #animation;\n  #boxes;\n  #previewTime: number;\n  #previewBox: HTMLElement;\n  #currentBox: HTMLElement;\n  #boxPaddingLeft: number;\n  #boxPaddingRight: number;\n  #mediaChaptersCues;\n\n  constructor() {\n    super();\n\n    this.container.appendChild(template.content.cloneNode(true));\n\n    const track = this.shadowRoot.querySelector('#track');\n    track.insertAdjacentHTML('afterbegin', '<div id=\"buffered\" part=\"buffered\"></div>');\n\n    this.#boxes = this.shadowRoot.querySelectorAll('[part~=\"box\"]');\n    this.#previewBox = this.shadowRoot.querySelector('[part~=\"preview-box\"]');\n    this.#currentBox = this.shadowRoot.querySelector('[part~=\"current-box\"]');\n\n    const computedStyle = getComputedStyle(this);\n    this.#boxPaddingLeft = parseInt(\n      computedStyle.getPropertyValue('--media-box-padding-left')\n    );\n    this.#boxPaddingRight = parseInt(\n      computedStyle.getPropertyValue('--media-box-padding-right')\n    );\n\n    this.#animation = new RangeAnimation(this.range, this.#updateRange, 60);\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.range.setAttribute('aria-label', nouns.SEEK());\n    this.#toggleRangeAnimation();\n\n    // NOTE: Adding an event listener to an ancestor here.\n    this.#rootNode = this.getRootNode();\n    this.#rootNode?.addEventListener('transitionstart', this);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.#toggleRangeAnimation();\n\n    this.#rootNode?.removeEventListener('transitionstart', this);\n    this.#rootNode = null;\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (oldValue == newValue) return;\n\n    if (\n      attrName === MediaUIAttributes.MEDIA_CURRENT_TIME ||\n      attrName === MediaUIAttributes.MEDIA_PAUSED ||\n      attrName === MediaUIAttributes.MEDIA_ENDED ||\n      attrName === MediaUIAttributes.MEDIA_LOADING ||\n      attrName === MediaUIAttributes.MEDIA_DURATION ||\n      attrName === MediaUIAttributes.MEDIA_SEEKABLE\n    ) {\n      this.#animation.update({\n        start: calcRangeValueFromTime(this),\n        duration: this.mediaSeekableEnd - this.mediaSeekableStart,\n        playbackRate: this.mediaPlaybackRate,\n      });\n      this.#toggleRangeAnimation();\n      updateAriaValueText(this);\n    } else if (attrName === MediaUIAttributes.MEDIA_BUFFERED) {\n      this.updateBufferedBar();\n    }\n\n    if (\n      attrName === MediaUIAttributes.MEDIA_DURATION ||\n      attrName === MediaUIAttributes.MEDIA_SEEKABLE\n    ) {\n      this.mediaChaptersCues = this.#mediaChaptersCues;\n      this.updateBar();\n    }\n  }\n\n  #toggleRangeAnimation(): void {\n    if (this.#shouldRangeAnimate()) {\n      this.#animation.start();\n    } else {\n      this.#animation.stop();\n    }\n  }\n\n  #shouldRangeAnimate(): boolean {\n    return (\n      this.isConnected &&\n      !this.mediaPaused &&\n      !this.mediaLoading &&\n      !this.mediaEnded &&\n      this.mediaSeekableEnd > 0 &&\n      isElementVisible(this)\n    );\n  }\n\n  #updateRange = (value: number): void => {\n    if (this.dragging) return;\n\n    if (isValidNumber(value)) {\n      this.range.valueAsNumber = value;\n    }\n\n    this.updateBar();\n  };\n\n  get mediaChaptersCues(): any[] {\n    return this.#mediaChaptersCues;\n  }\n\n  set mediaChaptersCues(value: any[]) {\n    this.#mediaChaptersCues = value;\n\n    this.updateSegments(\n      this.#mediaChaptersCues?.map((c) => ({\n        start: calcRangeValueFromTime(this, c.startTime),\n        end: calcRangeValueFromTime(this, c.endTime),\n      }))\n    );\n  }\n\n  /**\n   * Is the media paused\n   */\n  get mediaPaused(): boolean {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED);\n  }\n\n  set mediaPaused(value: boolean) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_PAUSED, value);\n  }\n\n  /**\n   * Is the media loading\n   */\n  get mediaLoading(): boolean {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_LOADING);\n  }\n\n  set mediaLoading(value: boolean) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_LOADING, value);\n  }\n\n  /**\n   *\n   */\n  get mediaDuration(): number | undefined {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_DURATION);\n  }\n\n  set mediaDuration(value: number | undefined) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_DURATION, value);\n  }\n\n  /**\n   *\n   */\n  get mediaCurrentTime(): number | undefined {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME);\n  }\n\n  set mediaCurrentTime(value: number | undefined) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_CURRENT_TIME, value);\n  }\n\n  /**\n   *\n   */\n  get mediaPlaybackRate(): number {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_PLAYBACK_RATE, 1);\n  }\n\n  set mediaPlaybackRate(value: number) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_PLAYBACK_RATE, value);\n  }\n\n  /**\n   * An array of ranges, each range being an array of two numbers.\n   * e.g. [[1, 2], [3, 4]]\n   */\n  get mediaBuffered(): number[][] {\n    const buffered = this.getAttribute(MediaUIAttributes.MEDIA_BUFFERED);\n    if (!buffered) return [];\n    return buffered\n      .split(' ')\n      .map((timePair) => timePair.split(':').map((timeStr) => +timeStr));\n  }\n\n  set mediaBuffered(list: number[][]) {\n    if (!list) {\n      this.removeAttribute(MediaUIAttributes.MEDIA_BUFFERED);\n      return;\n    }\n    const strVal = list.map((tuple) => tuple.join(':')).join(' ');\n    this.setAttribute(MediaUIAttributes.MEDIA_BUFFERED, strVal);\n  }\n\n  /**\n   * Range of values that can be seeked to\n   * An array of two numbers [start, end]\n   */\n  get mediaSeekable(): number[] | undefined {\n    const seekable = this.getAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n    if (!seekable) return undefined;\n    // Only currently supports a single, contiguous seekable range (CJP)\n    return seekable.split(':').map((time) => +time);\n  }\n\n  set mediaSeekable(range: number[] | undefined) {\n    if (range == null) {\n      this.removeAttribute(MediaUIAttributes.MEDIA_SEEKABLE);\n      return;\n    }\n    this.setAttribute(MediaUIAttributes.MEDIA_SEEKABLE, range.join(':'));\n  }\n\n  /**\n   *\n   */\n  get mediaSeekableEnd(): number | undefined {\n    const [, end = this.mediaDuration] = this.mediaSeekable ?? [];\n    return end;\n  }\n\n  get mediaSeekableStart(): number {\n    const [start = 0] = this.mediaSeekable ?? [];\n    return start;\n  }\n\n  /**\n   * The url of the preview image\n   */\n  get mediaPreviewImage(): string | undefined {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_IMAGE);\n  }\n\n  set mediaPreviewImage(value: string | undefined) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_PREVIEW_IMAGE, value);\n  }\n\n  /**\n   *\n   */\n  get mediaPreviewTime(): number | undefined {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_PREVIEW_TIME);\n  }\n\n  set mediaPreviewTime(value: number | undefined) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_PREVIEW_TIME, value);\n  }\n\n  /**\n   *\n   */\n  get mediaEnded(): boolean | undefined {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_ENDED);\n  }\n\n  set mediaEnded(value: boolean | undefined) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_ENDED, value);\n  }\n\n  /* Add a buffered progress bar */\n  updateBar(): void {\n    super.updateBar();\n    this.updateBufferedBar();\n    this.updateCurrentBox();\n  }\n\n  updateBufferedBar(): void {\n    const buffered = this.mediaBuffered;\n    if (!buffered.length) {\n      return;\n    }\n\n    // Find the buffered range that \"contains\" the current time and get its end.\n    // If none, just assume the start of the media timeline for\n    // visualization purposes.\n    let relativeBufferedEnd;\n\n    if (!this.mediaEnded) {\n      const currentTime = this.mediaCurrentTime;\n      const [, bufferedEnd = this.mediaSeekableStart] =\n        buffered.find(\n          ([start, end]) => start <= currentTime && currentTime <= end\n        ) ?? [];\n      relativeBufferedEnd = calcRangeValueFromTime(this, bufferedEnd);\n    } else {\n      // If we've ended, there may be some discrepancies between seekable end, duration, and current time.\n      // In this case, just presume `relativeBufferedEnd` is the maximum possible value for visualization\n      // purposes (CJP.)\n      relativeBufferedEnd = 1;\n    }\n\n    const { style } = getOrInsertCSSRule(this.shadowRoot, '#buffered');\n    style.setProperty('width', `${relativeBufferedEnd * 100}%`);\n  }\n\n  updateCurrentBox(): void {\n    // If there are no elements in the current box no need for expensive style updates.\n    const currentSlot: HTMLSlotElement = this.shadowRoot.querySelector(\n      'slot[name=\"current\"]'\n    );\n    if (!currentSlot.assignedElements().length) return;\n\n    const currentRailRule = getOrInsertCSSRule(\n      this.shadowRoot,\n      '#current-rail'\n    );\n    const currentBoxRule = getOrInsertCSSRule(\n      this.shadowRoot,\n      '[part~=\"current-box\"]'\n    );\n\n    const rects = this.#getElementRects(this.#currentBox);\n    const boxPos = this.#getBoxPosition(rects, this.range.valueAsNumber);\n    const boxShift = this.#getBoxShiftPosition(rects, this.range.valueAsNumber);\n\n    currentRailRule.style.transform = `translateX(${boxPos})`;\n    currentRailRule.style.setProperty('--_range-width', `${rects.range.width}`);\n    currentBoxRule.style.setProperty('--_box-shift', `${boxShift}`);\n    currentBoxRule.style.setProperty('--_box-width', `${rects.box.width}px`);\n    currentBoxRule.style.setProperty('visibility', 'initial');\n  }\n\n  #getElementRects(box: HTMLElement) {\n    // Get the element that enforces the bounds for the time range boxes.\n    const bounds =\n      (this.getAttribute('bounds')\n        ? closestComposedNode(this, `#${this.getAttribute('bounds')}`)\n        : this.parentElement) ?? this;\n\n    const boundsRect = bounds.getBoundingClientRect();\n    const rangeRect = this.range.getBoundingClientRect();\n\n    // Use offset dimensions to include borders.\n    const width = box.offsetWidth;\n    const min = -(rangeRect.left - boundsRect.left - width / 2);\n    const max = boundsRect.right - rangeRect.left - width / 2;\n\n    return {\n      box: { width, min, max },\n      bounds: boundsRect,\n      range: rangeRect,\n    };\n  }\n\n  /**\n   * Get the position, max and min for the box in percentage.\n   * It's important this is in percentage so when the player is resized\n   * the box will move accordingly.\n   */\n  #getBoxPosition(rects: Rects, ratio: number): string {\n    let position = `${ratio * 100}%`;\n    const { width, min, max } = rects.box;\n\n    if (!width) return position;\n\n    if (!Number.isNaN(min)) {\n      const pad = `var(--media-box-padding-left)`;\n      const minPos = `calc(1 / var(--_range-width) * 100 * ${min}% + ${pad})`;\n      position = `max(${minPos}, ${position})`;\n    }\n\n    if (!Number.isNaN(max)) {\n      const pad = `var(--media-box-padding-right)`;\n      const maxPos = `calc(1 / var(--_range-width) * 100 * ${max}% - ${pad})`;\n      position = `min(${position}, ${maxPos})`;\n    }\n\n    return position;\n  }\n\n  #getBoxShiftPosition(rects: Rects, ratio: number) {\n    const { width, min, max } = rects.box;\n    const pointerX = ratio * rects.range.width;\n\n    if (pointerX < min + this.#boxPaddingLeft) {\n      const offset =\n        rects.range.left - rects.bounds.left - this.#boxPaddingLeft;\n      return `${pointerX - width / 2 + offset}px`;\n    }\n\n    if (pointerX > max - this.#boxPaddingRight) {\n      const offset =\n        rects.bounds.right - rects.range.right - this.#boxPaddingRight;\n      return `${pointerX + width / 2 - offset - rects.range.width}px`;\n    }\n\n    return 0;\n  }\n\n  handleEvent(evt: Event | MouseEvent): void {\n    super.handleEvent(evt);\n\n    switch (evt.type) {\n      case 'input':\n        this.#seekRequest();\n        break;\n      case 'pointermove':\n        this.#handlePointerMove(evt as MouseEvent);\n        break;\n      case 'pointerup':\n      case 'pointerleave':\n        this.#previewRequest(null);\n        break;\n      case 'transitionstart':\n        if (containsComposedNode(evt.target as any, this)) {\n          // Wait a tick to be sure the transition has started. Required for Safari.\n          setTimeout(() => this.#toggleRangeAnimation(), 0);\n        }\n        break;\n    }\n  }\n\n  #handlePointerMove(evt: MouseEvent): void {\n    // @ts-ignore\n    const isOverBoxes = [...this.#boxes].some((b) =>\n      evt.composedPath().includes(b)\n    );\n\n    if (!this.dragging && (isOverBoxes || !evt.composedPath().includes(this))) {\n      this.#previewRequest(null);\n      return;\n    }\n\n    const duration = this.mediaSeekableEnd;\n    // If no duration we can't calculate which time to show\n    if (!duration) return;\n\n    const previewRailRule = getOrInsertCSSRule(\n      this.shadowRoot,\n      '#preview-rail'\n    );\n    const previewBoxRule = getOrInsertCSSRule(\n      this.shadowRoot,\n      '[part~=\"preview-box\"]'\n    );\n\n    const rects = this.#getElementRects(this.#previewBox);\n\n    let pointerRatio = (evt.clientX - rects.range.left) / rects.range.width;\n    pointerRatio = Math.max(0, Math.min(1, pointerRatio));\n\n    const boxPos = this.#getBoxPosition(rects, pointerRatio);\n    const boxShift = this.#getBoxShiftPosition(rects, pointerRatio);\n\n    previewRailRule.style.transform = `translateX(${boxPos})`;\n    previewRailRule.style.setProperty('--_range-width', `${rects.range.width}`);\n    previewBoxRule.style.setProperty('--_box-shift', `${boxShift}`);\n    previewBoxRule.style.setProperty('--_box-width', `${rects.box.width}px`);\n\n    // At least require a 1s difference before requesting a new preview thumbnail,\n    // unless it's at the beginning or end of the timeline.\n    const diff =\n      Math.round(this.#previewTime) - Math.round(pointerRatio * duration);\n    if (Math.abs(diff) < 1 && pointerRatio > 0.01 && pointerRatio < 0.99)\n      return;\n\n    this.#previewTime = pointerRatio * duration;\n    this.#previewRequest(this.#previewTime);\n  }\n\n  #previewRequest(detail): void {\n    this.dispatchEvent(\n      new globalThis.CustomEvent(MediaUIEvents.MEDIA_PREVIEW_REQUEST, {\n        composed: true,\n        bubbles: true,\n        detail,\n      })\n    );\n  }\n\n  #seekRequest(): void {\n    // Cancel progress bar refreshing when seeking.\n    this.#animation.stop();\n\n    const detail = calcTimeFromRangeValue(this);\n    this.dispatchEvent(\n      new globalThis.CustomEvent(MediaUIEvents.MEDIA_SEEK_REQUEST, {\n        composed: true,\n        bubbles: true,\n        detail,\n      })\n    );\n  }\n}\n\nif (!globalThis.customElements.get('media-time-range')) {\n  globalThis.customElements.define('media-time-range', MediaTimeRange);\n}\n\nexport default MediaTimeRange;\n", "import {\n  closestComposedNode,\n  getMediaController,\n  getStringAttr,\n  isElementVisible,\n  setStringAttr,\n} from './utils/element-utils.js';\nimport { globalThis, document } from './utils/server-safe-globals.js';\n\nexport const Attributes = {\n  PLACEMENT: 'placement',\n  BOUNDS: 'bounds',\n};\n\nexport type TooltipPlacement = 'top' | 'right' | 'bottom' | 'left' | 'none';\n\nconst template: HTMLTemplateElement = document.createElement('template');\n\ntemplate.innerHTML = /*html*/ `\n  <style>\n    :host {\n      --_tooltip-background-color: var(--media-tooltip-background-color, var(--media-secondary-color, rgba(20, 20, 30, .7)));\n      --_tooltip-background: var(--media-tooltip-background, var(--_tooltip-background-color));\n      --_tooltip-arrow-half-width: calc(var(--media-tooltip-arrow-width, 12px) / 2);\n      --_tooltip-arrow-height: var(--media-tooltip-arrow-height, 5px);\n      --_tooltip-arrow-background: var(--media-tooltip-arrow-color, var(--_tooltip-background-color));\n      position: relative;\n      pointer-events: none;\n      display: var(--media-tooltip-display, inline-flex);\n      justify-content: center;\n      align-items: center;\n      box-sizing: border-box;\n      z-index: var(--media-tooltip-z-index, 1);\n      background: var(--_tooltip-background);\n      color: var(--media-text-color, var(--media-primary-color, rgb(238 238 238)));\n      font: var(--media-font,\n        var(--media-font-weight, 400)\n        var(--media-font-size, 13px) /\n        var(--media-text-content-height, var(--media-control-height, 18px))\n        var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif));\n      padding: var(--media-tooltip-padding, .35em .7em);\n      border: var(--media-tooltip-border, none);\n      border-radius: var(--media-tooltip-border-radius, 5px);\n      filter: var(--media-tooltip-filter, drop-shadow(0 0 4px rgba(0, 0, 0, .2)));\n      white-space: var(--media-tooltip-white-space, nowrap);\n    }\n\n    :host([hidden]) {\n      display: none;\n    }\n\n    img, svg {\n      display: inline-block;\n    }\n\n    #arrow {\n      position: absolute;\n      width: 0px;\n      height: 0px;\n      border-style: solid;\n      display: var(--media-tooltip-arrow-display, block);\n    }\n\n    :host(:not([placement])),\n    :host([placement=\"top\"]) {\n      position: absolute;\n      bottom: calc(100% + var(--media-tooltip-distance, 12px));\n      left: 50%;\n      transform: translate(calc(-50% - var(--media-tooltip-offset-x, 0px)), 0);\n    }\n    :host(:not([placement])) #arrow,\n    :host([placement=\"top\"]) #arrow {\n      top: 100%;\n      left: 50%;\n      border-width: var(--_tooltip-arrow-height) var(--_tooltip-arrow-half-width) 0 var(--_tooltip-arrow-half-width);\n      border-color: var(--_tooltip-arrow-background) transparent transparent transparent;\n      transform: translate(calc(-50% + var(--media-tooltip-offset-x, 0px)), 0);\n    }\n\n    :host([placement=\"right\"]) {\n      position: absolute;\n      left: calc(100% + var(--media-tooltip-distance, 12px));\n      top: 50%;\n      transform: translate(0, -50%);\n    }\n    :host([placement=\"right\"]) #arrow {\n      top: 50%;\n      right: 100%;\n      border-width: var(--_tooltip-arrow-half-width) var(--_tooltip-arrow-height) var(--_tooltip-arrow-half-width) 0;\n      border-color: transparent var(--_tooltip-arrow-background) transparent transparent;\n      transform: translate(0, -50%);\n    }\n\n    :host([placement=\"bottom\"]) {\n      position: absolute;\n      top: calc(100% + var(--media-tooltip-distance, 12px));\n      left: 50%;\n      transform: translate(calc(-50% - var(--media-tooltip-offset-x, 0px)), 0);\n    }\n    :host([placement=\"bottom\"]) #arrow {\n      bottom: 100%;\n      left: 50%;\n      border-width: 0 var(--_tooltip-arrow-half-width) var(--_tooltip-arrow-height) var(--_tooltip-arrow-half-width);\n      border-color: transparent transparent var(--_tooltip-arrow-background) transparent;\n      transform: translate(calc(-50% + var(--media-tooltip-offset-x, 0px)), 0);\n    }\n\n    :host([placement=\"left\"]) {\n      position: absolute;\n      right: calc(100% + var(--media-tooltip-distance, 12px));\n      top: 50%;\n      transform: translate(0, -50%);\n    }\n    :host([placement=\"left\"]) #arrow {\n      top: 50%;\n      left: 100%;\n      border-width: var(--_tooltip-arrow-half-width) 0 var(--_tooltip-arrow-half-width) var(--_tooltip-arrow-height);\n      border-color: transparent transparent transparent var(--_tooltip-arrow-background);\n      transform: translate(0, -50%);\n    }\n    \n    :host([placement=\"none\"]) #arrow {\n      display: none;\n    }\n\n  </style>\n  <slot></slot>\n  <div id=\"arrow\"></div>\n`;\n\n/**\n * @extends {HTMLElement}\n *\n * @attr {('top'|'right'|'bottom'|'left'|'none')} placement - The placement of the tooltip, defaults to \"top\"\n * @attr {string} bounds - ID for the containing element (one of it's parents) that should constrain the tooltips horizontal position.\n *\n * @cssproperty --media-primary-color - Default color of text.\n * @cssproperty --media-secondary-color - Default color of tooltip background.\n * @cssproperty --media-text-color - `color` of tooltip text.\n *\n * @cssproperty --media-font - `font` shorthand property.\n * @cssproperty --media-font-weight - `font-weight` property.\n * @cssproperty --media-font-family - `font-family` property.\n * @cssproperty --media-font-size - `font-size` property.\n * @cssproperty --media-text-content-height - `line-height` of button text.\n *\n * @cssproperty --media-tooltip-border - 'border' of tooltip\n * @cssproperty --media-tooltip-background-color - Background color of tooltip and arrow, unless individually overidden\n * @cssproperty --media-tooltip-background - `background` of tooltip, ignoring the arrow\n * @cssproperty --media-tooltip-display - `display` of tooltip\n * @cssproperty --media-tooltip-z-index - `z-index` of tooltip\n * @cssproperty --media-tooltip-padding - `padding` of tooltip\n * @cssproperty --media-tooltip-border-radius - `border-radius` of tooltip\n * @cssproperty --media-tooltip-filter - `filter` property of tooltip, for drop-shadow\n * @cssproperty --media-tooltip-white-space - `white-space` property of tooltip\n * @cssproperty --media-tooltip-arrow-display - `display` property of tooltip arrow\n * @cssproperty --media-tooltip-arrow-width - Arrow width\n * @cssproperty --media-tooltip-arrow-height - Arrow height\n * @cssproperty --media-tooltip-arrow-color - Arrow color\n */\nclass MediaTooltip extends globalThis.HTMLElement {\n  static get observedAttributes(): string[] {\n    return [Attributes.PLACEMENT, Attributes.BOUNDS];\n  }\n\n  arrowEl: HTMLElement;\n\n  constructor() {\n    super();\n\n    if (!this.shadowRoot) {\n      // Set up the Shadow DOM if not using Declarative Shadow DOM.\n      this.attachShadow({ mode: 'open' });\n      this.shadowRoot.appendChild(template.content.cloneNode(true));\n    }\n\n    this.arrowEl = this.shadowRoot.querySelector('#arrow');\n\n    // Check if the placement prop has been set before the element was\n    // defined / upgraded. Without this, placement might be permanently overriden\n    // on the target element.\n    // see: https://nolanlawson.com/2021/08/03/handling-properties-in-custom-element-upgrades/\n    if (Object.prototype.hasOwnProperty.call(this, 'placement')) {\n      const placement = this.placement;\n      delete this.placement;\n      this.placement = placement;\n    }\n  }\n\n  // Adjusts tooltip position relative to the closest specified container\n  // such that it doesn't spill out of the left or right sides. Only applies\n  // to 'top' and 'bottom' placed tooltips.\n  updateXOffset = () => {\n    // If the tooltip is hidden don't offset the tooltip because it could be\n    // positioned offscreen causing scrollbars to appear.\n    if (!isElementVisible(this, { checkOpacity: false, checkVisibilityCSS: false })) return;\n\n    const placement = this.placement;\n\n    // we don't offset against tooltips coming out of left and right sides\n    if (placement === 'left' || placement === 'right') {\n      // could have been offset before switching to a new position\n      this.style.removeProperty('--media-tooltip-offset-x');\n      return;\n    }\n\n    // We need to calculate the difference (diff) between the left edge of the\n    // tooltip compared to the left edge of the container element, to see if it\n    // bleeds out (and the same for the right edges).\n    // If they do, then we apply the diff as an offset to get it back within bounds\n    // + any extra margin specified to create some buffer space, so it looks better.\n    // e.g. it's 20px out of bounds, we nudge it 20px back in + margin\n    const tooltipStyle = getComputedStyle(this);\n    const containingEl =\n      closestComposedNode(this, '#' + this.bounds) ?? getMediaController(this);\n    if (!containingEl) return;\n    const { x: containerX, width: containerWidth } =\n      containingEl.getBoundingClientRect();\n    const { x: tooltipX, width: tooltipWidth } = this.getBoundingClientRect();\n    const tooltipRight = tooltipX + tooltipWidth;\n    const containerRight = containerX + containerWidth;\n    const offsetXVal = tooltipStyle.getPropertyValue(\n      '--media-tooltip-offset-x'\n    );\n    const currOffsetX = offsetXVal\n      ? parseFloat(offsetXVal.replace('px', ''))\n      : 0;\n    const marginVal = tooltipStyle.getPropertyValue(\n      '--media-tooltip-container-margin'\n    );\n    const currMargin = marginVal ? parseFloat(marginVal.replace('px', '')) : 0;\n\n    // We might have already offset the tooltip previously so we remove it's\n    // current offset from our calculations, because we need to know if it goes\n    // outside the boundary if we weren't already offsetting it\n    // We also add on any additional container margin specified. Depending on\n    // if we're adjusting the element leftwards or rightwards, we need either a\n    // positive or negative offset\n    const leftDiff = tooltipX - containerX + currOffsetX - currMargin;\n    const rightDiff = tooltipRight - containerRight + currOffsetX + currMargin;\n\n    // out of left bounds\n    if (leftDiff < 0) {\n      this.style.setProperty('--media-tooltip-offset-x', `${leftDiff}px`);\n      return;\n    }\n\n    // out of right bounds\n    if (rightDiff > 0) {\n      this.style.setProperty('--media-tooltip-offset-x', `${rightDiff}px`);\n      return;\n    }\n\n    // no spilling out\n    this.style.removeProperty('--media-tooltip-offset-x');\n  };\n\n  /**\n   * Get or set tooltip placement\n   */\n  get placement(): TooltipPlacement | undefined {\n    return getStringAttr(this, Attributes.PLACEMENT);\n  }\n\n  set placement(value: TooltipPlacement | undefined) {\n    setStringAttr(this, Attributes.PLACEMENT, value);\n  }\n\n  /**\n   * Get or set tooltip container ID selector that will constrain the tooltips\n   * horizontal position.\n   */\n  get bounds(): string | undefined {\n    return getStringAttr(this, Attributes.BOUNDS);\n  }\n\n  set bounds(value: string | undefined) {\n    setStringAttr(this, Attributes.BOUNDS, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-tooltip')) {\n  globalThis.customElements.define('media-tooltip', MediaTooltip);\n}\n\nexport default MediaTooltip;\n", "import { globalThis } from './utils/server-safe-globals.js';\nimport { MediaChromeRange } from './media-chrome-range.js';\nimport { MediaUIAttributes, MediaUIEvents } from './constants.js';\nimport { nouns } from './labels/labels.js';\nimport {\n  getBooleanAttr,\n  getNumericAttr,\n  getStringAttr,\n  setBooleanAttr,\n  setNumericAttr,\n  setStringAttr,\n} from './utils/element-utils.js';\n\nconst DEFAULT_VOLUME = 1;\n\nconst toVolume = (el: any): number => {\n  if (el.mediaMuted) return 0;\n  return el.mediaVolume;\n};\n\nconst formatAsPercentString = (value: number): string => `${Math.round(value * 100)}%`;\n\n/**\n * @attr {string} mediavolume - (read-only) Set to the media volume.\n * @attr {boolean} mediamuted - (read-only) Set to the media muted state.\n * @attr {string} mediavolumeunavailable - (read-only) Set if changing volume is unavailable.\n *\n * @cssproperty [--media-volume-range-display = inline-block] - `display` property of range.\n */\nclass MediaVolumeRange extends MediaChromeRange {\n  static get observedAttributes(): string[] {\n    return [\n      ...super.observedAttributes,\n      MediaUIAttributes.MEDIA_VOLUME,\n      MediaUIAttributes.MEDIA_MUTED,\n      MediaUIAttributes.MEDIA_VOLUME_UNAVAILABLE,\n    ];\n  }\n\n  constructor() {\n    super();\n\n    this.range.addEventListener('input', () => {\n      const detail = this.range.value;\n      const evt = new globalThis.CustomEvent(\n        MediaUIEvents.MEDIA_VOLUME_REQUEST,\n        {\n          composed: true,\n          bubbles: true,\n          detail,\n        }\n      );\n      this.dispatchEvent(evt);\n    });\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.range.setAttribute('aria-label', nouns.VOLUME());\n  }\n\n  attributeChangedCallback(\n    attrName: string,\n    oldValue: string | null,\n    newValue: string | null\n  ): void {\n    super.attributeChangedCallback(attrName, oldValue, newValue);\n\n    if (\n      attrName === MediaUIAttributes.MEDIA_VOLUME ||\n      attrName === MediaUIAttributes.MEDIA_MUTED\n    ) {\n      this.range.valueAsNumber = toVolume(this);\n      this.range.setAttribute(\n        'aria-valuetext',\n        formatAsPercentString(this.range.valueAsNumber)\n      );\n      this.updateBar();\n    }\n  }\n\n  /**\n   *\n   */\n  get mediaVolume(): number {\n    return getNumericAttr(this, MediaUIAttributes.MEDIA_VOLUME, DEFAULT_VOLUME);\n  }\n\n  set mediaVolume(value: number) {\n    setNumericAttr(this, MediaUIAttributes.MEDIA_VOLUME, value);\n  }\n\n  /**\n   * Is the media currently muted\n   */\n  get mediaMuted(): boolean {\n    return getBooleanAttr(this, MediaUIAttributes.MEDIA_MUTED);\n  }\n\n  set mediaMuted(value: boolean) {\n    setBooleanAttr(this, MediaUIAttributes.MEDIA_MUTED, value);\n  }\n\n  /**\n   * The volume unavailability state\n   */\n  get mediaVolumeUnavailable(): string | undefined {\n    return getStringAttr(this, MediaUIAttributes.MEDIA_VOLUME_UNAVAILABLE);\n  }\n\n  set mediaVolumeUnavailable(value: string | undefined) {\n    setStringAttr(this, MediaUIAttributes.MEDIA_VOLUME_UNAVAILABLE, value);\n  }\n}\n\nif (!globalThis.customElements.get('media-volume-range')) {\n  globalThis.customElements.define('media-volume-range', MediaVolumeRange);\n}\n\nexport default MediaVolumeRange;\n"],
  "mappings": "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",
  "names": ["js_exports", "__export", "media_airplay_button_default", "media_captions_button_default", "media_cast_button_default", "media_chrome_button_default", "media_chrome_dialog_default", "media_chrome_range_default", "media_control_bar_default", "media_controller_default", "media_duration_display_default", "media_fullscreen_button_default", "media_gesture_receiver_default", "media_live_button_default", "media_loading_indicator_default", "media_mute_button_default", "media_pip_button_default", "media_play_button_default", "media_playback_rate_button_default", "media_poster_image_default", "media_preview_chapter_display_default", "media_preview_thumbnail_default", "media_preview_time_display_default", "media_seek_backward_button_default", "media_seek_forward_button_default", "media_time_display_default", "media_time_range_default", "media_tooltip_default", "media_volume_range_default", "constants_exports", "labels_default", "time_exports", "constants_exports", "__export", "AttributeToStateChangeEventMap", "AvailabilityStates", "MediaStateChangeEvents", "MediaStateReceiverAttributes", "MediaUIAttributes", "MediaUIEvents", "MediaUIProps", "PointerTypes", "ReadyStates", "StateChangeEventToAttributeMap", "StreamTypes", "TextTrackKinds", "TextTrackModes", "VolumeLevels", "WebkitPresentationModes", "MediaUIPropsEntries", "dictObj", "key", "propName", "AdditionalStateChangeEvents", "mapObj", "eventType", "attrName", "evtType", "tooltipLabels", "nouns", "playbackRate", "verbs", "seekOffset", "labels_default", "time_exports", "__export", "emptyTimeRanges", "formatAsTimePhrase", "formatTime", "serializeTimeRanges", "stringifyRenditionList", "renditions", "stringifyRendition", "stringifyRendition", "rendition", "id", "width", "height", "a", "stringifyAudioTrackList", "audioTracks", "stringifyAudioTrack", "stringifyAudioTrack", "audioTrack", "id", "kind", "language", "label", "isValidNumber", "x", "delay", "ms", "resolve", "UnitLabels", "toTimeUnitPhrase", "timeUnitValue", "unitIndex", "unitLabel", "formatAsTimePhrase", "seconds", "isValidNumber", "positiveSeconds", "negative", "secondsDateTime", "index", "x", "formatTime", "guide", "s", "m", "h", "gm", "gh", "emptyTimeRanges", "unsignedIdx", "serializeTimeRanges", "timeRanges", "_", "i", "EventTarget", "Node", "Element", "ResizeObserver", "documentShim", "globalThisShim", "event", "key", "value", "media", "isServer", "isShimmed", "GlobalThis", "Document", "callbacksMap", "getCallbacks", "element", "callbacks", "observer", "GlobalThis", "entries", "entry", "callback", "observeResize", "unobserveResize", "getMediaController", "host", "_a", "getAttributeMediaController", "closestComposedNode", "MEDIA_CONTROLLER", "MediaStateReceiverAttributes", "mediaControllerId", "getDocumentOrShadowRoot", "updateIconText", "svg", "value", "selector", "node", "getAllSlotted", "el", "name", "slotSelector", "slot", "getSlotted", "containsComposedNode", "rootNode", "childNode", "closest", "getActiveElement", "root", "activeEl", "isElementVisible", "element", "depth", "checkOpacity", "checkVisibilityCSS", "style", "getPointProgressOnLine", "x", "y", "p1", "p2", "segment", "distance", "toStart", "toEnd", "getOrInsertCSSRule", "styleParent", "selectorText", "cssRule", "getCSSRule", "st", "insertCSSRule", "predicate", "_b", "cssRules", "rule", "styles", "getNumericAttr", "attrName", "defaultValue", "attrVal", "setNumericAttr", "nextNumericValue", "getBooleanAttr", "setBooleanAttr", "getStringAttr", "setStringAttr", "nextValue", "template", "Document", "_mediaController", "MediaGestureReceiver", "GlobalThis", "options", "__privateAdd", "shadow", "buttonHTML", "slotTemplate", "MediaStateReceiverAttributes", "MediaUIAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "__privateSet", "getMediaControllerEl", "event", "composedTarget", "clientX", "clientY", "left", "top", "width", "height", "x", "y", "pointerType", "PointerTypes", "getBooleanAttr", "value", "setBooleanAttr", "eventName", "MediaUIEvents", "controlEl", "mediaControllerId", "closestComposedNode", "media_gesture_receiver_default", "Attributes", "template", "Document", "MediaUIAttributes", "MEDIA_UI_ATTRIBUTE_NAMES", "defaultBreakpoints", "resizeCallback", "entry", "setBreakpoints", "container", "width", "_a", "breakpoints", "ranges", "createBreakpointMap", "activeBreakpoints", "getBreakpoints", "changed", "name", "evt", "MediaStateChangeEvents", "pairs", "pair", "_pointerDownTimeStamp", "_currentMedia", "_inactiveTimeout", "_autohide", "_handlePointerMove", "handlePointerMove_fn", "_handlePointerUp", "handlePointerUp_fn", "_setInactive", "setInactive_fn", "_setActive", "setActive_fn", "_scheduleInactive", "scheduleInactive_fn", "MediaContainer", "GlobalThis", "__privateAdd", "mutationCallback", "mutationsList", "media", "mutation", "node", "previousSibling", "wasFirst", "pendingResizeCb", "observeResize", "chainedSlot", "__privateGet", "attrName", "oldValue", "newValue", "__privateSet", "label", "nouns", "event", "__privateMethod", "seconds", "parsedSeconds", "controlsVisible", "el", "autohide", "_el", "_attr", "_defaultSet", "_tokenSet", "_tokens", "tokens_get", "AttributeTokenList", "el", "attr", "defaultValue", "__privateAdd", "__privateSet", "__privateGet", "_a", "val", "index", "callback", "thisArg", "tokens", "_b", "t", "token", "force", "oldToken", "newToken", "splitTextTracksStr", "textTracksStr", "parseTextTrackStr", "textTrackStr", "kind", "language", "encodedLabel", "label", "TextTrackKinds", "parseTextTracksStr", "textTrackLikeObj", "textTrackObj", "parseTracks", "trackOrTracks", "trackObjOrStr", "formatTextTrackObj", "stringifyTextTrackList", "textTracks", "isMatchingPropOf", "key", "value", "obj", "textTrackObjAsPred", "filterObj", "preds", "textTrack", "pred", "updateTracksModeTo", "mode", "tracks", "tracksToUpdate", "isTrackToUpdate", "getTextTracksList", "media", "filterPredOrObj", "filterPred", "areSubsOn", "el", "_a", "MediaUIAttributes", "enterFullscreen", "stateOwners", "_a", "media", "fullscreenElement", "enterFullscreenKey", "maybePromise", "exitFullscreenKey", "Document", "exitFullscreen", "documentElement", "fullscreenElementKey", "getFullscreenElement", "docFullscreenElement", "WebkitPresentationModes", "isFullscreen", "currentFullscreenElement", "currentRoot", "containsComposedNode", "fullscreenEnabledKey", "isFullscreenEnabled", "testMediaEl", "getTestMediaEl", "_a", "_b", "Document", "hasVolumeSupportAsync", "mediaEl", "prevVolume", "abortController", "volumeSupported", "dispatchedVolumeChange", "volumeChanged", "signal", "resolve", "i", "delay", "isSafari", "GlobalThis", "hasPipSupport", "hasFullscreenSupport", "isFullscreenEnabled", "fullscreenSupported", "pipSupported", "airplaySupported", "castSupported", "getSubtitleTracks", "stateOwners", "getTextTracksList", "textTrack", "TextTrackKinds", "a", "b", "getShowingSubtitleTracks", "TextTrackModes", "toggleSubtitleTracks", "force", "tracks", "showingSubitleTracks", "subtitlesShowing", "updateTracksModeTo", "subTrack", "options", "subtitlesPref", "userLangPrefs", "preferredAvailableSubs", "lang", "textTrackA", "textTrackB", "idxA", "idxB", "language", "label", "kind", "areValuesEq", "x", "y", "areArraysEq", "key", "value", "xs", "ys", "xIsArray", "yIsArray", "i", "StreamTypeValues", "StreamTypes", "volumeSupported", "volumeSupportPromise", "hasVolumeSupportAsync", "supported", "prepareStateOwners", "stateOwners", "x", "stateOwner", "GlobalThis", "name", "classDef", "stateMediator", "_a", "media", "value", "event", "handler", "noVolumePref", "volumePref", "e", "isValidNumber", "defaultDuration", "start", "end", "timeRanges", "_", "i", "defaultStreamType", "usedDefaultStreamType", "streamType", "duration", "targetLiveWindow", "liveEdgeOffset", "seekable", "liveEdgeStart", "getSubtitleTracks", "kind", "label", "language", "getShowingSubtitleTracks", "_handler", "_b", "options", "updateDefaultSubtitlesCallback", "TextTrackKinds", "toggleSubtitleTracks", "chaptersTrack", "getTextTracksList", "text", "startTime", "endTime", "shadowChaptersTrack", "documentElement", "containsComposedNode", "currentRoot", "Document", "warnNotReady", "err", "cleanup", "tryPip", "videoRendition", "_c", "renditionId", "index", "r", "audioTrack", "audioTrackId", "track", "isFullscreen", "enterFullscreen", "exitFullscreen", "_value", "fullscreenSupported", "hasFullscreenSupport", "AvailabilityStates", "pipSupported", "hasPipSupport", "availability", "castSupported", "availabilityBool", "error", "_stateOwners", "airplaySupported", "requestMap", "MediaUIEvents", "stateMediator", "stateOwners", "detail", "_a", "_b", "_c", "media", "mediaPreviewTime", "mediaPreviewImage", "mediaPreviewCoords", "track", "getTextTracksList", "TextTrackKinds", "cue", "c", "i", "cs", "base", "url", "numStr", "mediaDuration", "mediaPreviewChapter", "key", "StreamTypes", "notDvr", "liveEdgeTime", "value", "_stateMediator", "options", "tracks", "getSubtitleTracks", "tracksToUpdate", "parseTracks", "preferredLanguage", "GlobalThis", "updateTracksModeTo", "TextTrackModes", "toggleSubtitleTracks", "createMediaStore", "media", "fullscreenElement", "documentElement", "stateMediator", "requestMap", "options", "monitorStateOwnersOnlyWithSubscriptions", "callbacks", "stateOwners", "state", "updateState", "nextStateDelta", "areValuesEq", "cb", "updateStateFromFacade", "nextState", "stateName", "get", "stateUpdateHandlers", "nextStateOwners", "updateStateOwners", "nextStateOwnersDelta", "nextSubscriberCount", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "_j", "_k", "_l", "_m", "_n", "_o", "_p", "pendingUpdate", "prepareStateOwners", "shouldTeardownFromSubscriberCount", "mediaChanged", "textTracksChanged", "videoRenditionsChanged", "audioTracksChanged", "remoteChanged", "rootNodeChanged", "teardownMedia", "teardownTextTracks", "teardownVideoRenditions", "teardownAudioTracks", "teardownRemote", "teardownRootNode", "teardownSomething", "shouldSetupFromSubscriberCount", "setupMedia", "setupTextTracks", "setupVideoRenditions", "setupAudioTracks", "setupRemote", "setupRootNode", "setupSomething", "stateOwnerName", "stateOwner", "mediaEvents", "textTracksEvents", "videoRenditionsEvents", "audioTracksEvents", "remoteEvents", "rootEvents", "stateOwnersUpdateHandlers", "handler", "event", "nextValue", "prevHandler", "eventType", "prevHandlerTeardown", "fn", "action", "type", "detail", "optionName", "optionValue", "callback", "idx", "media_store_default", "ButtonPressedKeys", "DEFAULT_SEEK_OFFSET", "Attributes", "_hotKeys", "_fullscreenElement", "_mediaStore", "_mediaStateCallback", "_mediaStoreUnsubscribe", "_mediaStateEventHandler", "_setupDefaultStore", "setupDefaultStore_fn", "_keyUpHandler", "keyUpHandler_fn", "_keyDownHandler", "keyDownHandler_fn", "MediaController", "MediaContainer", "__privateAdd", "AttributeTokenList", "event", "_a", "__privateGet", "prevState", "__privateSet", "nextState", "stateName", "stateValue", "attrName", "evt", "GlobalThis", "AttributeToStateChangeEventMap", "value", "_b", "__privateMethod", "element", "oldValue", "newValue", "_c", "_d", "_e", "_f", "el", "Document", "MediaUIEvents", "media", "state", "propagateMediaState", "associatedElementSubscriptions", "registerMediaStateReceiver", "unregisterMediaStateReceiver", "unsubscribe", "monitorForMediaStateReceivers", "eventName", "els", "index", "target", "key", "detail", "offsetValue", "media_store_default", "metaKey", "altKey", "MEDIA_UI_ATTRIBUTE_NAMES", "MediaUIAttributes", "MEDIA_UI_PROP_NAMES", "MediaUIProps", "getMediaUIAttributesFrom", "child", "observedAttributes", "mediaChromeAttributesList", "MediaStateReceiverAttributes", "hasMediaUIProps", "mediaStateReceiverCandidate", "propName", "isMediaStateReceiver", "serializeTuple", "tuple", "CustomAttrSerializer", "stringifyTextTrackList", "tuples", "coords", "stringifyRenditionList", "stringifyAudioTrackList", "setAttr", "attrValue", "delay", "setBooleanAttr", "setNumericAttr", "setStringAttr", "val", "isMediaSlotElementDescendant", "traverseForMediaStateReceivers", "rootNode", "mediaStateReceiverCallback", "traverseForMediaStateReceiversSync", "children", "shadowChildren", "name", "relevantAttrs", "registerMediaStateReceiverHandler", "unregisterMediaStateReceiverHandler", "mutationCallback", "mutationsList", "mutationRecord", "addedNodes", "removedNodes", "type", "attributeName", "node", "prevSlotted", "slotChangeHandler", "slotEl", "observer", "media_controller_default", "MediaController", "Attributes", "template", "Document", "_mediaController", "_clickListener", "_positionTooltip", "_keyupListener", "_keydownListener", "_setupTooltip", "setupTooltip_fn", "MediaChromeButton", "GlobalThis", "options", "_a", "__privateAdd", "__privateGet", "_b", "key", "metaKey", "altKey", "buttonHTML", "slotTemplate", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_c", "_d", "_e", "__privateSet", "style", "getOrInsertCSSRule", "mediaControllerId", "__privateMethod", "getStringAttr", "value", "setStringAttr", "initialPlacement", "media_chrome_button_default", "MediaChromeButton", "airplayIcon", "slotTemplate", "Document", "MediaUIAttributes", "tooltipContent", "tooltipLabels", "updateAriaLabel", "el", "label", "verbs", "MediaAirplayButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getBooleanAttr", "value", "setBooleanAttr", "getStringAttr", "setStringAttr", "evt", "GlobalThis", "MediaUIEvents", "media_airplay_button_default", "ccIconOn", "ccIconOff", "slotTemplate", "Document", "tooltipContent", "tooltipLabels", "updateAriaChecked", "el", "areSubsOn", "MediaCaptionsButton", "MediaChromeButton", "MediaUIAttributes", "options", "nouns", "attrName", "oldValue", "newValue", "getSubtitlesListAttr", "list", "setSubtitlesListAttr", "GlobalThis", "MediaUIEvents", "attrVal", "parseTextTracksStr", "newValStr", "stringifyTextTrackList", "media_captions_button_default", "MediaCaptionsButton", "enterIcon", "exitIcon", "slotTemplate", "Document", "MediaUIAttributes", "tooltipContent", "tooltipLabels", "updateAriaLabel", "el", "label", "verbs", "MediaCastButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getBooleanAttr", "value", "setBooleanAttr", "getStringAttr", "setStringAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_cast_button_default", "template", "Document", "Attributes", "_previouslyFocused", "_invokerElement", "_handleOpen", "handleOpen_fn", "_handleClosed", "handleClosed_fn", "_handleInvoke", "handleInvoke_fn", "_handleFocusOut", "handleFocusOut_fn", "_handleKeyDown", "handleKeyDown_fn", "MediaChromeDialog", "GlobalThis", "__privateAdd", "event", "__privateMethod", "attrName", "oldValue", "newValue", "__privateSet", "getActiveElement", "focusable", "_a", "__privateGet", "containsComposedNode", "_b", "_c", "_d", "_e", "key", "ctrlKey", "altKey", "metaKey", "media_chrome_dialog_default", "MediaChromeDialog", "template", "Document", "_mediaController", "_isInputTarget", "_startpoint", "_endpoint", "_cssRules", "_segments", "_onFocusIn", "_onFocusOut", "_updateComputedStyles", "_updateActiveSegment", "updateActiveSegment_fn", "_enableUserEvents", "enableUserEvents_fn", "_disableUserEvents", "disableUserEvents_fn", "_handlePointerDown", "handlePointerDown_fn", "_handlePointerEnter", "handlePointerEnter_fn", "_handlePointerUp", "handlePointerUp_fn", "_handlePointerLeave", "handlePointerLeave_fn", "_handlePointerMove", "handlePointerMove_fn", "MediaChromeRange", "GlobalThis", "__privateAdd", "style", "getOrInsertCSSRule", "clipping", "__privateSet", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "__privateMethod", "mediaControllerId", "observeResize", "unobserveResize", "evt", "rangePercent", "segments", "normalized", "s", "lastMarker", "i", "marker", "isFirst", "isLast", "x", "width", "segmentEl", "cssRule", "pointerRatio", "getPointProgressOnLine", "rule", "selectorText", "start", "arr", "end", "media_chrome_range_default", "MediaChromeRange", "template", "Document", "_mediaController", "MediaControlBar", "GlobalThis", "__privateAdd", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "__privateSet", "mediaControllerId", "media_control_bar_default", "template", "Document", "_mediaController", "MediaTextDisplay", "GlobalThis", "__privateAdd", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "__privateSet", "style", "getOrInsertCSSRule", "mediaControllerId", "_slot", "MediaDurationDisplay", "MediaTextDisplay", "__privateAdd", "__privateSet", "__privateGet", "formatTime", "MediaUIAttributes", "attrName", "oldValue", "newValue", "getNumericAttr", "time", "setNumericAttr", "GlobalThis", "media_duration_display_default", "enterFullscreenIcon", "exitFullscreenIcon", "slotTemplate", "Document", "MediaUIAttributes", "tooltipContent", "tooltipLabels", "updateAriaLabel", "el", "label", "verbs", "MediaFullscreenButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getStringAttr", "value", "setStringAttr", "getBooleanAttr", "setBooleanAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_fullscreen_button_default", "MEDIA_TIME_IS_LIVE", "MEDIA_PAUSED", "MediaUIAttributes", "MEDIA_SEEK_TO_LIVE_REQUEST", "MEDIA_PLAY_REQUEST", "MediaUIEvents", "indicatorSVG", "slotTemplate", "Document", "updateAriaAttributes", "el", "isPausedOrNotLive", "label", "verbs", "MediaLiveButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getBooleanAttr", "value", "setBooleanAttr", "GlobalThis", "media_live_button_default", "Attributes", "DEFAULT_LOADING_DELAY", "template", "Document", "loadingIndicatorIcon", "MediaUIAttributes", "nouns", "_mediaController", "_delay", "MediaLoadingIndicator", "GlobalThis", "__privateAdd", "shadow", "indicatorHTML", "MediaStateReceiverAttributes", "attrName", "oldValue", "newValue", "_a", "_b", "_c", "_d", "_e", "__privateGet", "__privateSet", "mediaControllerId", "delay", "style", "getOrInsertCSSRule", "getBooleanAttr", "value", "setBooleanAttr", "media_loading_indicator_default", "MEDIA_VOLUME_LEVEL", "MediaUIAttributes", "offIcon", "lowIcon", "highIcon", "slotTemplate", "Document", "tooltipContent", "tooltipLabels", "updateAriaLabel", "el", "label", "verbs", "MediaMuteButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getStringAttr", "value", "setStringAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_mute_button_default", "pipIcon", "slotTemplate", "Document", "MediaUIAttributes", "tooltipContent", "tooltipLabels", "updateAriaLabel", "el", "label", "verbs", "MediaPipButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getStringAttr", "value", "setStringAttr", "getBooleanAttr", "setBooleanAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_pip_button_default", "Attributes", "DEFAULT_RATES", "DEFAULT_RATE", "slotTemplate", "Document", "_rates", "MediaPlaybackRateButton", "MediaChromeButton", "options", "tooltipLabels", "__privateAdd", "AttributeTokenList", "MediaUIAttributes", "attrName", "oldValue", "newValue", "__privateGet", "newPlaybackRate", "playbackRate", "nouns", "value", "getNumericAttr", "setNumericAttr", "_a", "_b", "availableRates", "str", "a", "b", "detail", "r", "evt", "GlobalThis", "MediaUIEvents", "media_playback_rate_button_default", "playIcon", "pauseIcon", "slotTemplate", "Document", "MediaUIAttributes", "tooltipContent", "tooltipLabels", "updateAriaLabel", "el", "label", "verbs", "MediaPlayButton", "MediaChromeButton", "options", "attrName", "oldValue", "newValue", "getBooleanAttr", "value", "setBooleanAttr", "eventName", "MediaUIEvents", "GlobalThis", "media_play_button_default", "MediaPlayButton", "Attributes", "template", "Document", "unsetBackgroundImage", "el", "setBackgroundImage", "image", "MediaPosterImage", "GlobalThis", "attrName", "oldValue", "newValue", "getStringAttr", "value", "setStringAttr", "media_poster_image_default", "_slot", "MediaPreviewChapterDisplay", "MediaTextDisplay", "__privateAdd", "__privateSet", "MediaUIAttributes", "attrName", "oldValue", "newValue", "__privateGet", "getStringAttr", "value", "setStringAttr", "GlobalThis", "media_preview_chapter_display_default", "template", "Document", "_mediaController", "MediaPreviewThumbnail", "GlobalThis", "__privateAdd", "MediaStateReceiverAttributes", "MediaUIAttributes", "_a", "_b", "_c", "mediaControllerId", "__privateSet", "__privateGet", "attrName", "oldValue", "newValue", "_d", "_e", "getStringAttr", "value", "setStringAttr", "attrVal", "coord", "coords", "previewImage", "x", "y", "w", "h", "src", "computedStyle", "maxWidth", "maxHeight", "minWidth", "minHeight", "maxRatio", "minRatio", "isScalingDown", "scale", "style", "getOrInsertCSSRule", "imgStyle", "img", "extremum", "resize", "media_preview_thumbnail_default", "_slot", "MediaPreviewTimeDisplay", "MediaTextDisplay", "__privateAdd", "__privateSet", "__privateGet", "formatTime", "MediaUIAttributes", "attrName", "oldValue", "newValue", "getNumericAttr", "value", "setNumericAttr", "GlobalThis", "media_preview_time_display_default", "Attributes", "DEFAULT_SEEK_OFFSET", "backwardIcon", "slotTemplate", "Document", "DEFAULT_TIME", "MediaSeekBackwardButton", "MediaChromeButton", "MediaUIAttributes", "options", "tooltipLabels", "getNumericAttr", "attrName", "_oldValue", "newValue", "value", "setNumericAttr", "verbs", "updateIconText", "getSlotted", "time", "detail", "evt", "GlobalThis", "MediaUIEvents", "media_seek_backward_button_default", "Attributes", "DEFAULT_SEEK_OFFSET", "forwardIcon", "slotTemplate", "Document", "DEFAULT_TIME", "MediaSeekForwardButton", "MediaChromeButton", "MediaUIAttributes", "options", "tooltipLabels", "getNumericAttr", "attrName", "_oldValue", "newValue", "value", "setNumericAttr", "verbs", "updateIconText", "getSlotted", "time", "detail", "evt", "GlobalThis", "MediaUIEvents", "media_seek_forward_button_default", "Attributes", "CombinedAttributes", "MediaUIAttributes", "ButtonPressedKeys", "DEFAULT_TIMES_SEP", "formatTimesLabel", "el", "timesSep", "_a", "_b", "showRemaining", "showDuration", "currentTime", "seekableEnd", "endTime", "timeLabel", "formatTime", "DEFAULT_MISSING_TIME_PHRASE", "updateAriaValueText", "currentTimePhrase", "formatAsTimePhrase", "totalTimePhrase", "fullPhrase", "_slot", "MediaTimeDisplay", "MediaTextDisplay", "__privateAdd", "__privateSet", "__privateGet", "style", "getOrInsertCSSRule", "nouns", "keyUpHandler", "evt", "key", "metaKey", "altKey", "attrName", "oldValue", "newValue", "getBooleanAttr", "show", "setBooleanAttr", "noToggle", "getNumericAttr", "time", "setNumericAttr", "seekable", "range", "timesLabel", "GlobalThis", "media_time_display_default", "_range", "_startTime", "_previousTime", "_deltaTime", "_frameCount", "_updateTimestamp", "_updateStartValue", "_lastRangeIncrease", "_id", "_animate", "RangeAnimation", "range", "callback", "fps", "__privateAdd", "now", "__privateSet", "__privateGet", "fpsInterval", "__privateWrapper", "delta", "value", "start", "duration", "playbackRate", "increase", "durationDelta", "DEFAULT_MISSING_TIME_PHRASE", "updateAriaValueText", "el", "range", "currentTimePhrase", "formatAsTimePhrase", "calcTimeFromRangeValue", "totalTimePhrase", "fullPhrase", "template", "Document", "MediaUIAttributes", "calcRangeValueFromTime", "time", "startTime", "endTime", "value", "_rootNode", "_animation", "_boxes", "_previewTime", "_previewBox", "_currentBox", "_boxPaddingLeft", "_boxPaddingRight", "_mediaChaptersCues", "_toggleRangeAnimation", "toggleRangeAnimation_fn", "_shouldRangeAnimate", "shouldRangeAnimate_fn", "_updateRange", "_getElementRects", "getElementRects_fn", "_getBoxPosition", "getBoxPosition_fn", "_getBoxShiftPosition", "getBoxShiftPosition_fn", "_handlePointerMove", "handlePointerMove_fn", "_previewRequest", "previewRequest_fn", "_seekRequest", "seekRequest_fn", "MediaTimeRange", "MediaChromeRange", "__privateAdd", "isValidNumber", "__privateSet", "computedStyle", "RangeAnimation", "__privateGet", "_a", "nouns", "__privateMethod", "attrName", "oldValue", "newValue", "c", "getBooleanAttr", "setBooleanAttr", "getNumericAttr", "setNumericAttr", "buffered", "timePair", "timeStr", "list", "strVal", "tuple", "seekable", "end", "start", "getStringAttr", "setStringAttr", "relativeBufferedEnd", "currentTime", "bufferedEnd", "style", "getOrInsertCSSRule", "currentRailRule", "currentBoxRule", "rects", "boxPos", "boxShift", "evt", "containsComposedNode", "isElementVisible", "box", "boundsRect", "closestComposedNode", "rangeRect", "width", "min", "max", "ratio", "position", "maxPos", "pointerX", "offset", "isOverBoxes", "b", "duration", "previewRailRule", "previewBoxRule", "pointerRatio", "diff", "detail", "GlobalThis", "MediaUIEvents", "media_time_range_default", "Attributes", "template", "Document", "MediaTooltip", "GlobalThis", "_a", "isElementVisible", "placement", "tooltipStyle", "containingEl", "closestComposedNode", "getMediaController", "containerX", "containerWidth", "tooltipX", "tooltipWidth", "tooltipRight", "containerRight", "offsetXVal", "currOffsetX", "marginVal", "currMargin", "leftDiff", "rightDiff", "getStringAttr", "value", "setStringAttr", "media_tooltip_default", "DEFAULT_VOLUME", "toVolume", "el", "formatAsPercentString", "value", "MediaVolumeRange", "MediaChromeRange", "MediaUIAttributes", "detail", "evt", "GlobalThis", "MediaUIEvents", "nouns", "attrName", "oldValue", "newValue", "getNumericAttr", "setNumericAttr", "getBooleanAttr", "setBooleanAttr", "getStringAttr", "setStringAttr", "media_volume_range_default"]
}
