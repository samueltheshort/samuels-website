{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "dist/media-airplay-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaAirplayButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-airplay-button-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "slots": [
            {
              "description": "An element shown when the media is not in AirPlay mode and pressing the button will open the AirPlay menu.",
              "name": "enter"
            },
            {
              "description": "An element shown when the media is in AirPlay mode and pressing the button will open the AirPlay menu.",
              "name": "exit"
            },
            {
              "description": "The element shown for the AirPlay button’s display.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "mediaIsAirplaying",
              "type": {
                "text": "boolean"
              },
              "description": "Are we currently airplaying"
            },
            {
              "kind": "field",
              "name": "mediaAirplayUnavailable",
              "type": {
                "text": "string | undefined"
              },
              "description": "Airplay unavailability state"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "CustomEvent"
              },
              "name": "mediaairplayrequest"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "(unavailable|unsupported)"
              },
              "description": "(read-only) Set if AirPlay is unavailable.",
              "name": "mediaairplayunavailable"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "(read-only) Present if the media is airplaying.",
              "name": "mediaisairplaying"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeButton",
            "module": "/dist/media-chrome-button.js"
          },
          "tagName": "media-airplay-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-airplay-button",
          "declaration": {
            "name": "MediaAirplayButton",
            "module": "dist/media-airplay-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaAirplayButton",
            "module": "dist/media-airplay-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-captions-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaCaptionsButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-captions-button-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "slots": [
            {
              "description": "An element that will be shown while closed captions or subtitles are on.",
              "name": "on"
            },
            {
              "description": "An element that will be shown while closed captions or subtitles are off.",
              "name": "off"
            },
            {
              "description": "An element for representing on and off states in a single icon",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "_captionsReady",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "mediaSubtitlesList",
              "type": {
                "text": "TextTrackLike[]"
              },
              "description": "An array of TextTrack-like objects.\nObjects must have the properties: kind, language, and label."
            },
            {
              "kind": "field",
              "name": "mediaSubtitlesShowing",
              "type": {
                "text": "TextTrackLike[]"
              },
              "description": "An array of TextTrack-like objects.\nObjects must have the properties: kind, language, and label."
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "events": [
            {
              "type": {}
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) A list of all subtitles and captions.",
              "name": "mediasubtitleslist"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) A list of the showing subtitles and captions.",
              "name": "mediasubtitlesshowing"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeButton",
            "module": "/dist/media-chrome-button.js"
          },
          "tagName": "media-captions-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-captions-button",
          "declaration": {
            "name": "MediaCaptionsButton",
            "module": "dist/media-captions-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaCaptionsButton",
          "declaration": {
            "name": "MediaCaptionsButton",
            "module": "dist/media-captions-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaCaptionsButton",
            "module": "dist/media-captions-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-cast-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaCastButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-cast-button-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "slots": [
            {
              "description": "An element shown when the media is not in casting mode and pressing the button will open the Cast menu.",
              "name": "enter"
            },
            {
              "description": "An element shown when the media is in casting mode and pressing the button will open the Cast menu.",
              "name": "exit"
            },
            {
              "description": "An element for representing enter and exit states in a single icon",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "mediaIsCasting",
              "type": {
                "text": "boolean"
              },
              "description": "Are we currently casting"
            },
            {
              "kind": "field",
              "name": "mediaCastUnavailable",
              "type": {
                "text": "string | undefined"
              },
              "description": "Cast unavailability state"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "events": [
            {
              "name": "eventName",
              "type": {}
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "(unavailable|unsupported)"
              },
              "description": "(read-only) Set if casting is unavailable.",
              "name": "mediacastunavailable"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "(read-only) Present if the media is casting.",
              "name": "mediaiscasting"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeButton",
            "module": "/dist/media-chrome-button.js"
          },
          "tagName": "media-cast-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-cast-button",
          "declaration": {
            "name": "MediaCastButton",
            "module": "dist/media-cast-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaCastButton",
            "module": "dist/media-cast-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-chrome-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaChromeButton",
          "cssProperties": [
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)"
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)"
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))"
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))"
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display"
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))"
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)"
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px"
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px"
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)"
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold"
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif"
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px"
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)"
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width"
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)"
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform"
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "enable"
            },
            {
              "kind": "method",
              "name": "disable"
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable."
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller"
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip"
            }
          ],
          "superclass": {
            "module": "dist/media-chrome-button.ts"
          },
          "tagName": "media-chrome-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-chrome-button",
          "declaration": {
            "name": "MediaChromeButton",
            "module": "dist/media-chrome-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaChromeButton",
          "declaration": {
            "name": "MediaChromeButton",
            "module": "dist/media-chrome-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaChromeButton",
            "module": "dist/media-chrome-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-chrome-dialog.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Attributes",
          "type": {
            "text": "object"
          },
          "default": "{ HIDDEN: 'hidden', ANCHOR: 'anchor', }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "MediaChromeDialog",
          "cssProperties": [
            {
              "description": "Default color of text / icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)"
            },
            {
              "description": "Default color of background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .8)"
            },
            {
              "description": "`color` of text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))"
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .8))"
            },
            {
              "description": "`display` of dialog.",
              "name": "--media-dialog-display",
              "default": "inline-flex"
            },
            {
              "description": "`background` of dialog.",
              "name": "--media-dialog-background",
              "default": "var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .8)))"
            },
            {
              "description": "`border-radius` of dialog.",
              "name": "--media-dialog-border-radius"
            },
            {
              "description": "`border` of dialog.",
              "name": "--media-dialog-border",
              "default": "none"
            },
            {
              "description": "`transition` of dialog when showing.",
              "name": "--media-dialog-transition-in",
              "default": "visibility 0s, opacity .2s ease-out, transform .15s ease-out"
            },
            {
              "description": "`transition` of dialog when hiding.",
              "name": "--media-dialog-transition-out",
              "default": "visibility .15s ease-in, opacity .15s ease-in, transform .15s ease-in"
            },
            {
              "description": "`visibility` of dialog when showing.",
              "name": "--media-dialog-visibility",
              "default": "visible"
            },
            {
              "description": "`visibility` of dialog when hiding.",
              "name": "--media-dialog-hidden-visibility",
              "default": "hidden"
            },
            {
              "description": "`opacity` of dialog when showing.",
              "name": "--media-dialog-opacity",
              "default": "1"
            },
            {
              "description": "`opacity` of dialog when hiding.",
              "name": "--media-dialog-hidden-opacity",
              "default": "0"
            },
            {
              "description": "`transform` of dialog when showing.",
              "name": "--media-dialog-transform-in",
              "default": "translateY(0) scale(1)"
            },
            {
              "description": "`transform` of dialog when hiding.",
              "name": "--media-dialog-transform-out",
              "default": "translateY(2px) scale(.99)"
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, normal) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)"
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "normal"
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif"
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px"
            },
            {
              "description": "`line-height` of text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)"
            }
          ],
          "slots": [
            {
              "description": "Default slotted elements.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "template",
              "type": {
                "text": "HTMLTemplateElement"
              },
              "static": true,
              "default": "template"
            },
            {
              "kind": "field",
              "name": "#previouslyFocused",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#invokerElement",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#handleOpen",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#handleClosed",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "focus"
            },
            {
              "kind": "method",
              "name": "#handleInvoke",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "InvokeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#handleFocusOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "FocusEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "module": "dist/media-chrome-dialog.ts"
          },
          "tagName": "media-chrome-dialog",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attributes",
          "declaration": {
            "name": "Attributes",
            "module": "dist/media-chrome-dialog.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-chrome-dialog",
          "declaration": {
            "name": "MediaChromeDialog",
            "module": "dist/media-chrome-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaChromeDialog",
          "declaration": {
            "name": "MediaChromeDialog",
            "module": "dist/media-chrome-dialog.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaChromeDialog",
            "module": "dist/media-chrome-dialog.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-chrome-range.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaChromeRange",
          "cssProperties": [
            {
              "description": "Default color of range bar.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)"
            },
            {
              "description": "Default color of range background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)"
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "default": "inline-block"
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px"
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))"
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgb(50 50 70 / .7)"
            },
            {
              "description": "`height` of control.",
              "name": "--media-control-height",
              "default": "24px"
            },
            {
              "description": "`padding` of range.",
              "name": "--media-range-padding",
              "default": "var(--media-control-padding, 10px)"
            },
            {
              "description": "`padding-left` of range.",
              "name": "--media-range-padding-left",
              "default": "var(--_media-range-padding)"
            },
            {
              "description": "`padding-right` of range.",
              "name": "--media-range-padding-right",
              "default": "var(--_media-range-padding)"
            },
            {
              "description": "`width` of range thumb.",
              "name": "--media-range-thumb-width",
              "default": "10px"
            },
            {
              "description": "`height` of range thumb.",
              "name": "--media-range-thumb-height",
              "default": "10px"
            },
            {
              "description": "`border` of range thumb.",
              "name": "--media-range-thumb-border",
              "default": "none"
            },
            {
              "description": "`border-radius` of range thumb.",
              "name": "--media-range-thumb-border-radius",
              "default": "10px"
            },
            {
              "description": "`background` of range thumb.",
              "name": "--media-range-thumb-background",
              "default": "var(--media-primary-color, rgb(238 238 238))"
            },
            {
              "description": "`box-shadow` of range thumb.",
              "name": "--media-range-thumb-box-shadow",
              "default": "1px 1px 1px transparent"
            },
            {
              "description": "`transition` of range thumb.",
              "name": "--media-range-thumb-transition"
            },
            {
              "description": "`transform` of range thumb.",
              "name": "--media-range-thumb-transform",
              "default": "none"
            },
            {
              "description": "`opacity` of range thumb.",
              "name": "--media-range-thumb-opacity",
              "default": "1"
            },
            {
              "description": "`background` of range progress.",
              "name": "--media-range-bar-color",
              "default": "var(--media-primary-color, rgb(238 238 238))"
            },
            {
              "description": "`background` of range track background.",
              "name": "--media-range-track-background",
              "default": "rgb(255 255 255 / .2)"
            },
            {
              "description": "`backdrop-filter` of range track.",
              "name": "--media-range-track-backdrop-filter"
            },
            {
              "description": "`width` of range track.",
              "name": "--media-range-track-width",
              "default": "100%"
            },
            {
              "description": "`height` of range track.",
              "name": "--media-range-track-height",
              "default": "4px"
            },
            {
              "description": "`border` of range track.",
              "name": "--media-range-track-border",
              "default": "none"
            },
            {
              "description": "`outline` of range track.",
              "name": "--media-range-track-outline"
            },
            {
              "description": "`outline-offset` of range track.",
              "name": "--media-range-track-outline-offset"
            },
            {
              "description": "`border-radius` of range track.",
              "name": "--media-range-track-border-radius",
              "default": "1px"
            },
            {
              "description": "`box-shadow` of range track.",
              "name": "--media-range-track-box-shadow",
              "default": "none"
            },
            {
              "description": "`transition` of range track.",
              "name": "--media-range-track-transition"
            },
            {
              "description": "`translate` x-coordinate of range track.",
              "name": "--media-range-track-translate-x",
              "default": "0px"
            },
            {
              "description": "`translate` y-coordinate of range track.",
              "name": "--media-range-track-translate-y",
              "default": "0px"
            },
            {
              "description": "`display` of range hover zone.",
              "name": "--media-time-range-hover-display",
              "default": "block"
            },
            {
              "description": "`bottom` of range hover zone.",
              "name": "--media-time-range-hover-bottom",
              "default": "-5px"
            },
            {
              "description": "`height` of range hover zone.",
              "name": "--media-time-range-hover-height",
              "default": "max(100% + 5px, 20px)"
            },
            {
              "description": "`background` of range track pointer.",
              "name": "--media-range-track-pointer-background"
            },
            {
              "description": "`border-right` of range track pointer.",
              "name": "--media-range-track-pointer-border-right"
            }
          ],
          "cssParts": [
            {
              "description": "The runnable track of the range.",
              "name": "track"
            },
            {
              "description": "The progress part of the track.",
              "name": "progress"
            },
            {
              "description": "The thumb of the range.",
              "name": "thumb"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#isInputTarget",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#startpoint",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#endpoint",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#cssRules",
              "privacy": "private",
              "type": {
                "text": "Record<string, CSSStyleRule>"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "#segments",
              "privacy": "private",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "container",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "range",
              "type": {
                "text": "Omit<HTMLInputElement, \"value\" | \"min\" | \"max\"> &\n     * {value: number, min: number, max: number}"
              }
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "#onFocusIn",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#onFocusOut",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#updateComputedStyles",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updatePointerBar",
              "parameters": [
                {
                  "name": "evt"
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateBar"
            },
            {
              "kind": "method",
              "name": "updateSegments",
              "parameters": [
                {
                  "name": "segments"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#updateActiveSegment",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getPointerRatio",
              "parameters": [
                {
                  "name": "evt"
                }
              ]
            },
            {
              "kind": "field",
              "name": "dragging",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#enableUserEvents",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#disableUserEvents",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "parameters": [
                {
                  "name": "evt"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#handlePointerDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#handlePointerEnter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#handlePointerUp",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#handlePointerLeave",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#handlePointerMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt"
                }
              ]
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable."
            },
            {
              "name": "aria-disabled"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller"
            }
          ],
          "superclass": {
            "module": "dist/media-chrome-range.ts"
          },
          "tagName": "media-chrome-range",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-chrome-range",
          "declaration": {
            "name": "MediaChromeRange",
            "module": "dist/media-chrome-range.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaChromeRange",
          "declaration": {
            "name": "MediaChromeRange",
            "module": "dist/media-chrome-range.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaChromeRange",
            "module": "dist/media-chrome-range.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-container.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Attributes",
          "type": {
            "text": "object"
          },
          "default": "{ AUDIO: 'audio', AUTOHIDE: 'autohide', BREAKPOINTS: 'breakpoints', GESTURES_DISABLED: 'gesturesdisabled', KEYBOARD_CONTROL: 'keyboardcontrol', NO_AUTOHIDE: 'noautohide', USER_INACTIVE: 'userinactive', }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "MediaContainer",
          "cssProperties": [
            {
              "description": "`background-color` of container.",
              "name": "--media-background-color",
              "default": "#000"
            },
            {
              "description": "`display` of the media slot (default none for [audio] usage).",
              "name": "--media-slot-display",
              "default": "none"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#pointerDownTimeStamp",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "#currentMedia",
              "privacy": "private",
              "type": {
                "text": "HTMLMediaElement | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#inactiveTimeout",
              "privacy": "private",
              "type": {
                "text": "ReturnType<typeof setTimeout> | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#autohide",
              "privacy": "private",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "breakpointsComputed",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "media",
              "type": {
                "text": "HTMLVideoElement | null"
              },
              "return": {
                "type": {
                  "text": "HTMLVideoElement &\n   * {buffered,\n   * webkitEnterFullscreen?,\n   * webkitExitFullscreen?,\n   * requestCast?,\n   * webkitShowPlaybackTargetPicker?,\n   * videoTracks?,\n   * }"
                }
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "handleMediaUpdated",
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "HTMLMediaElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "mediaSetCallback",
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "HTMLMediaElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "mediaUnsetCallback",
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "HTMLMediaElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#handlePointerMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#handlePointerUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#setInactive",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#setActive",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#scheduleInactive",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "autohide",
              "type": {
                "text": "string"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "name": "audio"
            },
            {
              "type": {
                "text": "string"
              },
              "name": "autohide"
            },
            {
              "type": {
                "text": "string"
              },
              "name": "breakpoints"
            },
            {
              "type": {
                "text": "boolean"
              },
              "name": "gesturesdisabled"
            },
            {
              "type": {
                "text": "boolean"
              },
              "name": "keyboardcontrol"
            },
            {
              "type": {
                "text": "boolean"
              },
              "name": "noautohide"
            },
            {
              "type": {
                "text": "boolean"
              },
              "name": "userinactive"
            }
          ],
          "superclass": {
            "module": "/dist/media-gesture-receiver.js"
          },
          "tagName": "media-container",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attributes",
          "declaration": {
            "name": "Attributes",
            "module": "dist/media-container.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-container",
          "declaration": {
            "name": "MediaContainer",
            "module": "dist/media-container.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaContainer",
          "declaration": {
            "name": "MediaContainer",
            "module": "dist/media-container.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaContainer",
            "module": "dist/media-container.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-control-bar.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaControlBar",
          "cssProperties": [
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)"
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color"
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))"
            },
            {
              "description": "`display` property of control bar.",
              "name": "--media-control-bar-display",
              "default": "inline-flex"
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "default": "var(--media-control-bar-display, inline-flex)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "type": {
                "text": "MediaController | null"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller"
            }
          ],
          "superclass": {
            "module": "dist/media-control-bar.ts"
          },
          "tagName": "media-control-bar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-control-bar",
          "declaration": {
            "name": "MediaControlBar",
            "module": "dist/media-control-bar.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaControlBar",
            "module": "dist/media-control-bar.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-controller.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Attributes",
          "type": {
            "text": "object"
          },
          "default": "{ DEFAULT_SUBTITLES: 'defaultsubtitles', DEFAULT_STREAM_TYPE: 'defaultstreamtype', DEFAULT_DURATION: 'defaultduration', FULLSCREEN_ELEMENT: 'fullscreenelement', HOTKEYS: 'hotkeys', KEYS_USED: 'keysused', LIVE_EDGE_OFFSET: 'liveedgeoffset', NO_AUTO_SEEK_TO_LIVE: 'noautoseektolive', NO_HOTKEYS: 'nohotkeys', NO_VOLUME_PREF: 'novolumepref', NO_SUBTITLES_LANG_PREF: 'nosubtitleslangpref', NO_DEFAULT_STORE: 'nodefaultstore', KEYBOARD_FORWARD_SEEK_OFFSET: 'keyboardforwardseekoffset', KEYBOARD_BACKWARD_SEEK_OFFSET: 'keyboardbackwardseekoffset', }"
        },
        {
          "kind": "class",
          "description": "Media Controller should not mimic the HTMLMediaElement API.",
          "name": "MediaController",
          "members": [
            {
              "kind": "field",
              "name": "mediaStateReceivers",
              "type": {
                "text": "HTMLElement[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "associatedElementSubscriptions",
              "type": {
                "text": "Map<HTMLElement, () => void>"
              },
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "#hotKeys",
              "privacy": "private",
              "default": "new AttributeTokenList(this, Attributes.HOTKEYS)"
            },
            {
              "kind": "field",
              "name": "#fullscreenElement",
              "privacy": "private",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "#mediaStore",
              "privacy": "private",
              "type": {
                "text": "MediaStore"
              }
            },
            {
              "kind": "field",
              "name": "#mediaStateCallback",
              "privacy": "private",
              "type": {
                "text": "(nextState: any) => void"
              }
            },
            {
              "kind": "field",
              "name": "#mediaStoreUnsubscribe",
              "privacy": "private",
              "type": {
                "text": "() => void"
              }
            },
            {
              "kind": "field",
              "name": "#mediaStateEventHandler",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#setupDefaultStore",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "mediaStore",
              "type": {
                "text": "MediaStore"
              }
            },
            {
              "kind": "field",
              "name": "fullscreenElement",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "method",
              "name": "mediaSetCallback",
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "HTMLMediaElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "method",
              "name": "mediaUnsetCallback",
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "HTMLMediaElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "method",
              "name": "propagateMediaState",
              "parameters": [
                {
                  "name": "stateName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "state",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "associateElement",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "unassociateElement",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "registerMediaStateReceiver",
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "unregisterMediaStateReceiver",
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#keyUpHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#keyDownHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "enableHotkeys"
            },
            {
              "kind": "method",
              "name": "disableHotkeys"
            },
            {
              "kind": "field",
              "name": "hotkeys",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "keyboardShortcutHandler",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "#pointerDownTimeStamp",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "0",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "field",
              "name": "#currentMedia",
              "privacy": "private",
              "type": {
                "text": "HTMLMediaElement | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "field",
              "name": "#inactiveTimeout",
              "privacy": "private",
              "type": {
                "text": "ReturnType<typeof setTimeout> | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "field",
              "name": "#autohide",
              "privacy": "private",
              "type": {
                "text": "number | undefined"
              },
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "field",
              "name": "breakpointsComputed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "field",
              "name": "media",
              "type": {
                "text": "HTMLVideoElement | null"
              },
              "return": {
                "type": {
                  "text": "HTMLVideoElement &\n   * {buffered,\n   * webkitEnterFullscreen?,\n   * webkitExitFullscreen?,\n   * requestCast?,\n   * webkitShowPlaybackTargetPicker?,\n   * videoTracks?,\n   * }"
                }
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleMediaUpdated",
              "parameters": [
                {
                  "name": "media",
                  "type": {
                    "text": "HTMLMediaElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handlePointerMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handlePointerUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PointerEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setInactive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setActive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "method",
              "name": "#scheduleInactive",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "kind": "field",
              "name": "autohide",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            }
          ],
          "events": [
            {
              "name": "eventName",
              "type": {}
            },
            {
              "type": {}
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "name": "defaultsubtitles"
            },
            {
              "type": {
                "text": "string"
              },
              "name": "defaultstreamtype"
            },
            {
              "type": {
                "text": "string"
              },
              "name": "defaultduration"
            },
            {
              "type": {
                "text": "string"
              },
              "name": "fullscreenelement"
            },
            {
              "type": {
                "text": "boolean"
              },
              "name": "nohotkeys"
            },
            {
              "type": {
                "text": "string"
              },
              "name": "hotkeys"
            },
            {
              "type": {
                "text": "string"
              },
              "name": "keysused"
            },
            {
              "type": {
                "text": "string"
              },
              "name": "liveedgeoffset"
            },
            {
              "type": {
                "text": "boolean"
              },
              "name": "noautoseektolive"
            },
            {
              "type": {
                "text": "boolean"
              },
              "name": "novolumepref"
            },
            {
              "type": {
                "text": "boolean"
              },
              "name": "nosubtitleslangpref"
            },
            {
              "type": {
                "text": "boolean"
              },
              "name": "nodefaultstore"
            },
            {
              "type": {
                "text": "boolean"
              },
              "name": "audio",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "name": "autohide",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "name": "breakpoints",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "name": "gesturesdisabled",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "name": "keyboardcontrol",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "name": "noautohide",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "name": "userinactive",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaContainer",
            "module": "/dist/media-container.js"
          },
          "tagName": "media-controller",
          "customElement": true,
          "cssProperties": [
            {
              "description": "`background-color` of container.",
              "name": "--media-background-color",
              "default": "#000",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            },
            {
              "description": "`display` of the media slot (default none for [audio] usage).",
              "name": "--media-slot-display",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaContainer",
                "module": "dist/media-container.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attributes",
          "declaration": {
            "name": "Attributes",
            "module": "dist/media-controller.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-controller",
          "declaration": {
            "name": "MediaController",
            "module": "dist/media-controller.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaController",
          "declaration": {
            "name": "MediaController",
            "module": "dist/media-controller.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaController",
            "module": "dist/media-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-duration-display.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaDurationDisplay",
          "cssProperties": [
            {
              "description": "`display` property of display.",
              "name": "--media-duration-display-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "Default color of background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`color` of text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, normal) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "normal",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`line-height` of text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#slot",
              "privacy": "private",
              "type": {
                "text": "HTMLSlotElement"
              },
              "default": "this.shadowRoot.querySelector('slot')"
            },
            {
              "kind": "field",
              "name": "mediaDuration",
              "type": {
                "text": "number | undefined"
              },
              "description": "In seconds"
            },
            {
              "kind": "field",
              "name": "textContent"
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "type": {
                "text": "MediaController | null"
              },
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the media duration.",
              "name": "mediaduration"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaTextDisplay",
            "module": "/dist/media-text-display.js"
          },
          "tagName": "media-duration-display",
          "customElement": true,
          "slots": [
            {
              "description": "Default slotted elements.",
              "name": "",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-duration-display",
          "declaration": {
            "name": "MediaDurationDisplay",
            "module": "dist/media-duration-display.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaDurationDisplay",
            "module": "dist/media-duration-display.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-fullscreen-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaFullscreenButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-fullscreen-button-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "slots": [
            {
              "description": "An element shown when the media is not in fullscreen and pressing the button will trigger entering fullscreen.",
              "name": "enter"
            },
            {
              "description": "An element shown when the media is in fullscreen and pressing the button will trigger exiting fullscreen.",
              "name": "exit"
            },
            {
              "description": "An element for representing enter and exit states in a single icon",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "mediaFullscreenUnavailable",
              "type": {
                "text": "string | undefined"
              },
              "description": "Fullscreen unavailability state"
            },
            {
              "kind": "field",
              "name": "mediaIsFullscreen",
              "type": {
                "text": "boolean"
              },
              "description": "Whether fullscreen is available"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "events": [
            {
              "name": "eventName",
              "type": {}
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "(unavailable|unsupported)"
              },
              "description": "(read-only) Set if fullscreen is unavailable.",
              "name": "mediafullscreenunavailable"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "(read-only) Present if the media is fullscreen.",
              "name": "mediaisfullscreen"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeButton",
            "module": "/dist/media-chrome-button.js"
          },
          "tagName": "media-fullscreen-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-fullscreen-button",
          "declaration": {
            "name": "MediaFullscreenButton",
            "module": "dist/media-fullscreen-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaFullscreenButton",
            "module": "dist/media-fullscreen-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-gesture-receiver.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaGestureReceiver",
          "cssProperties": [
            {
              "description": "`display` property of gesture receiver.",
              "name": "--media-gesture-receiver-display",
              "default": "inline-block"
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "default": "var(--media-gesture-receiver-display, inline-block)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "_pointerType",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "kind": "field",
              "name": "mediaPaused",
              "description": "Is the media paused",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "handleTap",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMouseClick",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            }
          ],
          "events": [
            {
              "name": "eventName",
              "type": {}
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "(read-only) Present if the media is paused.",
              "name": "mediapaused"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller"
            }
          ],
          "superclass": {
            "module": "dist/media-gesture-receiver.ts"
          },
          "tagName": "media-gesture-receiver",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-gesture-receiver",
          "declaration": {
            "name": "MediaGestureReceiver",
            "module": "dist/media-gesture-receiver.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaGestureReceiver",
            "module": "dist/media-gesture-receiver.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-live-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaLiveButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-live-button-display",
              "default": "inline-flex"
            },
            {
              "description": "`fill` and `color` of not live button icon.",
              "name": "--media-live-button-icon-color",
              "default": "rgb(140, 140, 140)"
            },
            {
              "description": "`fill` and `color` of live button icon.",
              "name": "--media-live-button-indicator-color",
              "default": "rgb(255, 0, 0)"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "slots": [
            {
              "description": "The default is an SVG of a circle that changes to red when the video or audio is live. Can be replaced with your own SVG or font icon.",
              "name": "indicator"
            },
            {
              "description": "A simple text space (&nbsp;) between the indicator and the text.",
              "name": "spacer"
            },
            {
              "description": "The text content of the button, with a default of “LIVE”.",
              "name": "text"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "mediaPaused",
              "type": {
                "text": "boolean"
              },
              "description": "Is the media paused"
            },
            {
              "kind": "field",
              "name": "mediaTimeIsLive",
              "type": {
                "text": "boolean"
              },
              "description": "Is the media playback currently live"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "events": [
            {
              "name": "MEDIA_SEEK_TO_LIVE_REQUEST",
              "type": {}
            },
            {
              "name": "MEDIA_PLAY_REQUEST",
              "type": {}
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "(read-only) Present if the media is paused.",
              "name": "mediapaused"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "(read-only) Present if the media playback is live.",
              "name": "mediatimeislive"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeButton",
            "module": "/dist/media-chrome-button.js"
          },
          "tagName": "media-live-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-live-button",
          "declaration": {
            "name": "MediaLiveButton",
            "module": "dist/media-live-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaLiveButton",
            "module": "dist/media-live-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-loading-indicator.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Attributes",
          "type": {
            "text": "object"
          },
          "default": "{ LOADING_DELAY: 'loadingdelay', }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "MediaLoadingIndicator",
          "cssProperties": [
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)"
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))"
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "default": "var(--media-loading-indicator-display, inline-block)"
            },
            {
              "description": "`display` property of loading indicator.",
              "name": "--media-loading-indicator-display",
              "default": "inline-block"
            },
            {
              "description": "`opacity` property of loading indicator. Set to 1 to force it to be visible.",
              "name": "--media-loading-indicator-opacity",
              "default": "0"
            },
            {
              "description": "`transition-delay` property of loading indicator. Make sure to include units.",
              "name": "--media-loading-indicator-transition-delay",
              "default": "500ms"
            },
            {
              "description": "`width` of loading icon.",
              "name": "--media-loading-indicator-icon-width"
            },
            {
              "description": "`height` of loading icon.",
              "name": "--media-loading-indicator-icon-height",
              "default": "100px"
            }
          ],
          "slots": [
            {
              "description": "The element shown for when the media is in a buffering state.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "type": {
                "text": "MediaController"
              }
            },
            {
              "kind": "field",
              "name": "#delay",
              "privacy": "private",
              "default": "500",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "loadingDelay",
              "type": {
                "text": "number"
              },
              "description": "Delay in ms"
            },
            {
              "kind": "field",
              "name": "mediaPaused",
              "type": {
                "text": "boolean"
              },
              "description": "Is the media paused"
            },
            {
              "kind": "field",
              "name": "mediaLoading",
              "type": {
                "text": "boolean"
              },
              "description": "Is the media loading"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "Set the delay in ms before the loading animation is shown.",
              "name": "loadingdelay"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "(read-only) Present if the media is paused.",
              "name": "mediapaused"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "(read-only) Present if the media is loading.",
              "name": "medialoading"
            }
          ],
          "superclass": {
            "module": "dist/media-loading-indicator.ts"
          },
          "tagName": "media-loading-indicator",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attributes",
          "declaration": {
            "name": "Attributes",
            "module": "dist/media-loading-indicator.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-loading-indicator",
          "declaration": {
            "name": "MediaLoadingIndicator",
            "module": "dist/media-loading-indicator.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaLoadingIndicator",
            "module": "dist/media-loading-indicator.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-mute-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaMuteButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-mute-button-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "slots": [
            {
              "description": "An element shown when the media is muted or the media’s volume is 0.",
              "name": "off"
            },
            {
              "description": "An element shown when the media’s volume is “low” (less than 50% / 0.5).",
              "name": "low"
            },
            {
              "description": "An element shown when the media’s volume is “medium” (between 50% / 0.5 and 75% / 0.75).",
              "name": "medium"
            },
            {
              "description": "An element shown when the media’s volume is “high” (75% / 0.75 or greater).",
              "name": "high"
            },
            {
              "description": "An element for representing all states in a single icon",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "mediaVolumeLevel",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "events": [
            {
              "name": "eventName",
              "type": {}
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the media volume level.",
              "name": "mediavolumelevel"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeButton",
            "module": "/dist/media-chrome-button.js"
          },
          "tagName": "media-mute-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-mute-button",
          "declaration": {
            "name": "MediaMuteButton",
            "module": "dist/media-mute-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaMuteButton",
            "module": "dist/media-mute-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-pip-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaPipButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-pip-button-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "slots": [
            {
              "description": "An element shown when the media is not in PIP mode and pressing the button will trigger entering PIP mode.",
              "name": "enter"
            },
            {
              "description": "An element shown when the media is in PIP and pressing the button will trigger exiting PIP mode.",
              "name": "exit"
            },
            {
              "description": "An element for representing enter and exit states in a single icon",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "mediaPipUnavailable",
              "type": {
                "text": "string | undefined"
              },
              "description": "Pip unavailability state"
            },
            {
              "kind": "field",
              "name": "mediaIsPip",
              "type": {
                "text": "boolean"
              },
              "description": "Is the media currently playing picture-in-picture"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "events": [
            {
              "name": "eventName",
              "type": {}
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "(unavailable|unsupported)"
              },
              "description": "(read-only) Set if picture-in-picture is unavailable.",
              "name": "mediapipunavailable"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "(read-only) Present if the media is playing in picture-in-picture.",
              "name": "mediaispip"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeButton",
            "module": "/dist/media-chrome-button.js"
          },
          "tagName": "media-pip-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-pip-button",
          "declaration": {
            "name": "MediaPipButton",
            "module": "dist/media-pip-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaPipButton",
            "module": "dist/media-pip-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-play-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaPlayButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-play-button-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "slots": [
            {
              "description": "An element shown when the media is paused and pressing the button will start media playback.",
              "name": "play"
            },
            {
              "description": "An element shown when the media is playing and pressing the button will pause media playback.",
              "name": "pause"
            },
            {
              "description": "An element for representing play and pause states in a single icon",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "mediaPaused",
              "type": {
                "text": "boolean"
              },
              "description": "Is the media paused"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "events": [
            {
              "name": "eventName",
              "type": {}
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "(read-only) Present if the media is paused.",
              "name": "mediapaused"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeButton",
            "module": "/dist/media-chrome-button.js"
          },
          "tagName": "media-play-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-play-button",
          "declaration": {
            "name": "MediaPlayButton",
            "module": "dist/media-play-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaPlayButton",
          "declaration": {
            "name": "MediaPlayButton",
            "module": "dist/media-play-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaPlayButton",
            "module": "dist/media-play-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-playback-rate-button.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Attributes",
          "type": {
            "text": "object"
          },
          "default": "{ RATES: 'rates', }"
        },
        {
          "kind": "variable",
          "name": "DEFAULT_RATES",
          "type": {
            "text": "array"
          },
          "default": "[1, 1.2, 1.5, 1.7, 2]"
        },
        {
          "kind": "variable",
          "name": "DEFAULT_RATE",
          "type": {
            "text": "number"
          },
          "default": "1"
        },
        {
          "kind": "class",
          "description": "",
          "name": "MediaPlaybackRateButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-playback-rate-button-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#rates",
              "privacy": "private",
              "default": "new AttributeTokenList(this, Attributes.RATES, { defaultValue: DEFAULT_RATES, })"
            },
            {
              "kind": "field",
              "name": "container",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "field",
              "name": "rates",
              "description": "Will return a DOMTokenList.\nSetting a value will accept an array of numbers.",
              "type": {
                "text": "AttributeTokenList | Array<number> | undefined"
              }
            },
            {
              "kind": "field",
              "name": "mediaPlaybackRate",
              "description": "The current playback rate",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "innerHTML",
              "default": "`${DEFAULT_RATE}x`"
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "Set custom playback rates for the user to choose from.",
              "name": "rates"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the media playback rate.",
              "name": "mediaplaybackrate"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeButton",
            "module": "/dist/media-chrome-button.js"
          },
          "tagName": "media-playback-rate-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attributes",
          "declaration": {
            "name": "Attributes",
            "module": "dist/media-playback-rate-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "DEFAULT_RATES",
          "declaration": {
            "name": "DEFAULT_RATES",
            "module": "dist/media-playback-rate-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "DEFAULT_RATE",
          "declaration": {
            "name": "DEFAULT_RATE",
            "module": "dist/media-playback-rate-button.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-playback-rate-button",
          "declaration": {
            "name": "MediaPlaybackRateButton",
            "module": "dist/media-playback-rate-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaPlaybackRateButton",
            "module": "dist/media-playback-rate-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-poster-image.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Attributes",
          "type": {
            "text": "object"
          },
          "default": "{ PLACEHOLDER_SRC: 'placeholdersrc', SRC: 'src', }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "MediaPosterImage",
          "cssProperties": [
            {
              "description": "`display` property of poster image.",
              "name": "--media-poster-image-display",
              "default": "inline-block"
            },
            {
              "description": "`background-position` of poster image.",
              "name": "--media-poster-image-background-position",
              "default": "var(--media-object-position, center)"
            },
            {
              "description": "`background-size` of poster image.",
              "name": "--media-poster-image-background-size",
              "default": "var(--media-object-fit, contain)"
            },
            {
              "description": "`object-fit` of poster image.",
              "name": "--media-object-fit",
              "default": "contain"
            },
            {
              "description": "`object-position` of poster image.",
              "name": "--media-object-position",
              "default": "center"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "image",
              "type": {
                "text": "HTMLImageElement"
              }
            },
            {
              "kind": "field",
              "name": "placeholderSrc",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string | undefined"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "Placeholder image source URL, often a blurhash data URL.",
              "name": "placeholdersrc"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Poster image source URL.",
              "name": "src"
            }
          ],
          "superclass": {
            "module": "dist/media-poster-image.ts"
          },
          "tagName": "media-poster-image",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attributes",
          "declaration": {
            "name": "Attributes",
            "module": "dist/media-poster-image.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-poster-image",
          "declaration": {
            "name": "MediaPosterImage",
            "module": "dist/media-poster-image.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaPosterImage",
            "module": "dist/media-poster-image.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-preview-chapter-display.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaPreviewChapterDisplay",
          "cssProperties": [
            {
              "description": "`display` property of display.",
              "name": "--media-preview-chapter-display-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "Default color of background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`color` of text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, normal) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "normal",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`line-height` of text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#slot",
              "privacy": "private",
              "type": {
                "text": "HTMLSlotElement"
              },
              "default": "this.shadowRoot.querySelector('slot')"
            },
            {
              "kind": "field",
              "name": "mediaPreviewChapter",
              "type": {
                "text": "string | undefined"
              },
              "description": "Timeline preview chapter"
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "type": {
                "text": "MediaController | null"
              },
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the timeline preview chapter.",
              "name": "mediapreviewchapter"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaTextDisplay",
            "module": "/dist/media-text-display.js"
          },
          "tagName": "media-preview-chapter-display",
          "customElement": true,
          "slots": [
            {
              "description": "Default slotted elements.",
              "name": "",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-preview-chapter-display",
          "declaration": {
            "name": "MediaPreviewChapterDisplay",
            "module": "dist/media-preview-chapter-display.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaPreviewChapterDisplay",
            "module": "dist/media-preview-chapter-display.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-preview-thumbnail.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaPreviewThumbnail",
          "cssProperties": [
            {
              "description": "`display` property of display.",
              "name": "--media-preview-thumbnail-display",
              "default": "inline-block"
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "default": "inline-block"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "type": {
                "text": "MediaController"
              }
            },
            {
              "kind": "field",
              "name": "imgWidth",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "imgHeight",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "mediaPreviewImage",
              "description": "The url of the preview image",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "mediaPreviewCoords",
              "description": "Fixed length array [x, y, width, height] or undefined",
              "type": {
                "text": "Array<number> | undefined"
              }
            },
            {
              "kind": "method",
              "name": "update",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the timeline preview image URL.",
              "name": "mediapreviewimage"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the active preview image coordinates.",
              "name": "mediapreviewcoords"
            }
          ],
          "superclass": {
            "module": "dist/media-preview-thumbnail.ts"
          },
          "tagName": "media-preview-thumbnail",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-preview-thumbnail",
          "declaration": {
            "name": "MediaPreviewThumbnail",
            "module": "dist/media-preview-thumbnail.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaPreviewThumbnail",
            "module": "dist/media-preview-thumbnail.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-preview-time-display.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaPreviewTimeDisplay",
          "cssProperties": [
            {
              "description": "`display` property of display.",
              "name": "--media-preview-time-display-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "Default color of background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`color` of text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, normal) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "normal",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`line-height` of text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#slot",
              "privacy": "private",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "field",
              "name": "mediaPreviewTime",
              "type": {
                "text": "number | undefined"
              },
              "description": "Timeline preview time"
            },
            {
              "kind": "field",
              "name": "textContent"
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "type": {
                "text": "MediaController | null"
              },
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the timeline preview time.",
              "name": "mediapreviewtime"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaTextDisplay",
            "module": "/dist/media-text-display.js"
          },
          "tagName": "media-preview-time-display",
          "customElement": true,
          "slots": [
            {
              "description": "Default slotted elements.",
              "name": "",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-preview-time-display",
          "declaration": {
            "name": "MediaPreviewTimeDisplay",
            "module": "dist/media-preview-time-display.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaPreviewTimeDisplay",
            "module": "dist/media-preview-time-display.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-seek-backward-button.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Attributes",
          "type": {
            "text": "object"
          },
          "default": "{ SEEK_OFFSET: 'seekoffset', }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "MediaSeekBackwardButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-seek-backward-button-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "slots": [
            {
              "description": "The element shown for the seek backward button’s display.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "seekOffset",
              "type": {
                "text": "number"
              },
              "description": "Seek amount in seconds"
            },
            {
              "kind": "field",
              "name": "mediaCurrentTime",
              "type": {
                "text": "number"
              },
              "description": "The current time in seconds"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "Adjusts how much time (in seconds) the playhead should seek backward.",
              "name": "seekoffset"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the current media time.",
              "name": "mediacurrenttime"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeButton",
            "module": "/dist/media-chrome-button.js"
          },
          "tagName": "media-seek-backward-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attributes",
          "declaration": {
            "name": "Attributes",
            "module": "dist/media-seek-backward-button.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-seek-backward-button",
          "declaration": {
            "name": "MediaSeekBackwardButton",
            "module": "dist/media-seek-backward-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaSeekBackwardButton",
            "module": "dist/media-seek-backward-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-seek-forward-button.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Attributes",
          "type": {
            "text": "object"
          },
          "default": "{ SEEK_OFFSET: 'seekoffset', }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "MediaSeekForwardButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-seek-forward-button-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "slots": [
            {
              "description": "The element shown for the seek forward button’s display.",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "seekOffset",
              "type": {
                "text": "number"
              },
              "description": "Seek amount in seconds"
            },
            {
              "kind": "field",
              "name": "mediaCurrentTime",
              "type": {
                "text": "number"
              },
              "description": "The current time in seconds"
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "Adjusts how much time (in seconds) the playhead should seek forward.",
              "name": "seekoffset"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the current media time.",
              "name": "mediacurrenttime"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeButton",
            "module": "/dist/media-chrome-button.js"
          },
          "tagName": "media-seek-forward-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attributes",
          "declaration": {
            "name": "Attributes",
            "module": "dist/media-seek-forward-button.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-seek-forward-button",
          "declaration": {
            "name": "MediaSeekForwardButton",
            "module": "dist/media-seek-forward-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaSeekForwardButton",
            "module": "dist/media-seek-forward-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-text-display.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaTextDisplay",
          "cssProperties": [
            {
              "description": "Default color of text.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)"
            },
            {
              "description": "Default color of background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)"
            },
            {
              "description": "`color` of text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))"
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display"
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))"
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px"
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px"
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, normal) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)"
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "normal"
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif"
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px"
            },
            {
              "description": "`line-height` of text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)"
            }
          ],
          "slots": [
            {
              "description": "Default slotted elements.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "type": {
                "text": "MediaController | null"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller"
            }
          ],
          "superclass": {
            "module": "dist/media-text-display.ts"
          },
          "tagName": "media-text-display",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-text-display",
          "declaration": {
            "name": "MediaTextDisplay",
            "module": "dist/media-text-display.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaTextDisplay",
          "declaration": {
            "name": "MediaTextDisplay",
            "module": "dist/media-text-display.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaTextDisplay",
            "module": "dist/media-text-display.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-theme-element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaThemeElement",
          "members": [
            {
              "kind": "field",
              "name": "template",
              "type": {
                "text": "HTMLTemplateElement"
              },
              "static": true
            },
            {
              "kind": "field",
              "name": "processor",
              "static": true,
              "default": "processor"
            },
            {
              "kind": "field",
              "name": "renderRoot",
              "type": {
                "text": "ShadowRoot"
              }
            },
            {
              "kind": "field",
              "name": "renderer",
              "type": {
                "text": "TemplateInstance | undefined"
              }
            },
            {
              "kind": "field",
              "name": "#template",
              "privacy": "private",
              "type": {
                "text": "HTMLTemplateElement"
              }
            },
            {
              "kind": "field",
              "name": "#prevTemplate",
              "privacy": "private",
              "type": {
                "text": "HTMLTemplateElement"
              }
            },
            {
              "kind": "field",
              "name": "#prevTemplateId",
              "privacy": "private",
              "type": {
                "text": "string | null"
              }
            },
            {
              "kind": "method",
              "name": "#upgradeProperty",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "prop",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "mediaController",
              "type": {
                "text": "HTMLElement & { breakpointsComputed?: boolean }"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "template"
            },
            {
              "kind": "field",
              "name": "props",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#updateTemplate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "createRenderer",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "render",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "template",
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the template to render."
            }
          ],
          "superclass": {
            "module": "dist/media-theme-element.ts"
          },
          "tagName": "media-theme",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./utils/template-parts.js"
          }
        },
        {
          "kind": "js",
          "name": "MediaThemeElement",
          "declaration": {
            "name": "MediaThemeElement",
            "module": "dist/media-theme-element.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-theme",
          "declaration": {
            "name": "MediaThemeElement",
            "module": "dist/media-theme-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-time-display.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Attributes",
          "type": {
            "text": "object"
          },
          "default": "{ REMAINING: 'remaining', SHOW_DURATION: 'showduration', NO_TOGGLE: 'notoggle', }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "MediaTimeDisplay",
          "cssProperties": [
            {
              "description": "`display` property of display.",
              "name": "--media-time-display-display",
              "default": "inline-flex"
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background"
            },
            {
              "description": "Default color of text.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "Default color of background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`color` of text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, normal) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "normal",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            },
            {
              "description": "`line-height` of text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#slot",
              "privacy": "private",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "method",
              "name": "toggleTimeDisplay",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "remaining",
              "type": {
                "text": "boolean"
              },
              "description": "Whether to show the remaining time"
            },
            {
              "kind": "field",
              "name": "showDuration",
              "type": {
                "text": "boolean"
              },
              "description": "Whether to show the duration"
            },
            {
              "kind": "field",
              "name": "noToggle",
              "type": {
                "text": "boolean"
              },
              "description": "Disable the default behavior that toggles between current and remaining time"
            },
            {
              "kind": "field",
              "name": "mediaDuration",
              "type": {
                "text": "number"
              },
              "description": "Get the duration"
            },
            {
              "kind": "field",
              "name": "mediaCurrentTime",
              "type": {
                "text": "number"
              },
              "description": "The current time in seconds"
            },
            {
              "kind": "field",
              "name": "mediaSeekable",
              "type": {
                "text": "[number, number]"
              },
              "description": "Range of values that can be seeked to.\nAn array of two numbers [start, end]"
            },
            {
              "kind": "method",
              "name": "update",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "innerHTML",
              "default": "`${formatTimesLabel(this)}`"
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "type": {
                "text": "MediaController | null"
              },
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable."
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Toggle on to show the remaining time instead of elapsed time.",
              "name": "remaining"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Toggle on to show the duration.",
              "name": "showduration"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Set this to disable click or tap behavior that toggles between remaining and current time.",
              "name": "notoggle"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the current media time.",
              "name": "mediacurrenttime"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the media duration.",
              "name": "mediaduration"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the seekable time ranges.",
              "name": "mediaseekable"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaTextDisplay",
            "module": "/dist/media-text-display.js"
          },
          "tagName": "media-time-display",
          "customElement": true,
          "slots": [
            {
              "description": "Default slotted elements.",
              "name": "",
              "inheritedFrom": {
                "name": "MediaTextDisplay",
                "module": "dist/media-text-display.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attributes",
          "declaration": {
            "name": "Attributes",
            "module": "dist/media-time-display.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-time-display",
          "declaration": {
            "name": "MediaTimeDisplay",
            "module": "dist/media-time-display.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaTimeDisplay",
            "module": "dist/media-time-display.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-time-range.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaTimeRange",
          "cssProperties": [
            {
              "description": "`display` property of range.",
              "name": "--media-time-range-display",
              "default": "inline-block"
            },
            {
              "description": "`transition-property` of range hover preview.",
              "name": "--media-preview-transition-property",
              "default": "visibility, opacity"
            },
            {
              "description": "`transition-duration` out of range hover preview.",
              "name": "--media-preview-transition-duration-out",
              "default": ".25s"
            },
            {
              "description": "`transition-delay` out of range hover preview.",
              "name": "--media-preview-transition-delay-out",
              "default": "0s"
            },
            {
              "description": "`transition-duration` in of range hover preview.",
              "name": "--media-preview-transition-duration-in",
              "default": ".5s"
            },
            {
              "description": "`transition-delay` in of range hover preview.",
              "name": "--media-preview-transition-delay-in",
              "default": ".25s"
            },
            {
              "description": "`background` of range preview thumbnail.",
              "name": "--media-preview-thumbnail-background",
              "default": "var(--_preview-background)"
            },
            {
              "description": "`box-shadow` of range preview thumbnail.",
              "name": "--media-preview-thumbnail-box-shadow",
              "default": "0 0 4px rgb(0 0 0 / .2)"
            },
            {
              "description": "`max-width` of range preview thumbnail.",
              "name": "--media-preview-thumbnail-max-width",
              "default": "180px"
            },
            {
              "description": "`max-height` of range preview thumbnail.",
              "name": "--media-preview-thumbnail-max-height",
              "default": "160px"
            },
            {
              "description": "`min-width` of range preview thumbnail.",
              "name": "--media-preview-thumbnail-min-width",
              "default": "120px"
            },
            {
              "description": "`min-height` of range preview thumbnail.",
              "name": "--media-preview-thumbnail-min-height",
              "default": "80px"
            },
            {
              "description": "`border-radius` of range preview thumbnail.",
              "name": "--media-preview-thumbnail-border-radius",
              "default": "var(--media-preview-border-radius) var(--media-preview-border-radius) 0 0"
            },
            {
              "description": "`border` of range preview thumbnail.",
              "name": "--media-preview-thumbnail-border"
            },
            {
              "description": "`background` of range preview chapter display.",
              "name": "--media-preview-chapter-background",
              "default": "var(--_preview-background)"
            },
            {
              "description": "`border-radius` of range preview chapter display.",
              "name": "--media-preview-chapter-border-radius",
              "default": "0"
            },
            {
              "description": "`padding` of range preview chapter display.",
              "name": "--media-preview-chapter-padding",
              "default": "3.5px 9px 0"
            },
            {
              "description": "`margin` of range preview chapter display.",
              "name": "--media-preview-chapter-margin",
              "default": "0"
            },
            {
              "description": "`text-shadow` of range preview chapter display.",
              "name": "--media-preview-chapter-text-shadow",
              "default": "0 0 4px rgb(0 0 0 / .75)"
            },
            {
              "description": "`background` of range preview time display.",
              "name": "--media-preview-time-background",
              "default": "var(--_preview-background)"
            },
            {
              "description": "`border-radius` of range preview time display.",
              "name": "--media-preview-time-border-radius",
              "default": "0 0 var(--media-preview-border-radius) var(--media-preview-border-radius)"
            },
            {
              "description": "`padding` of range preview time display.",
              "name": "--media-preview-time-padding",
              "default": "3.5px 9px"
            },
            {
              "description": "`margin` of range preview time display.",
              "name": "--media-preview-time-margin",
              "default": "0"
            },
            {
              "description": "`text-shadow` of range preview time display.",
              "name": "--media-preview-time-text-shadow",
              "default": "0 0 4px rgb(0 0 0 / .75)"
            },
            {
              "description": "`display` of range box.",
              "name": "--media-box-display",
              "default": "flex"
            },
            {
              "description": "`margin` of range box.",
              "name": "--media-box-margin",
              "default": "0 0 5px"
            },
            {
              "description": "`padding-left` of range box.",
              "name": "--media-box-padding-left"
            },
            {
              "description": "`padding-right` of range box.",
              "name": "--media-box-padding-right"
            },
            {
              "description": "`border-radius` of range box.",
              "name": "--media-box-border-radius"
            },
            {
              "description": "`display` of range preview box.",
              "name": "--media-preview-box-display",
              "default": "var(--media-box-display, flex)"
            },
            {
              "description": "`margin` of range preview box.",
              "name": "--media-preview-box-margin",
              "default": "var(--media-box-margin, 0 0 5px)"
            },
            {
              "description": "`display` of range current box.",
              "name": "--media-current-box-display",
              "default": "var(--media-box-display, flex)"
            },
            {
              "description": "`margin` of range current box.",
              "name": "--media-current-box-margin",
              "default": "var(--media-box-margin, 0 0 5px)"
            },
            {
              "description": "`display` of range box arrow.",
              "name": "--media-box-arrow-display",
              "default": "inline-block"
            },
            {
              "description": "`border-top-color` of range box arrow.",
              "name": "--media-box-arrow-background",
              "default": "var(--_control-background)"
            },
            {
              "description": "`border-width` of range box arrow.",
              "name": "--media-box-arrow-border-width",
              "default": "var(--media-box-arrow-height, 5px) var(--media-box-arrow-width, 6px) 0"
            },
            {
              "description": "`height` of range box arrow.",
              "name": "--media-box-arrow-height",
              "default": "5px"
            },
            {
              "description": "`width` of range box arrow.",
              "name": "--media-box-arrow-width",
              "default": "6px"
            },
            {
              "description": "`translateX` offset of range box arrow.",
              "name": "--media-box-arrow-offset"
            },
            {
              "description": "Default color of range bar.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "Default color of range background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "default": "inline-block",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgb(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`padding` of range.",
              "name": "--media-range-padding",
              "default": "var(--media-control-padding, 10px)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`padding-left` of range.",
              "name": "--media-range-padding-left",
              "default": "var(--_media-range-padding)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`padding-right` of range.",
              "name": "--media-range-padding-right",
              "default": "var(--_media-range-padding)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`width` of range thumb.",
              "name": "--media-range-thumb-width",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`height` of range thumb.",
              "name": "--media-range-thumb-height",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`border` of range thumb.",
              "name": "--media-range-thumb-border",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`border-radius` of range thumb.",
              "name": "--media-range-thumb-border-radius",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`background` of range thumb.",
              "name": "--media-range-thumb-background",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`box-shadow` of range thumb.",
              "name": "--media-range-thumb-box-shadow",
              "default": "1px 1px 1px transparent",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`transition` of range thumb.",
              "name": "--media-range-thumb-transition",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`transform` of range thumb.",
              "name": "--media-range-thumb-transform",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`opacity` of range thumb.",
              "name": "--media-range-thumb-opacity",
              "default": "1",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`background` of range progress.",
              "name": "--media-range-bar-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`background` of range track background.",
              "name": "--media-range-track-background",
              "default": "rgb(255 255 255 / .2)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`backdrop-filter` of range track.",
              "name": "--media-range-track-backdrop-filter",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`width` of range track.",
              "name": "--media-range-track-width",
              "default": "100%",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`height` of range track.",
              "name": "--media-range-track-height",
              "default": "4px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`border` of range track.",
              "name": "--media-range-track-border",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`outline` of range track.",
              "name": "--media-range-track-outline",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`outline-offset` of range track.",
              "name": "--media-range-track-outline-offset",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`border-radius` of range track.",
              "name": "--media-range-track-border-radius",
              "default": "1px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`box-shadow` of range track.",
              "name": "--media-range-track-box-shadow",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`transition` of range track.",
              "name": "--media-range-track-transition",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`translate` x-coordinate of range track.",
              "name": "--media-range-track-translate-x",
              "default": "0px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`translate` y-coordinate of range track.",
              "name": "--media-range-track-translate-y",
              "default": "0px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`display` of range hover zone.",
              "name": "--media-time-range-hover-display",
              "default": "block",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`bottom` of range hover zone.",
              "name": "--media-time-range-hover-bottom",
              "default": "-5px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`height` of range hover zone.",
              "name": "--media-time-range-hover-height",
              "default": "max(100% + 5px, 20px)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`background` of range track pointer.",
              "name": "--media-range-track-pointer-background",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`border-right` of range track pointer.",
              "name": "--media-range-track-pointer-border-right",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            }
          ],
          "cssParts": [
            {
              "description": "A CSS part that selects the buffered bar element.",
              "name": "buffered"
            },
            {
              "description": "A CSS part that selects both the preview and current box elements.",
              "name": "box"
            },
            {
              "description": "A CSS part that selects the preview box element.",
              "name": "preview-box"
            },
            {
              "description": "A CSS part that selects the current box element.",
              "name": "current-box"
            },
            {
              "description": "A CSS part that selects the arrow element.",
              "name": "arrow"
            },
            {
              "description": "The runnable track of the range.",
              "name": "track",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "The progress part of the track.",
              "name": "progress",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "The thumb of the range.",
              "name": "thumb",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            }
          ],
          "slots": [
            {
              "description": "An element that slides along the timeline to the position of the pointer hovering.",
              "name": "preview"
            },
            {
              "description": "An arrow element that slides along the timeline to the position of the pointer hovering.",
              "name": "preview-arrow"
            },
            {
              "description": "An element that slides along the timeline to the position of the current time.",
              "name": "current"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#rootNode",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#animation",
              "privacy": "private",
              "default": "new RangeAnimation(this.range, this.#updateRange, 60)"
            },
            {
              "kind": "field",
              "name": "#boxes",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#previewTime",
              "privacy": "private",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "#previewBox",
              "privacy": "private",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "#currentBox",
              "privacy": "private",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "#boxPaddingLeft",
              "privacy": "private",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "#boxPaddingRight",
              "privacy": "private",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "#mediaChaptersCues",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#toggleRangeAnimation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#shouldRangeAnimate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "field",
              "name": "#updateRange",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "mediaChaptersCues",
              "type": {
                "text": "any[]"
              }
            },
            {
              "kind": "field",
              "name": "mediaPaused",
              "type": {
                "text": "boolean"
              },
              "description": "Is the media paused"
            },
            {
              "kind": "field",
              "name": "mediaLoading",
              "type": {
                "text": "boolean"
              },
              "description": "Is the media loading"
            },
            {
              "kind": "field",
              "name": "mediaDuration",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "mediaCurrentTime",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "mediaPlaybackRate",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "mediaBuffered",
              "type": {
                "text": "number[][]"
              },
              "description": "An array of ranges, each range being an array of two numbers.\ne.g. [[1, 2], [3, 4]]"
            },
            {
              "kind": "field",
              "name": "mediaSeekable",
              "type": {
                "text": "number[] | undefined"
              },
              "description": "Range of values that can be seeked to\nAn array of two numbers [start, end]"
            },
            {
              "kind": "field",
              "name": "mediaSeekableEnd",
              "type": {
                "text": "number | undefined"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "mediaSeekableStart",
              "type": {
                "text": "number"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "mediaPreviewImage",
              "type": {
                "text": "string | undefined"
              },
              "description": "The url of the preview image"
            },
            {
              "kind": "field",
              "name": "mediaPreviewTime",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "mediaEnded",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "method",
              "name": "updateBar",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateBufferedBar",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "updateCurrentBox",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#getElementRects",
              "privacy": "private",
              "parameters": [
                {
                  "name": "box",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#getBoxPosition",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "rects",
                  "type": {
                    "text": "Rects"
                  }
                },
                {
                  "name": "ratio",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Get the position, max and min for the box in percentage.\nIt's important this is in percentage so when the player is resized\nthe box will move accordingly."
            },
            {
              "kind": "method",
              "name": "#getBoxShiftPosition",
              "privacy": "private",
              "parameters": [
                {
                  "name": "rects",
                  "type": {
                    "text": "Rects"
                  }
                },
                {
                  "name": "ratio",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "Event | MouseEvent"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handlePointerMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#previewRequest",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "detail"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#seekRequest",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#isInputTarget",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#startpoint",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#endpoint",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#cssRules",
              "privacy": "private",
              "type": {
                "text": "Record<string, CSSStyleRule>"
              },
              "default": "{}",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#segments",
              "privacy": "private",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "container",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "range",
              "type": {
                "text": "Omit<HTMLInputElement, \"value\" | \"min\" | \"max\"> &\n     * {value: number, min: number, max: number}"
              },
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#onFocusIn",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#onFocusOut",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#updateComputedStyles",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "updatePointerBar",
              "parameters": [
                {
                  "name": "evt"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateSegments",
              "parameters": [
                {
                  "name": "segments"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#updateActiveSegment",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPointerRatio",
              "parameters": [
                {
                  "name": "evt"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragging",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#enableUserEvents",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#disableUserEvents",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handlePointerDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handlePointerEnter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handlePointerUp",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handlePointerLeave",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            }
          ],
          "events": [
            {
              "type": {}
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the buffered time ranges.",
              "name": "mediabuffered"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the media playback rate.",
              "name": "mediaplaybackrate"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the media duration.",
              "name": "mediaduration"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the seekable time ranges.",
              "name": "mediaseekable"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "(read-only) Present if the media is paused.",
              "name": "mediapaused"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "(read-only) Present if the media is loading.",
              "name": "medialoading"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the current media time.",
              "name": "mediacurrenttime"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the timeline preview image URL.",
              "name": "mediapreviewimage"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the timeline preview time.",
              "name": "mediapreviewtime"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "name": "aria-disabled",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeRange",
            "module": "/dist/media-chrome-range.js"
          },
          "tagName": "media-time-range",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-time-range",
          "declaration": {
            "name": "MediaTimeRange",
            "module": "dist/media-time-range.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaTimeRange",
            "module": "dist/media-time-range.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-tooltip.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Attributes",
          "type": {
            "text": "object"
          },
          "default": "{ PLACEMENT: 'placement', BOUNDS: 'bounds', }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "MediaTooltip",
          "cssProperties": [
            {
              "description": "Default color of text.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)"
            },
            {
              "description": "Default color of tooltip background.",
              "name": "--media-secondary-color",
              "default": "rgba(20, 20, 30, .7)"
            },
            {
              "description": "`color` of tooltip text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))"
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, 400) var(--media-font-size, 13px) / var(--media-text-content-height, var(--media-control-height, 18px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)"
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "400"
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif"
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "13px"
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 18px)"
            },
            {
              "description": "'border' of tooltip",
              "name": "--media-tooltip-border",
              "default": "none"
            },
            {
              "description": "Background color of tooltip and arrow, unless individually overidden",
              "name": "--media-tooltip-background-color",
              "default": "var(--media-secondary-color, rgba(20, 20, 30, .7))"
            },
            {
              "description": "`background` of tooltip, ignoring the arrow",
              "name": "--media-tooltip-background",
              "default": "var(--_tooltip-background-color)"
            },
            {
              "description": "`display` of tooltip",
              "name": "--media-tooltip-display",
              "default": "inline-flex"
            },
            {
              "description": "`z-index` of tooltip",
              "name": "--media-tooltip-z-index",
              "default": "1"
            },
            {
              "description": "`padding` of tooltip",
              "name": "--media-tooltip-padding",
              "default": ".35em .7em"
            },
            {
              "description": "`border-radius` of tooltip",
              "name": "--media-tooltip-border-radius",
              "default": "5px"
            },
            {
              "description": "`filter` property of tooltip, for drop-shadow",
              "name": "--media-tooltip-filter",
              "default": "drop-shadow(0 0 4px rgba(0, 0, 0, .2))"
            },
            {
              "description": "`white-space` property of tooltip",
              "name": "--media-tooltip-white-space",
              "default": "nowrap"
            },
            {
              "description": "`display` property of tooltip arrow",
              "name": "--media-tooltip-arrow-display",
              "default": "block"
            },
            {
              "description": "Arrow width",
              "name": "--media-tooltip-arrow-width",
              "default": "12px"
            },
            {
              "description": "Arrow height",
              "name": "--media-tooltip-arrow-height",
              "default": "5px"
            },
            {
              "description": "Arrow color",
              "name": "--media-tooltip-arrow-color",
              "default": "var(--_tooltip-background-color)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "arrowEl",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "updateXOffset"
            },
            {
              "kind": "field",
              "name": "placement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement"
            },
            {
              "kind": "field",
              "name": "bounds",
              "type": {
                "text": "string | undefined"
              },
              "description": "Get or set tooltip container ID selector that will constrain the tooltips\nhorizontal position."
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "placement"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "ID for the containing element (one of it's parents) that should constrain the tooltips horizontal position.",
              "name": "bounds"
            }
          ],
          "superclass": {
            "module": "dist/media-tooltip.ts"
          },
          "tagName": "media-tooltip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attributes",
          "declaration": {
            "name": "Attributes",
            "module": "dist/media-tooltip.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-tooltip",
          "declaration": {
            "name": "MediaTooltip",
            "module": "dist/media-tooltip.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaTooltip",
            "module": "dist/media-tooltip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/media-volume-range.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaVolumeRange",
          "cssProperties": [
            {
              "description": "`display` property of range.",
              "name": "--media-volume-range-display",
              "default": "inline-block"
            },
            {
              "description": "Default color of range bar.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "Default color of range background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "default": "inline-block",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgb(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`padding` of range.",
              "name": "--media-range-padding",
              "default": "var(--media-control-padding, 10px)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`padding-left` of range.",
              "name": "--media-range-padding-left",
              "default": "var(--_media-range-padding)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`padding-right` of range.",
              "name": "--media-range-padding-right",
              "default": "var(--_media-range-padding)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`width` of range thumb.",
              "name": "--media-range-thumb-width",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`height` of range thumb.",
              "name": "--media-range-thumb-height",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`border` of range thumb.",
              "name": "--media-range-thumb-border",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`border-radius` of range thumb.",
              "name": "--media-range-thumb-border-radius",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`background` of range thumb.",
              "name": "--media-range-thumb-background",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`box-shadow` of range thumb.",
              "name": "--media-range-thumb-box-shadow",
              "default": "1px 1px 1px transparent",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`transition` of range thumb.",
              "name": "--media-range-thumb-transition",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`transform` of range thumb.",
              "name": "--media-range-thumb-transform",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`opacity` of range thumb.",
              "name": "--media-range-thumb-opacity",
              "default": "1",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`background` of range progress.",
              "name": "--media-range-bar-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`background` of range track background.",
              "name": "--media-range-track-background",
              "default": "rgb(255 255 255 / .2)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`backdrop-filter` of range track.",
              "name": "--media-range-track-backdrop-filter",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`width` of range track.",
              "name": "--media-range-track-width",
              "default": "100%",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`height` of range track.",
              "name": "--media-range-track-height",
              "default": "4px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`border` of range track.",
              "name": "--media-range-track-border",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`outline` of range track.",
              "name": "--media-range-track-outline",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`outline-offset` of range track.",
              "name": "--media-range-track-outline-offset",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`border-radius` of range track.",
              "name": "--media-range-track-border-radius",
              "default": "1px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`box-shadow` of range track.",
              "name": "--media-range-track-box-shadow",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`transition` of range track.",
              "name": "--media-range-track-transition",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`translate` x-coordinate of range track.",
              "name": "--media-range-track-translate-x",
              "default": "0px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`translate` y-coordinate of range track.",
              "name": "--media-range-track-translate-y",
              "default": "0px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`display` of range hover zone.",
              "name": "--media-time-range-hover-display",
              "default": "block",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`bottom` of range hover zone.",
              "name": "--media-time-range-hover-bottom",
              "default": "-5px",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`height` of range hover zone.",
              "name": "--media-time-range-hover-height",
              "default": "max(100% + 5px, 20px)",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`background` of range track pointer.",
              "name": "--media-range-track-pointer-background",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "`border-right` of range track pointer.",
              "name": "--media-range-track-pointer-border-right",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "mediaVolume",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "mediaMuted",
              "type": {
                "text": "boolean"
              },
              "description": "Is the media currently muted"
            },
            {
              "kind": "field",
              "name": "mediaVolumeUnavailable",
              "type": {
                "text": "string | undefined"
              },
              "description": "The volume unavailability state"
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#isInputTarget",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#startpoint",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#endpoint",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#cssRules",
              "privacy": "private",
              "type": {
                "text": "Record<string, CSSStyleRule>"
              },
              "default": "{}",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#segments",
              "privacy": "private",
              "type": {
                "text": "array"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "container",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "range",
              "type": {
                "text": "Omit<HTMLInputElement, \"value\" | \"min\" | \"max\"> &\n     * {value: number, min: number, max: number}"
              },
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#onFocusIn",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#onFocusOut",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "#updateComputedStyles",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "updatePointerBar",
              "parameters": [
                {
                  "name": "evt"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateBar",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateSegments",
              "parameters": [
                {
                  "name": "segments"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#updateActiveSegment",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "getPointerRatio",
              "parameters": [
                {
                  "name": "evt"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragging",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#enableUserEvents",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#disableUserEvents",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "parameters": [
                {
                  "name": "evt"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handlePointerDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handlePointerEnter",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handlePointerUp",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handlePointerLeave",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handlePointerMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "evt"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the media volume.",
              "name": "mediavolume"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "(read-only) Set to the media muted state.",
              "name": "mediamuted"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set if changing volume is unavailable.",
              "name": "mediavolumeunavailable"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "name": "aria-disabled",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeRange",
            "module": "/dist/media-chrome-range.js"
          },
          "tagName": "media-volume-range",
          "customElement": true,
          "cssParts": [
            {
              "description": "The runnable track of the range.",
              "name": "track",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "The progress part of the track.",
              "name": "progress",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            },
            {
              "description": "The thumb of the range.",
              "name": "thumb",
              "inheritedFrom": {
                "name": "MediaChromeRange",
                "module": "dist/media-chrome-range.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-volume-range",
          "declaration": {
            "name": "MediaVolumeRange",
            "module": "dist/media-volume-range.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaVolumeRange",
            "module": "dist/media-volume-range.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/menu/media-audio-track-menu-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaAudioTrackMenuButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-audio-track-menu-button-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "invokeTargetElement",
              "type": {
                "text": "HTMLElement | null"
              },
              "description": "Returns the element with the id specified by the `invoketarget` attribute.",
              "return": {
                "type": {
                  "text": "HTMLElement | null"
                }
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "mediaAudioTrackEnabled",
              "type": {
                "text": "string"
              },
              "description": "Get enabled audio track id.",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "field",
              "name": "invokeTarget",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the selected audio track id.",
              "name": "mediaaudiotrackenabled"
            },
            {
              "type": {
                "text": "(unavailable|unsupported)"
              },
              "description": "(read-only) Set if audio track selection is unavailable.",
              "name": "mediaaudiotrackunavailable"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The id of the element to invoke when clicked.",
              "name": "invoketarget",
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeMenuButton",
            "module": "/dist/menu/media-chrome-menu-button.js"
          },
          "tagName": "media-audio-track-menu-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-audio-track-menu-button",
          "declaration": {
            "name": "MediaAudioTrackMenuButton",
            "module": "dist/menu/media-audio-track-menu-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaAudioTrackMenuButton",
          "declaration": {
            "name": "MediaAudioTrackMenuButton",
            "module": "dist/menu/media-audio-track-menu-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaAudioTrackMenuButton",
            "module": "dist/menu/media-audio-track-menu-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/menu/media-audio-track-menu.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaAudioTrackMenu",
          "slots": [
            {
              "description": "Default slotted elements.node",
              "name": "",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "An element shown at the top of the menu.",
              "name": "header",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "An icon element indicating a checked menu-item.",
              "name": "checked-indicator",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#audioTrackList",
              "privacy": "private",
              "type": {
                "text": "TextTrackLike[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "#prevState",
              "privacy": "private",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "anchorElement",
              "description": "Returns the anchor element when it is a floating menu.",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "mediaAudioTrackList",
              "type": {
                "text": "TextTrackLike[]"
              }
            },
            {
              "kind": "field",
              "name": "mediaAudioTrackEnabled",
              "type": {
                "text": "string"
              },
              "description": "Get enabled audio track id."
            },
            {
              "kind": "method",
              "name": "#render",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#onChange",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "template",
              "type": {
                "text": "HTMLTemplateElement"
              },
              "static": true,
              "default": "template",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "formatMenuItemText",
              "parameters": [
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "static": true,
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "type": {
                "text": "MediaController | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#previouslyFocused",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#invokerElement",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#previousItems",
              "privacy": "private",
              "default": "new Set<MediaChromeMenuItem>()",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mutationObserver",
              "privacy": "private",
              "type": {
                "text": "MutationObserver"
              },
              "default": "new MutationObserver(this.#handleMenuItems)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#isPopover",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#cssRule",
              "privacy": "private",
              "type": {
                "text": "CSSStyleRule | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "container",
              "type": {
                "text": "HTMLElement"
              },
              "default": "this.shadowRoot.querySelector('#container')",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              },
              "default": "this.shadowRoot.querySelector( 'slot:not([name])' )",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "items",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "description": "Returns the menu items.",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "radioGroupItems",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "checkedItems",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleMenuItems",
              "privacy": "private",
              "description": "Fires an event when a menu item is added or removed.\nThis is needed to update the description slot of an ancestor menu item.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#updateLayoutStyle",
              "privacy": "private",
              "description": "Sets the layout style for the menu.\nIt can be a row or column layout. e.g. playback-rate-menu",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleInvoke",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "InvokeEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleOpen",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClosed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleBoundsResize",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleMenuResize",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#positionMenu",
              "privacy": "private",
              "parameters": [
                {
                  "name": "menuWidth",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Updates the popover menu position based on the anchor element.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#resizeMenu",
              "privacy": "private",
              "parameters": [
                {
                  "name": "animate",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Resize this menu to fit the submenu.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#backButtonElement",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleSelect",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleToggle",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ToggleEvent"
                  }
                }
              ],
              "description": "Handle the toggle event of submenus.\nCloses all other open submenus when opening a submenu.\nResizes this menu to fit the submenu.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#checkSubmenuHasExpanded",
              "privacy": "private",
              "description": "Check if any submenu is expanded and update the container class accordingly.\nWhen the CSS :has() selector is supported, this can be done with CSS only.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleFocusOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "FocusEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#getItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#getTabItem",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setTabItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "tabItem",
                  "type": {
                    "text": "MediaChromeMenuItem"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#selectItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "MediaChromeMenuItem"
                  }
                },
                {
                  "name": "toggle",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleMove",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the enabled audio track.",
              "name": "mediaaudiotrackenabled"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the audio track list.",
              "name": "mediaaudiotracklist"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "name": "disabled",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeMenu",
            "module": "/dist/menu/media-chrome-menu.js"
          },
          "tagName": "media-audio-track-menu",
          "customElement": true,
          "cssProperties": [
            {
              "description": "Default color of text / icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "Default color of background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .8)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`color` of text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .8))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`display` of menu.",
              "name": "--media-menu-display",
              "default": "inline-flex",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "Set to `row` for a horizontal menu design.",
              "name": "--media-menu-layout",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`flex-direction` of menu.",
              "name": "--media-menu-flex-direction",
              "default": "row",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`gap` between menu items.",
              "name": "--media-menu-gap",
              "default": ".25em",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of menu.",
              "name": "--media-menu-background",
              "default": "var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .8)))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`border-radius` of menu.",
              "name": "--media-menu-border-radius",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`border` of menu.",
              "name": "--media-menu-border",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transition` of menu when showing.",
              "name": "--media-menu-transition-in",
              "default": "visibility 0s, opacity .2s ease-out, transform .15s ease-out, left .2s ease-in-out, min-width .2s ease-in-out, min-height .2s ease-in-out",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transition` of menu when hiding.",
              "name": "--media-menu-transition-out",
              "default": "visibility .15s ease-in, opacity .15s ease-in, transform .15s ease-in",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`visibility` of menu when showing.",
              "name": "--media-menu-visibility",
              "default": "visible",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`visibility` of menu when hiding.",
              "name": "--media-menu-hidden-visibility",
              "default": "hidden",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-height` of menu.",
              "name": "--media-menu-max-height",
              "default": "var(--_menu-max-height, 300px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-height` of menu when hiding.",
              "name": "--media-menu-hidden-max-height",
              "default": "var(--media-menu-max-height, var(--_menu-max-height, 300px))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`opacity` of menu when showing.",
              "name": "--media-menu-opacity",
              "default": "1",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`opacity` of menu when hiding.",
              "name": "--media-menu-hidden-opacity",
              "default": "0",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transform` of menu when showing.",
              "name": "--media-menu-transform-in",
              "default": "translateY(0) scale(1)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transform` of menu when hiding.",
              "name": "--media-menu-transform-out",
              "default": "translateY(2px) scale(.99)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, normal) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "normal",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`line-height` of text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`fill` color of icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`height` of icon.",
              "name": "--media-menu-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`display` of check indicator.",
              "name": "--media-menu-item-checked-indicator-display",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of checked menu item.",
              "name": "--media-menu-item-checked-background",
              "default": "rgb(255 255 255 / .2)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-width` of menu item text.",
              "name": "--media-menu-item-max-width",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "ToggleEvent"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "name": "change",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-audio-track-menu",
          "declaration": {
            "name": "MediaAudioTrackMenu",
            "module": "dist/menu/media-audio-track-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaAudioTrackMenu",
          "declaration": {
            "name": "MediaAudioTrackMenu",
            "module": "dist/menu/media-audio-track-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaAudioTrackMenu",
            "module": "dist/menu/media-audio-track-menu.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/menu/media-captions-menu-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaCaptionsMenuButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-captions-menu-button-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "slots": [
            {
              "description": "An element that will be shown while closed captions or subtitles are on.",
              "name": "on"
            },
            {
              "description": "An element that will be shown while closed captions or subtitles are off.",
              "name": "off"
            },
            {
              "description": "An element for representing on and off states in a single icon",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#captionsReady",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "invokeTargetElement",
              "type": {
                "text": "HTMLElement | null"
              },
              "description": "Returns the element with the id specified by the `invoketarget` attribute.",
              "return": {
                "type": {
                  "text": "HTMLElement | null"
                }
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "mediaSubtitlesList",
              "type": {
                "text": "TextTrackLike[]"
              },
              "description": "An array of TextTrack-like objects.\nObjects must have the properties: kind, language, and label."
            },
            {
              "kind": "field",
              "name": "mediaSubtitlesShowing",
              "type": {
                "text": "TextTrackLike[]"
              },
              "description": "An array of TextTrack-like objects.\nObjects must have the properties: kind, language, and label."
            },
            {
              "kind": "field",
              "name": "invokeTarget",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) A list of all subtitles and captions.",
              "name": "mediasubtitleslist"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) A list of the showing subtitles and captions.",
              "name": "mediasubtitlesshowing"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The id of the element to invoke when clicked.",
              "name": "invoketarget",
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeMenuButton",
            "module": "/dist/menu/media-chrome-menu-button.js"
          },
          "tagName": "media-captions-menu-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-captions-menu-button",
          "declaration": {
            "name": "MediaCaptionsMenuButton",
            "module": "dist/menu/media-captions-menu-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaCaptionsMenuButton",
          "declaration": {
            "name": "MediaCaptionsMenuButton",
            "module": "dist/menu/media-captions-menu-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaCaptionsMenuButton",
            "module": "dist/menu/media-captions-menu-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/menu/media-captions-menu.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaCaptionsMenu",
          "slots": [
            {
              "description": "Default slotted elements.",
              "name": "",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "An element shown at the top of the menu.",
              "name": "header",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "An icon element indicating a checked menu-item.",
              "name": "checked-indicator",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "An icon element indicating an item with closed captions.",
              "name": "captions-indicator"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "template",
              "type": {
                "text": "HTMLTemplateElement"
              },
              "static": true,
              "default": "template",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#prevState",
              "privacy": "private",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "anchorElement",
              "description": "Returns the anchor element when it is a floating menu.",
              "readonly": true,
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "mediaSubtitlesList",
              "description": "An array of TextTrack-like objects.\nObjects must have the properties: kind, language, and label.",
              "type": {
                "text": "Array<object>"
              }
            },
            {
              "kind": "field",
              "name": "mediaSubtitlesShowing",
              "type": {
                "text": "TextTrackLike[]"
              },
              "description": "An array of TextTrack-like objects.\nObjects must have the properties: kind, language, and label."
            },
            {
              "kind": "method",
              "name": "#render",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#onChange",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "formatMenuItemText",
              "parameters": [
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "static": true,
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "type": {
                "text": "MediaController | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#previouslyFocused",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#invokerElement",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#previousItems",
              "privacy": "private",
              "default": "new Set<MediaChromeMenuItem>()",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mutationObserver",
              "privacy": "private",
              "type": {
                "text": "MutationObserver"
              },
              "default": "new MutationObserver(this.#handleMenuItems)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#isPopover",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#cssRule",
              "privacy": "private",
              "type": {
                "text": "CSSStyleRule | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "container",
              "type": {
                "text": "HTMLElement"
              },
              "default": "this.shadowRoot.querySelector('#container')",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              },
              "default": "this.shadowRoot.querySelector( 'slot:not([name])' )",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "items",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "description": "Returns the menu items.",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "radioGroupItems",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "checkedItems",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleMenuItems",
              "privacy": "private",
              "description": "Fires an event when a menu item is added or removed.\nThis is needed to update the description slot of an ancestor menu item.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#updateLayoutStyle",
              "privacy": "private",
              "description": "Sets the layout style for the menu.\nIt can be a row or column layout. e.g. playback-rate-menu",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleInvoke",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "InvokeEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleOpen",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClosed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleBoundsResize",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleMenuResize",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#positionMenu",
              "privacy": "private",
              "parameters": [
                {
                  "name": "menuWidth",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Updates the popover menu position based on the anchor element.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#resizeMenu",
              "privacy": "private",
              "parameters": [
                {
                  "name": "animate",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Resize this menu to fit the submenu.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#backButtonElement",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleSelect",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleToggle",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ToggleEvent"
                  }
                }
              ],
              "description": "Handle the toggle event of submenus.\nCloses all other open submenus when opening a submenu.\nResizes this menu to fit the submenu.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#checkSubmenuHasExpanded",
              "privacy": "private",
              "description": "Check if any submenu is expanded and update the container class accordingly.\nWhen the CSS :has() selector is supported, this can be done with CSS only.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleFocusOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "FocusEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#getItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#getTabItem",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setTabItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "tabItem",
                  "type": {
                    "text": "MediaChromeMenuItem"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#selectItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "MediaChromeMenuItem"
                  }
                },
                {
                  "name": "toggle",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleMove",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "ToggleEvent"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "name": "change",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) A list of all subtitles and captions.",
              "name": "mediasubtitleslist"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "(read-only) A list of the showing subtitles and captions.",
              "name": "mediasubtitlesshowing"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "name": "disabled",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeMenu",
            "module": "/dist/menu/media-chrome-menu.js"
          },
          "tagName": "media-captions-menu",
          "customElement": true,
          "cssProperties": [
            {
              "description": "Default color of text / icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "Default color of background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .8)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`color` of text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .8))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`display` of menu.",
              "name": "--media-menu-display",
              "default": "inline-flex",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "Set to `row` for a horizontal menu design.",
              "name": "--media-menu-layout",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`flex-direction` of menu.",
              "name": "--media-menu-flex-direction",
              "default": "row",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`gap` between menu items.",
              "name": "--media-menu-gap",
              "default": ".25em",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of menu.",
              "name": "--media-menu-background",
              "default": "var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .8)))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`border-radius` of menu.",
              "name": "--media-menu-border-radius",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`border` of menu.",
              "name": "--media-menu-border",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transition` of menu when showing.",
              "name": "--media-menu-transition-in",
              "default": "visibility 0s, opacity .2s ease-out, transform .15s ease-out, left .2s ease-in-out, min-width .2s ease-in-out, min-height .2s ease-in-out",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transition` of menu when hiding.",
              "name": "--media-menu-transition-out",
              "default": "visibility .15s ease-in, opacity .15s ease-in, transform .15s ease-in",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`visibility` of menu when showing.",
              "name": "--media-menu-visibility",
              "default": "visible",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`visibility` of menu when hiding.",
              "name": "--media-menu-hidden-visibility",
              "default": "hidden",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-height` of menu.",
              "name": "--media-menu-max-height",
              "default": "var(--_menu-max-height, 300px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-height` of menu when hiding.",
              "name": "--media-menu-hidden-max-height",
              "default": "var(--media-menu-max-height, var(--_menu-max-height, 300px))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`opacity` of menu when showing.",
              "name": "--media-menu-opacity",
              "default": "1",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`opacity` of menu when hiding.",
              "name": "--media-menu-hidden-opacity",
              "default": "0",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transform` of menu when showing.",
              "name": "--media-menu-transform-in",
              "default": "translateY(0) scale(1)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transform` of menu when hiding.",
              "name": "--media-menu-transform-out",
              "default": "translateY(2px) scale(.99)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, normal) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "normal",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`line-height` of text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`fill` color of icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`height` of icon.",
              "name": "--media-menu-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`display` of check indicator.",
              "name": "--media-menu-item-checked-indicator-display",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of checked menu item.",
              "name": "--media-menu-item-checked-background",
              "default": "rgb(255 255 255 / .2)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-width` of menu item text.",
              "name": "--media-menu-item-max-width",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-captions-menu",
          "declaration": {
            "name": "MediaCaptionsMenu",
            "module": "dist/menu/media-captions-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaCaptionsMenu",
          "declaration": {
            "name": "MediaCaptionsMenu",
            "module": "dist/menu/media-captions-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaCaptionsMenu",
            "module": "dist/menu/media-captions-menu.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/menu/media-chrome-menu-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaChromeMenuButton",
          "members": [
            {
              "kind": "field",
              "name": "invokeTarget",
              "type": {
                "text": "string | null"
              }
            },
            {
              "kind": "field",
              "name": "invokeTargetElement",
              "type": {
                "text": "HTMLElement | null"
              },
              "description": "Returns the element with the id specified by the `invoketarget` attribute.",
              "return": {
                "type": {
                  "text": "HTMLElement | null"
                }
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "The id of the element to invoke when clicked.",
              "name": "invoketarget"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeButton",
            "module": "/dist/media-chrome-button.js"
          },
          "tagName": "media-chrome-menu-button",
          "customElement": true,
          "cssProperties": [
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-chrome-menu-button",
          "declaration": {
            "name": "MediaChromeMenuButton",
            "module": "dist/menu/media-chrome-menu-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaChromeMenuButton",
          "declaration": {
            "name": "MediaChromeMenuButton",
            "module": "dist/menu/media-chrome-menu-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaChromeMenuButton",
            "module": "dist/menu/media-chrome-menu-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/menu/media-chrome-menu-item.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Attributes",
          "type": {
            "text": "object"
          },
          "default": "{ TYPE: 'type', VALUE: 'value', CHECKED: 'checked', DISABLED: 'disabled', }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "MediaChromeMenuItem",
          "cssProperties": [
            {
              "description": "`opacity` of menu-item content.",
              "name": "--media-menu-item-opacity",
              "default": "1"
            },
            {
              "description": "`transition` of menu-item.",
              "name": "--media-menu-item-transition",
              "default": "background .15s linear, opacity .2s ease-in-out"
            },
            {
              "description": "`background` of checked menu-item.",
              "name": "--media-menu-item-checked-background"
            },
            {
              "description": "`outline` menu-item.",
              "name": "--media-menu-item-outline",
              "default": "0"
            },
            {
              "description": "`outline-offset` of menu-item.",
              "name": "--media-menu-item-outline-offset",
              "default": "-1px"
            },
            {
              "description": "`background` of hovered menu-item.",
              "name": "--media-menu-item-hover-background",
              "default": "rgb(92 92 102 / .5)"
            },
            {
              "description": "`outline` of hovered menu-item.",
              "name": "--media-menu-item-hover-outline"
            },
            {
              "description": "`outline-offset` of hovered menu-item.",
              "name": "--media-menu-item-hover-outline-offset",
              "default": "var(--media-menu-item-outline-offset, -1px)"
            },
            {
              "description": "`box-shadow` of the :focus-visible state.",
              "name": "--media-menu-item-focus-shadow",
              "default": "inset 0 0 0 2px rgb(27 127 204 / .9)"
            },
            {
              "description": "`height` of icon.",
              "name": "--media-menu-item-icon-height",
              "default": "var(--media-control-height, 24px)"
            },
            {
              "description": "`max-width` of description.",
              "name": "--media-menu-item-description-max-width",
              "default": "100px"
            },
            {
              "description": "`display` of checked indicator.",
              "name": "--media-menu-item-checked-indicator-display",
              "default": "inline-block"
            },
            {
              "description": "`fill` color of icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))"
            },
            {
              "description": "`height` of icon.",
              "name": "--media-menu-icon-height"
            },
            {
              "description": "`fill` color of indicator icon.",
              "name": "--media-menu-item-indicator-fill",
              "default": "var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)))"
            },
            {
              "description": "`height` of menu-item indicator.",
              "name": "--media-menu-item-indicator-height",
              "default": "1.25em"
            }
          ],
          "slots": [
            {
              "description": "Default slotted elements.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "template",
              "static": true,
              "default": "template",
              "type": {
                "text": "HTMLTemplateElement"
              }
            },
            {
              "kind": "field",
              "name": "#dirty",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#ownerElement",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "enable"
            },
            {
              "kind": "method",
              "name": "disable"
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "parameters": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "kind": "field",
              "name": "invokeTarget"
            },
            {
              "kind": "field",
              "name": "invokeTargetElement",
              "type": {
                "text": "MediaChromeMenu | null"
              },
              "description": "Returns the element with the id specified by the `invoketarget` attribute\nor the slotted submenu element.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "submenuElement",
              "type": {
                "text": "MediaChromeMenu | null"
              },
              "description": "Returns the slotted submenu element.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "type"
            },
            {
              "kind": "field",
              "name": "value"
            },
            {
              "kind": "field",
              "name": "text",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "checked"
            },
            {
              "kind": "method",
              "name": "#handleSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#submenuConnected",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#submenuDisconnected",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#handleMenuItem",
              "privacy": "private",
              "description": "If there is a slotted submenu the fallback content of the description slot\nis populated with the text of the first checked item."
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#handleKeyUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#reset",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "(''|'radio'|'checkbox')"
              },
              "description": "This attribute indicates the kind of command, and can be one of three values.",
              "name": "type"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "name": "disabled"
            }
          ],
          "superclass": {
            "module": "dist/menu/media-chrome-menu-item.ts"
          },
          "tagName": "media-chrome-menu-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attributes",
          "declaration": {
            "name": "Attributes",
            "module": "dist/menu/media-chrome-menu-item.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-chrome-menu-item",
          "declaration": {
            "name": "MediaChromeMenuItem",
            "module": "dist/menu/media-chrome-menu-item.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaChromeMenuItem",
          "declaration": {
            "name": "MediaChromeMenuItem",
            "module": "dist/menu/media-chrome-menu-item.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaChromeMenuItem",
            "module": "dist/menu/media-chrome-menu-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/menu/media-chrome-menu.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "createMenuItem",
          "parameters": [
            {
              "name": "{\n  type,\n  text,\n  value,\n  checked,\n}",
              "type": {
                "text": "{\n  type?: string;\n  text: string;\n  value: string;\n  checked: boolean;\n}"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "createIndicator",
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "Attributes",
          "type": {
            "text": "{\n  STYLE: 'style',\n  HIDDEN: 'hidden',\n  DISABLED: 'disabled',\n  ANCHOR: 'anchor',\n}"
          },
          "default": "{ STYLE: 'style', HIDDEN: 'hidden', DISABLED: 'disabled', ANCHOR: 'anchor', }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "MediaChromeMenu",
          "cssProperties": [
            {
              "description": "Default color of text / icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)"
            },
            {
              "description": "Default color of background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .8)"
            },
            {
              "description": "`color` of text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))"
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .8))"
            },
            {
              "description": "`display` of menu.",
              "name": "--media-menu-display",
              "default": "inline-flex"
            },
            {
              "description": "Set to `row` for a horizontal menu design.",
              "name": "--media-menu-layout"
            },
            {
              "description": "`flex-direction` of menu.",
              "name": "--media-menu-flex-direction",
              "default": "row"
            },
            {
              "description": "`gap` between menu items.",
              "name": "--media-menu-gap",
              "default": ".25em"
            },
            {
              "description": "`background` of menu.",
              "name": "--media-menu-background",
              "default": "var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .8)))"
            },
            {
              "description": "`border-radius` of menu.",
              "name": "--media-menu-border-radius"
            },
            {
              "description": "`border` of menu.",
              "name": "--media-menu-border",
              "default": "none"
            },
            {
              "description": "`transition` of menu when showing.",
              "name": "--media-menu-transition-in",
              "default": "visibility 0s, opacity .2s ease-out, transform .15s ease-out, left .2s ease-in-out, min-width .2s ease-in-out, min-height .2s ease-in-out"
            },
            {
              "description": "`transition` of menu when hiding.",
              "name": "--media-menu-transition-out",
              "default": "visibility .15s ease-in, opacity .15s ease-in, transform .15s ease-in"
            },
            {
              "description": "`visibility` of menu when showing.",
              "name": "--media-menu-visibility",
              "default": "visible"
            },
            {
              "description": "`visibility` of menu when hiding.",
              "name": "--media-menu-hidden-visibility",
              "default": "hidden"
            },
            {
              "description": "`max-height` of menu.",
              "name": "--media-menu-max-height",
              "default": "var(--_menu-max-height, 300px)"
            },
            {
              "description": "`max-height` of menu when hiding.",
              "name": "--media-menu-hidden-max-height",
              "default": "var(--media-menu-max-height, var(--_menu-max-height, 300px))"
            },
            {
              "description": "`opacity` of menu when showing.",
              "name": "--media-menu-opacity",
              "default": "1"
            },
            {
              "description": "`opacity` of menu when hiding.",
              "name": "--media-menu-hidden-opacity",
              "default": "0"
            },
            {
              "description": "`transform` of menu when showing.",
              "name": "--media-menu-transform-in",
              "default": "translateY(0) scale(1)"
            },
            {
              "description": "`transform` of menu when hiding.",
              "name": "--media-menu-transform-out",
              "default": "translateY(2px) scale(.99)"
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, normal) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)"
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "normal"
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif"
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px"
            },
            {
              "description": "`line-height` of text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)"
            },
            {
              "description": "`fill` color of icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))"
            },
            {
              "description": "`height` of icon.",
              "name": "--media-menu-icon-height",
              "default": "var(--media-control-height, 24px)"
            },
            {
              "description": "`display` of check indicator.",
              "name": "--media-menu-item-checked-indicator-display",
              "default": "none"
            },
            {
              "description": "`background` of checked menu item.",
              "name": "--media-menu-item-checked-background",
              "default": "rgb(255 255 255 / .2)"
            },
            {
              "description": "`max-width` of menu item text.",
              "name": "--media-menu-item-max-width"
            }
          ],
          "slots": [
            {
              "description": "Default slotted elements.",
              "name": ""
            },
            {
              "description": "An element shown at the top of the menu.",
              "name": "header"
            },
            {
              "description": "An icon element indicating a checked menu-item.",
              "name": "checked-indicator"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "template",
              "type": {
                "text": "HTMLTemplateElement"
              },
              "static": true,
              "default": "template"
            },
            {
              "kind": "method",
              "name": "formatMenuItemText",
              "static": true,
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "type": {
                "text": "MediaController | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#previouslyFocused",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#invokerElement",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#previousItems",
              "privacy": "private",
              "default": "new Set<MediaChromeMenuItem>()"
            },
            {
              "kind": "field",
              "name": "#mutationObserver",
              "privacy": "private",
              "type": {
                "text": "MutationObserver"
              },
              "default": "new MutationObserver(this.#handleMenuItems)"
            },
            {
              "kind": "field",
              "name": "#isPopover",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#cssRule",
              "privacy": "private",
              "type": {
                "text": "CSSStyleRule | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "kind": "field",
              "name": "container",
              "type": {
                "text": "HTMLElement"
              },
              "default": "this.shadowRoot.querySelector('#container')"
            },
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              },
              "default": "this.shadowRoot.querySelector( 'slot:not([name])' )"
            },
            {
              "kind": "method",
              "name": "enable",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "formatMenuItemText",
              "parameters": [
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "data",
                  "optional": true,
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "anchor"
            },
            {
              "kind": "field",
              "name": "anchorElement",
              "description": "Returns the anchor element when it is a floating menu.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "items",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "description": "Returns the menu items.",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "radioGroupItems",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "checkedItems",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "#handleSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "#handleMenuItems",
              "privacy": "private",
              "description": "Fires an event when a menu item is added or removed.\nThis is needed to update the description slot of an ancestor menu item."
            },
            {
              "kind": "method",
              "name": "#updateLayoutStyle",
              "privacy": "private",
              "description": "Sets the layout style for the menu.\nIt can be a row or column layout. e.g. playback-rate-menu"
            },
            {
              "kind": "method",
              "name": "#handleInvoke",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "InvokeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#handleOpen",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#handleClosed",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#handleBoundsResize",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#handleMenuResize",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#positionMenu",
              "privacy": "private",
              "parameters": [
                {
                  "name": "menuWidth",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Updates the popover menu position based on the anchor element."
            },
            {
              "kind": "method",
              "name": "#resizeMenu",
              "privacy": "private",
              "parameters": [
                {
                  "name": "animate",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Resize this menu to fit the submenu."
            },
            {
              "kind": "method",
              "name": "focus"
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "#backButtonElement",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "handleSelect",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#handleToggle",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ToggleEvent"
                  }
                }
              ],
              "description": "Handle the toggle event of submenus.\nCloses all other open submenus when opening a submenu.\nResizes this menu to fit the submenu."
            },
            {
              "kind": "method",
              "name": "#checkSubmenuHasExpanded",
              "privacy": "private",
              "description": "Check if any submenu is expanded and update the container class accordingly.\nWhen the CSS :has() selector is supported, this can be done with CSS only."
            },
            {
              "kind": "method",
              "name": "#handleFocusOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "FocusEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#getItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#getTabItem",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#setTabItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "tabItem",
                  "type": {
                    "text": "MediaChromeMenuItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#selectItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "MediaChromeMenuItem"
                  }
                },
                {
                  "name": "toggle",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleMove",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "type": {
                "text": "ToggleEvent"
              }
            },
            {
              "name": "change",
              "type": {
                "text": "Event"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "name": "disabled"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller"
            }
          ],
          "superclass": {
            "module": "dist/menu/media-chrome-menu.ts"
          },
          "tagName": "media-chrome-menu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "createMenuItem",
          "declaration": {
            "name": "createMenuItem",
            "module": "dist/menu/media-chrome-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "createIndicator",
          "declaration": {
            "name": "createIndicator",
            "module": "dist/menu/media-chrome-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "Attributes",
          "declaration": {
            "name": "Attributes",
            "module": "dist/menu/media-chrome-menu.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-chrome-menu",
          "declaration": {
            "name": "MediaChromeMenu",
            "module": "dist/menu/media-chrome-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaChromeMenu",
          "declaration": {
            "name": "MediaChromeMenu",
            "module": "dist/menu/media-chrome-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaChromeMenu",
            "module": "dist/menu/media-chrome-menu.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/menu/media-playback-rate-menu-button.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Attributes",
          "type": {
            "text": "object"
          },
          "default": "{ RATES: 'rates', }"
        },
        {
          "kind": "variable",
          "name": "DEFAULT_RATES",
          "type": {
            "text": "array"
          },
          "default": "[1, 1.2, 1.5, 1.7, 2]"
        },
        {
          "kind": "variable",
          "name": "DEFAULT_RATE",
          "type": {
            "text": "number"
          },
          "default": "1"
        },
        {
          "kind": "class",
          "description": "",
          "name": "MediaPlaybackRateMenuButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-playback-rate-menu-button-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#rates",
              "privacy": "private",
              "default": "new AttributeTokenList(this, Attributes.RATES, { defaultValue: DEFAULT_RATES, })"
            },
            {
              "kind": "field",
              "name": "container",
              "type": {
                "text": "HTMLSlotElement"
              }
            },
            {
              "kind": "field",
              "name": "invokeTargetElement",
              "type": {
                "text": "HTMLElement | null"
              },
              "description": "Returns the element with the id specified by the `invoketarget` attribute.",
              "return": {
                "type": {
                  "text": "HTMLElement | null"
                }
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "rates",
              "type": {
                "text": "AttributeTokenList | number[] | undefined"
              },
              "description": "Will return a DOMTokenList.\nSetting a value will accept an array of numbers."
            },
            {
              "kind": "field",
              "name": "mediaPlaybackRate",
              "type": {
                "text": "number"
              },
              "description": "The current playback rate"
            },
            {
              "kind": "field",
              "name": "innerHTML",
              "default": "`${DEFAULT_RATE}x`"
            },
            {
              "kind": "field",
              "name": "invokeTarget",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "Set custom playback rates for the user to choose from.",
              "name": "rates"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the media playback rate.",
              "name": "mediaplaybackrate"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The id of the element to invoke when clicked.",
              "name": "invoketarget",
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeMenuButton",
            "module": "/dist/menu/media-chrome-menu-button.js"
          },
          "tagName": "media-playback-rate-menu-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attributes",
          "declaration": {
            "name": "Attributes",
            "module": "dist/menu/media-playback-rate-menu-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "DEFAULT_RATES",
          "declaration": {
            "name": "DEFAULT_RATES",
            "module": "dist/menu/media-playback-rate-menu-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "DEFAULT_RATE",
          "declaration": {
            "name": "DEFAULT_RATE",
            "module": "dist/menu/media-playback-rate-menu-button.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-playback-rate-menu-button",
          "declaration": {
            "name": "MediaPlaybackRateMenuButton",
            "module": "dist/menu/media-playback-rate-menu-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaPlaybackRateMenuButton",
          "declaration": {
            "name": "MediaPlaybackRateMenuButton",
            "module": "dist/menu/media-playback-rate-menu-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaPlaybackRateMenuButton",
            "module": "dist/menu/media-playback-rate-menu-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/menu/media-playback-rate-menu.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Attributes",
          "type": {
            "text": "object"
          },
          "default": "{ RATES: 'rates', }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "MediaPlaybackRateMenu",
          "slots": [
            {
              "description": "Default slotted elements.",
              "name": "",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "An element shown at the top of the menu.",
              "name": "header",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "An icon element indicating a checked menu-item.",
              "name": "checked-indicator",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#rates",
              "privacy": "private",
              "type": {
                "text": "AttributeTokenList"
              },
              "default": "new AttributeTokenList(this, Attributes.RATES, { defaultValue: DEFAULT_RATES, })"
            },
            {
              "kind": "field",
              "name": "anchorElement",
              "description": "Returns the anchor element when it is a floating menu.",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "rates",
              "type": {
                "text": "AttributeTokenList | number[] | undefined"
              },
              "description": "Will return a DOMTokenList.\nSetting a value will accept an array of numbers."
            },
            {
              "kind": "field",
              "name": "mediaPlaybackRate",
              "type": {
                "text": "number"
              },
              "description": "The current playback rate"
            },
            {
              "kind": "method",
              "name": "#render",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#onChange",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "template",
              "type": {
                "text": "HTMLTemplateElement"
              },
              "static": true,
              "default": "template",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "formatMenuItemText",
              "parameters": [
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "static": true,
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "type": {
                "text": "MediaController | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#previouslyFocused",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#invokerElement",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#previousItems",
              "privacy": "private",
              "default": "new Set<MediaChromeMenuItem>()",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mutationObserver",
              "privacy": "private",
              "type": {
                "text": "MutationObserver"
              },
              "default": "new MutationObserver(this.#handleMenuItems)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#isPopover",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#cssRule",
              "privacy": "private",
              "type": {
                "text": "CSSStyleRule | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "container",
              "type": {
                "text": "HTMLElement"
              },
              "default": "this.shadowRoot.querySelector('#container')",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              },
              "default": "this.shadowRoot.querySelector( 'slot:not([name])' )",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "items",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "description": "Returns the menu items.",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "radioGroupItems",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "checkedItems",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleMenuItems",
              "privacy": "private",
              "description": "Fires an event when a menu item is added or removed.\nThis is needed to update the description slot of an ancestor menu item.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#updateLayoutStyle",
              "privacy": "private",
              "description": "Sets the layout style for the menu.\nIt can be a row or column layout. e.g. playback-rate-menu",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleInvoke",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "InvokeEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleOpen",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClosed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleBoundsResize",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleMenuResize",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#positionMenu",
              "privacy": "private",
              "parameters": [
                {
                  "name": "menuWidth",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Updates the popover menu position based on the anchor element.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#resizeMenu",
              "privacy": "private",
              "parameters": [
                {
                  "name": "animate",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Resize this menu to fit the submenu.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#backButtonElement",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleSelect",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleToggle",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ToggleEvent"
                  }
                }
              ],
              "description": "Handle the toggle event of submenus.\nCloses all other open submenus when opening a submenu.\nResizes this menu to fit the submenu.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#checkSubmenuHasExpanded",
              "privacy": "private",
              "description": "Check if any submenu is expanded and update the container class accordingly.\nWhen the CSS :has() selector is supported, this can be done with CSS only.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleFocusOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "FocusEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#getItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#getTabItem",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setTabItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "tabItem",
                  "type": {
                    "text": "MediaChromeMenuItem"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#selectItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "MediaChromeMenuItem"
                  }
                },
                {
                  "name": "toggle",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleMove",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "Set custom playback rates for the user to choose from.",
              "name": "rates"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the media playback rate.",
              "name": "mediaplaybackrate"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "name": "disabled",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeMenu",
            "module": "/dist/menu/media-chrome-menu.js"
          },
          "tagName": "media-playback-rate-menu",
          "customElement": true,
          "cssProperties": [
            {
              "description": "Default color of text / icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "Default color of background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .8)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`color` of text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .8))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`display` of menu.",
              "name": "--media-menu-display",
              "default": "inline-flex",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "Set to `row` for a horizontal menu design.",
              "name": "--media-menu-layout",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`flex-direction` of menu.",
              "name": "--media-menu-flex-direction",
              "default": "row",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`gap` between menu items.",
              "name": "--media-menu-gap",
              "default": ".25em",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of menu.",
              "name": "--media-menu-background",
              "default": "var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .8)))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`border-radius` of menu.",
              "name": "--media-menu-border-radius",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`border` of menu.",
              "name": "--media-menu-border",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transition` of menu when showing.",
              "name": "--media-menu-transition-in",
              "default": "visibility 0s, opacity .2s ease-out, transform .15s ease-out, left .2s ease-in-out, min-width .2s ease-in-out, min-height .2s ease-in-out",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transition` of menu when hiding.",
              "name": "--media-menu-transition-out",
              "default": "visibility .15s ease-in, opacity .15s ease-in, transform .15s ease-in",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`visibility` of menu when showing.",
              "name": "--media-menu-visibility",
              "default": "visible",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`visibility` of menu when hiding.",
              "name": "--media-menu-hidden-visibility",
              "default": "hidden",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-height` of menu.",
              "name": "--media-menu-max-height",
              "default": "var(--_menu-max-height, 300px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-height` of menu when hiding.",
              "name": "--media-menu-hidden-max-height",
              "default": "var(--media-menu-max-height, var(--_menu-max-height, 300px))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`opacity` of menu when showing.",
              "name": "--media-menu-opacity",
              "default": "1",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`opacity` of menu when hiding.",
              "name": "--media-menu-hidden-opacity",
              "default": "0",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transform` of menu when showing.",
              "name": "--media-menu-transform-in",
              "default": "translateY(0) scale(1)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transform` of menu when hiding.",
              "name": "--media-menu-transform-out",
              "default": "translateY(2px) scale(.99)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, normal) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "normal",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`line-height` of text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`fill` color of icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`height` of icon.",
              "name": "--media-menu-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`display` of check indicator.",
              "name": "--media-menu-item-checked-indicator-display",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of checked menu item.",
              "name": "--media-menu-item-checked-background",
              "default": "rgb(255 255 255 / .2)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-width` of menu item text.",
              "name": "--media-menu-item-max-width",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "ToggleEvent"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "name": "change",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attributes",
          "declaration": {
            "name": "Attributes",
            "module": "dist/menu/media-playback-rate-menu.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "media-playback-rate-menu",
          "declaration": {
            "name": "MediaPlaybackRateMenu",
            "module": "dist/menu/media-playback-rate-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaPlaybackRateMenu",
          "declaration": {
            "name": "MediaPlaybackRateMenu",
            "module": "dist/menu/media-playback-rate-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaPlaybackRateMenu",
            "module": "dist/menu/media-playback-rate-menu.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/menu/media-rendition-menu-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaRenditionMenuButton",
          "cssProperties": [
            {
              "description": "`display` property of button.",
              "name": "--media-rendition-menu-button-display",
              "default": "inline-flex"
            },
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "invokeTargetElement",
              "type": {
                "text": "HTMLElement | null"
              },
              "description": "Returns the element with the id specified by the `invoketarget` attribute.",
              "return": {
                "type": {
                  "text": "HTMLElement | null"
                }
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "mediaRenditionSelected",
              "type": {
                "text": "string"
              },
              "description": "Get selected rendition id."
            },
            {
              "kind": "field",
              "name": "mediaHeight",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "invokeTarget",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the selected rendition id.",
              "name": "mediarenditionselected"
            },
            {
              "type": {
                "text": "(unavailable|unsupported)"
              },
              "description": "(read-only) Set if rendition selection is unavailable.",
              "name": "mediarenditionunavailable"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The id of the element to invoke when clicked.",
              "name": "invoketarget",
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeMenuButton",
            "module": "/dist/menu/media-chrome-menu-button.js"
          },
          "tagName": "media-rendition-menu-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-rendition-menu-button",
          "declaration": {
            "name": "MediaRenditionMenuButton",
            "module": "dist/menu/media-rendition-menu-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaRenditionMenuButton",
          "declaration": {
            "name": "MediaRenditionMenuButton",
            "module": "dist/menu/media-rendition-menu-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaRenditionMenuButton",
            "module": "dist/menu/media-rendition-menu-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/menu/media-rendition-menu.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaRenditionMenu",
          "slots": [
            {
              "description": "Default slotted elements.",
              "name": "",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "An element shown at the top of the menu.",
              "name": "header",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "An icon element indicating a checked menu-item.",
              "name": "checked-indicator",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#renditionList",
              "privacy": "private",
              "type": {
                "text": "Rendition[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "#prevState",
              "privacy": "private",
              "type": {
                "text": "Record<string, any>"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "anchorElement",
              "description": "Returns the anchor element when it is a floating menu.",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "mediaRenditionList",
              "type": {
                "text": "Rendition[]"
              }
            },
            {
              "kind": "field",
              "name": "mediaRenditionSelected",
              "type": {
                "text": "string"
              },
              "description": "Get selected rendition id."
            },
            {
              "kind": "field",
              "name": "mediaHeight",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "method",
              "name": "#render",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#onChange",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "template",
              "type": {
                "text": "HTMLTemplateElement"
              },
              "static": true,
              "default": "template",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "formatMenuItemText",
              "parameters": [
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "static": true,
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "type": {
                "text": "MediaController | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#previouslyFocused",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#invokerElement",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#previousItems",
              "privacy": "private",
              "default": "new Set<MediaChromeMenuItem>()",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mutationObserver",
              "privacy": "private",
              "type": {
                "text": "MutationObserver"
              },
              "default": "new MutationObserver(this.#handleMenuItems)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#isPopover",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#cssRule",
              "privacy": "private",
              "type": {
                "text": "CSSStyleRule | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "container",
              "type": {
                "text": "HTMLElement"
              },
              "default": "this.shadowRoot.querySelector('#container')",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              },
              "default": "this.shadowRoot.querySelector( 'slot:not([name])' )",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "items",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "description": "Returns the menu items.",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "radioGroupItems",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "checkedItems",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleMenuItems",
              "privacy": "private",
              "description": "Fires an event when a menu item is added or removed.\nThis is needed to update the description slot of an ancestor menu item.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#updateLayoutStyle",
              "privacy": "private",
              "description": "Sets the layout style for the menu.\nIt can be a row or column layout. e.g. playback-rate-menu",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleInvoke",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "InvokeEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleOpen",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClosed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleBoundsResize",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleMenuResize",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#positionMenu",
              "privacy": "private",
              "parameters": [
                {
                  "name": "menuWidth",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Updates the popover menu position based on the anchor element.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#resizeMenu",
              "privacy": "private",
              "parameters": [
                {
                  "name": "animate",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Resize this menu to fit the submenu.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#backButtonElement",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleSelect",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleToggle",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ToggleEvent"
                  }
                }
              ],
              "description": "Handle the toggle event of submenus.\nCloses all other open submenus when opening a submenu.\nResizes this menu to fit the submenu.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#checkSubmenuHasExpanded",
              "privacy": "private",
              "description": "Check if any submenu is expanded and update the container class accordingly.\nWhen the CSS :has() selector is supported, this can be done with CSS only.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleFocusOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "FocusEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#getItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#getTabItem",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setTabItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "tabItem",
                  "type": {
                    "text": "MediaChromeMenuItem"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#selectItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "MediaChromeMenuItem"
                  }
                },
                {
                  "name": "toggle",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleMove",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the selected rendition id.",
              "name": "mediarenditionselected"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "(read-only) Set to the rendition list.",
              "name": "mediarenditionlist"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "name": "disabled",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeMenu",
            "module": "/dist/menu/media-chrome-menu.js"
          },
          "tagName": "media-rendition-menu",
          "customElement": true,
          "cssProperties": [
            {
              "description": "Default color of text / icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "Default color of background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .8)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`color` of text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .8))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`display` of menu.",
              "name": "--media-menu-display",
              "default": "inline-flex",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "Set to `row` for a horizontal menu design.",
              "name": "--media-menu-layout",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`flex-direction` of menu.",
              "name": "--media-menu-flex-direction",
              "default": "row",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`gap` between menu items.",
              "name": "--media-menu-gap",
              "default": ".25em",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of menu.",
              "name": "--media-menu-background",
              "default": "var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .8)))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`border-radius` of menu.",
              "name": "--media-menu-border-radius",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`border` of menu.",
              "name": "--media-menu-border",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transition` of menu when showing.",
              "name": "--media-menu-transition-in",
              "default": "visibility 0s, opacity .2s ease-out, transform .15s ease-out, left .2s ease-in-out, min-width .2s ease-in-out, min-height .2s ease-in-out",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transition` of menu when hiding.",
              "name": "--media-menu-transition-out",
              "default": "visibility .15s ease-in, opacity .15s ease-in, transform .15s ease-in",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`visibility` of menu when showing.",
              "name": "--media-menu-visibility",
              "default": "visible",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`visibility` of menu when hiding.",
              "name": "--media-menu-hidden-visibility",
              "default": "hidden",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-height` of menu.",
              "name": "--media-menu-max-height",
              "default": "var(--_menu-max-height, 300px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-height` of menu when hiding.",
              "name": "--media-menu-hidden-max-height",
              "default": "var(--media-menu-max-height, var(--_menu-max-height, 300px))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`opacity` of menu when showing.",
              "name": "--media-menu-opacity",
              "default": "1",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`opacity` of menu when hiding.",
              "name": "--media-menu-hidden-opacity",
              "default": "0",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transform` of menu when showing.",
              "name": "--media-menu-transform-in",
              "default": "translateY(0) scale(1)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transform` of menu when hiding.",
              "name": "--media-menu-transform-out",
              "default": "translateY(2px) scale(.99)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, normal) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "normal",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`line-height` of text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`fill` color of icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`height` of icon.",
              "name": "--media-menu-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`display` of check indicator.",
              "name": "--media-menu-item-checked-indicator-display",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of checked menu item.",
              "name": "--media-menu-item-checked-background",
              "default": "rgb(255 255 255 / .2)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-width` of menu item text.",
              "name": "--media-menu-item-max-width",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "ToggleEvent"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "name": "change",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-rendition-menu",
          "declaration": {
            "name": "MediaRenditionMenu",
            "module": "dist/menu/media-rendition-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaRenditionMenu",
          "declaration": {
            "name": "MediaRenditionMenu",
            "module": "dist/menu/media-rendition-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaRenditionMenu",
            "module": "dist/menu/media-rendition-menu.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/menu/media-settings-menu-button.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaSettingsMenuButton",
          "members": [
            {
              "kind": "field",
              "name": "invokeTargetElement",
              "type": {
                "text": "HTMLElement | null"
              },
              "description": "Returns the element with the id specified by the `invoketarget` attribute.",
              "return": {
                "type": {
                  "text": "HTMLElement | null"
                }
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "invokeTarget",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "preventClick",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "DocumentFragment"
              },
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipEl",
              "type": {
                "text": "MediaTooltip"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipContent",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#clickListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#positionTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keyupListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "#keydownListener",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setupTooltip",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "kind": "field",
              "name": "tooltipPlacement",
              "type": {
                "text": "TooltipPlacement | undefined"
              },
              "description": "Get or set tooltip placement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "target",
              "type": {
                "text": "string"
              },
              "description": "CSS id selector for the element to be targeted by the button."
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The id of the element to invoke when clicked.",
              "name": "invoketarget",
              "inheritedFrom": {
                "name": "MediaChromeMenuButton",
                "module": "dist/menu/media-chrome-menu-button.ts"
              }
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "('top'|'right'|'bottom'|'left'|'none')"
              },
              "description": "The placement of the tooltip, defaults to \"top\"",
              "name": "tooltipplacement",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Hides the tooltip if this attribute is present",
              "name": "notooltip",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeMenuButton",
            "module": "/dist/menu/media-chrome-menu-button.js"
          },
          "tagName": "media-settings-menu-button",
          "customElement": true,
          "cssProperties": [
            {
              "description": "Default color of text and icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "Default color of button background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`color` of button text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`fill` color of button icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`display` property of control.",
              "name": "--media-control-display",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .7))",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`background` of control hover state.",
              "name": "--media-control-hover-background",
              "default": "rgba(50 50 70 / .7)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`padding` of control.",
              "name": "--media-control-padding",
              "default": "10px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of control.",
              "name": "--media-control-height",
              "default": "24px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, bold) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "bold",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`line-height` of button text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`width` of button icon.",
              "name": "--media-button-icon-width",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`height` of button icon.",
              "name": "--media-button-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transform` of button icon.",
              "name": "--media-button-icon-transform",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            },
            {
              "description": "`transition` of button icon.",
              "name": "--media-button-icon-transition",
              "inheritedFrom": {
                "name": "MediaChromeButton",
                "module": "dist/media-chrome-button.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-settings-menu-button",
          "declaration": {
            "name": "MediaSettingsMenuButton",
            "module": "dist/menu/media-settings-menu-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaSettingsMenuButton",
          "declaration": {
            "name": "MediaSettingsMenuButton",
            "module": "dist/menu/media-settings-menu-button.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaSettingsMenuButton",
            "module": "dist/menu/media-settings-menu-button.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/menu/media-settings-menu-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaSettingsMenuItem",
          "members": [
            {
              "kind": "field",
              "name": "template",
              "static": true,
              "default": "template",
              "type": {
                "text": "HTMLTemplateElement"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "field",
              "name": "#dirty",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "field",
              "name": "#ownerElement",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "parameters": [
                {
                  "name": "event"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "field",
              "name": "invokeTarget",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "field",
              "name": "invokeTargetElement",
              "type": {
                "text": "MediaChromeMenu | null"
              },
              "description": "Returns the element with the id specified by the `invoketarget` attribute\nor the slotted submenu element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "field",
              "name": "submenuElement",
              "type": {
                "text": "MediaChromeMenu | null"
              },
              "description": "Returns the slotted submenu element.",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "field",
              "name": "text",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "field",
              "name": "checked",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "method",
              "name": "#submenuConnected",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "method",
              "name": "#submenuDisconnected",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleMenuItem",
              "privacy": "private",
              "description": "If there is a slotted submenu the fallback content of the description slot\nis populated with the text of the first checked item.",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleClick",
              "parameters": [
                {
                  "name": "event"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleKeyUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event"
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "kind": "method",
              "name": "#reset",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeMenuItem",
            "module": "/dist/menu/media-chrome-menu-item.js"
          },
          "tagName": "media-settings-menu-item",
          "customElement": true,
          "slots": [
            {
              "description": "Default slotted elements.",
              "name": "",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            }
          ],
          "cssProperties": [
            {
              "description": "`opacity` of menu-item content.",
              "name": "--media-menu-item-opacity",
              "default": "1",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`transition` of menu-item.",
              "name": "--media-menu-item-transition",
              "default": "background .15s linear, opacity .2s ease-in-out",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`background` of checked menu-item.",
              "name": "--media-menu-item-checked-background",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`outline` menu-item.",
              "name": "--media-menu-item-outline",
              "default": "0",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`outline-offset` of menu-item.",
              "name": "--media-menu-item-outline-offset",
              "default": "-1px",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`background` of hovered menu-item.",
              "name": "--media-menu-item-hover-background",
              "default": "rgb(92 92 102 / .5)",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`outline` of hovered menu-item.",
              "name": "--media-menu-item-hover-outline",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`outline-offset` of hovered menu-item.",
              "name": "--media-menu-item-hover-outline-offset",
              "default": "var(--media-menu-item-outline-offset, -1px)",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`box-shadow` of the :focus-visible state.",
              "name": "--media-menu-item-focus-shadow",
              "default": "inset 0 0 0 2px rgb(27 127 204 / .9)",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`height` of icon.",
              "name": "--media-menu-item-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`max-width` of description.",
              "name": "--media-menu-item-description-max-width",
              "default": "100px",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`display` of checked indicator.",
              "name": "--media-menu-item-checked-indicator-display",
              "default": "inline-block",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`fill` color of icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`height` of icon.",
              "name": "--media-menu-icon-height",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`fill` color of indicator icon.",
              "name": "--media-menu-item-indicator-fill",
              "default": "var(--media-icon-color, var(--media-primary-color, rgb(238 238 238)))",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "description": "`height` of menu-item indicator.",
              "name": "--media-menu-item-indicator-height",
              "default": "1.25em",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "(''|'radio'|'checkbox')"
              },
              "description": "This attribute indicates the kind of command, and can be one of three values.",
              "name": "type",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "name": "disabled",
              "inheritedFrom": {
                "name": "MediaChromeMenuItem",
                "module": "dist/menu/media-chrome-menu-item.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-settings-menu-item",
          "declaration": {
            "name": "MediaSettingsMenuItem",
            "module": "dist/menu/media-settings-menu-item.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaSettingsMenuItem",
          "declaration": {
            "name": "MediaSettingsMenuItem",
            "module": "dist/menu/media-settings-menu-item.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaSettingsMenuItem",
            "module": "dist/menu/media-settings-menu-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/menu/media-settings-menu.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MediaSettingsMenu",
          "cssProperties": [
            {
              "description": "`justify-content` of the menu.",
              "name": "--media-settings-menu-justify-content"
            },
            {
              "description": "Default color of text / icon.",
              "name": "--media-primary-color",
              "default": "rgb(238 238 238)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "Default color of background.",
              "name": "--media-secondary-color",
              "default": "rgb(20 20 30 / .8)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`color` of text.",
              "name": "--media-text-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of control.",
              "name": "--media-control-background",
              "default": "var(--media-secondary-color, rgb(20 20 30 / .8))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`display` of menu.",
              "name": "--media-menu-display",
              "default": "inline-flex",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "Set to `row` for a horizontal menu design.",
              "name": "--media-menu-layout",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`flex-direction` of menu.",
              "name": "--media-menu-flex-direction",
              "default": "row",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`gap` between menu items.",
              "name": "--media-menu-gap",
              "default": ".25em",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of menu.",
              "name": "--media-menu-background",
              "default": "var(--media-control-background, var(--media-secondary-color, rgb(20 20 30 / .8)))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`border-radius` of menu.",
              "name": "--media-menu-border-radius",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`border` of menu.",
              "name": "--media-menu-border",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transition` of menu when showing.",
              "name": "--media-menu-transition-in",
              "default": "visibility 0s, opacity .2s ease-out, transform .15s ease-out, left .2s ease-in-out, min-width .2s ease-in-out, min-height .2s ease-in-out",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transition` of menu when hiding.",
              "name": "--media-menu-transition-out",
              "default": "visibility .15s ease-in, opacity .15s ease-in, transform .15s ease-in",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`visibility` of menu when showing.",
              "name": "--media-menu-visibility",
              "default": "visible",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`visibility` of menu when hiding.",
              "name": "--media-menu-hidden-visibility",
              "default": "hidden",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-height` of menu.",
              "name": "--media-menu-max-height",
              "default": "var(--_menu-max-height, 300px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-height` of menu when hiding.",
              "name": "--media-menu-hidden-max-height",
              "default": "var(--media-menu-max-height, var(--_menu-max-height, 300px))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`opacity` of menu when showing.",
              "name": "--media-menu-opacity",
              "default": "1",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`opacity` of menu when hiding.",
              "name": "--media-menu-hidden-opacity",
              "default": "0",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transform` of menu when showing.",
              "name": "--media-menu-transform-in",
              "default": "translateY(0) scale(1)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`transform` of menu when hiding.",
              "name": "--media-menu-transform-out",
              "default": "translateY(2px) scale(.99)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font` shorthand property.",
              "name": "--media-font",
              "default": "var(--media-font-weight, normal) var(--media-font-size, 14px) / var(--media-text-content-height, var(--media-control-height, 24px)) var(--media-font-family, helvetica neue, segoe ui, roboto, arial, sans-serif)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-weight` property.",
              "name": "--media-font-weight",
              "default": "normal",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-family` property.",
              "name": "--media-font-family",
              "default": "helvetica neue, segoe ui, roboto, arial, sans-serif",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`font-size` property.",
              "name": "--media-font-size",
              "default": "14px",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`line-height` of text.",
              "name": "--media-text-content-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`fill` color of icon.",
              "name": "--media-icon-color",
              "default": "var(--media-primary-color, rgb(238 238 238))",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`height` of icon.",
              "name": "--media-menu-icon-height",
              "default": "var(--media-control-height, 24px)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`display` of check indicator.",
              "name": "--media-menu-item-checked-indicator-display",
              "default": "none",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`background` of checked menu item.",
              "name": "--media-menu-item-checked-background",
              "default": "rgb(255 255 255 / .2)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "`max-width` of menu item text.",
              "name": "--media-menu-item-max-width",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "template",
              "type": {
                "text": "HTMLTemplateElement"
              },
              "static": true,
              "default": "template",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchorElement",
              "description": "Returns the anchor element when it is a floating menu.",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "formatMenuItemText",
              "parameters": [
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "static": true,
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mediaController",
              "privacy": "private",
              "type": {
                "text": "MediaController | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#previouslyFocused",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#invokerElement",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#previousItems",
              "privacy": "private",
              "default": "new Set<MediaChromeMenuItem>()",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#mutationObserver",
              "privacy": "private",
              "type": {
                "text": "MutationObserver"
              },
              "default": "new MutationObserver(this.#handleMenuItems)",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#isPopover",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#cssRule",
              "privacy": "private",
              "type": {
                "text": "CSSStyleRule | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "nativeEl",
              "type": {
                "text": "HTMLElement"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "container",
              "type": {
                "text": "HTMLElement"
              },
              "default": "this.shadowRoot.querySelector('#container')",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "defaultSlot",
              "type": {
                "text": "HTMLSlotElement"
              },
              "default": "this.shadowRoot.querySelector( 'slot:not([name])' )",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleEvent",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "anchor",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "items",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "description": "Returns the menu items.",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "radioGroupItems",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "checkedItems",
              "type": {
                "text": "MediaChromeMenuItem[]"
              },
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleSlotChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleMenuItems",
              "privacy": "private",
              "description": "Fires an event when a menu item is added or removed.\nThis is needed to update the description slot of an ancestor menu item.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#updateLayoutStyle",
              "privacy": "private",
              "description": "Sets the layout style for the menu.\nIt can be a row or column layout. e.g. playback-rate-menu",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleInvoke",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "InvokeEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleOpen",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClosed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleBoundsResize",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#handleMenuResize",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#positionMenu",
              "privacy": "private",
              "parameters": [
                {
                  "name": "menuWidth",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Updates the popover menu position based on the anchor element.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#resizeMenu",
              "privacy": "private",
              "parameters": [
                {
                  "name": "animate",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Resize this menu to fit the submenu.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "focus",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "#backButtonElement",
              "privacy": "private",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleSelect",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleToggle",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "ToggleEvent"
                  }
                }
              ],
              "description": "Handle the toggle event of submenus.\nCloses all other open submenus when opening a submenu.\nResizes this menu to fit the submenu.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#checkSubmenuHasExpanded",
              "privacy": "private",
              "description": "Check if any submenu is expanded and update the container class accordingly.\nWhen the CSS :has() selector is supported, this can be done with CSS only.",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleFocusOut",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "FocusEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "field",
              "name": "keysUsed",
              "readonly": true,
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#handleKeyDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#getItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent | KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#getTabItem",
              "privacy": "private",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#setTabItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "tabItem",
                  "type": {
                    "text": "MediaChromeMenuItem"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "#selectItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "MediaChromeMenuItem"
                  }
                },
                {
                  "name": "toggle",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleMove",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "superclass": {
            "name": "MediaChromeMenu",
            "module": "/dist/menu/media-chrome-menu.js"
          },
          "tagName": "media-settings-menu",
          "customElement": true,
          "slots": [
            {
              "description": "Default slotted elements.",
              "name": "",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "An element shown at the top of the menu.",
              "name": "header",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "description": "An icon element indicating a checked menu-item.",
              "name": "checked-indicator",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "The Boolean disabled attribute makes the element not mutable or focusable.",
              "name": "disabled",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "The element `id` of the media controller to connect to (if not nested within).",
              "name": "mediacontroller",
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "ToggleEvent"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            },
            {
              "name": "change",
              "type": {
                "text": "Event"
              },
              "inheritedFrom": {
                "name": "MediaChromeMenu",
                "module": "dist/menu/media-chrome-menu.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "media-settings-menu",
          "declaration": {
            "name": "MediaSettingsMenu",
            "module": "dist/menu/media-settings-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "MediaSettingsMenu",
          "declaration": {
            "name": "MediaSettingsMenu",
            "module": "dist/menu/media-settings-menu.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MediaSettingsMenu",
            "module": "dist/menu/media-settings-menu.ts"
          }
        }
      ]
    }
  ],
  "package": {
    "name": "media-chrome",
    "description": "Custom elements (web components) for making audio and video player controls that look great in your website or app.",
    "version": "4.2.2",
    "author": "@muxinc",
    "homepage": "https://github.com/muxinc/media-chrome#readme",
    "license": "MIT"
  }
}
